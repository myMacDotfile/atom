{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 3a001522bbce7e2a5a44","webpack:///./src/atom/main.js","webpack:///external \"atom\"","webpack:///external \"atom-package-deps\"","webpack:///./src/atom/console/index.js","webpack:///./src/atom/popular-apis/popular-apis.js","webpack:///./src/atom/editor-tools/editor-tools.js","webpack:///./src/atom/quick-commands/quick-commands.js","webpack:///./src/atom/suggestion/provider.js","webpack:///./src/atom/quick-outline/quick-outline.js","webpack:///./src/atom/dialogs/assist-utils.js","webpack:///./src/atom/core/linter-ui.js","webpack:///./src/atom/shared-ast-initializer.js","webpack:///./src/atom/quick-commands/command-manager.js","webpack:///./src/atom/context-menu/contextMenu.js","webpack:///./src/atom/context-menu/quickFix.js","webpack:///./src/atom/context-menu/actions.js","webpack:///external \"url\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"atom-ui-lib\"","webpack:///external \"child_process\"","webpack:///external \"xmlhttprequest\"","webpack:///external \"mkdirp\"","webpack:///external \"raml-1-parser\"","webpack:///external \"raml-actions\"","webpack:///external \"atom-space-pen-views\"","webpack:///external \"underscore\"","webpack:///external \"raml-suggestions\"","webpack:///external \"raml-1-parser/dist/index\"","webpack:///external \"basarat-text-buffer\"","webpack:///./src/atom/util/ScrollViewUI.js","webpack:///./src/atom/core/atomWrapper.js","webpack:///./src/atom/quick-commands/quick-commands-ui.js","webpack:///./src/atom/quick-commands/code-commands.js","webpack:///./src/atom/editor-tools/outline-view.js","webpack:///./src/atom/core/tooltip-manager.js","webpack:///./src/atom/context-menu/commonContextActions.js","webpack:///./src/atom/editor-tools/outline-initializer.js","webpack:///./src/atom/util/unit.js","webpack:///./src/atom/core/editorManager.js","webpack:///./src/atom/dialogs/extractElementsDialog.js","webpack:///./src/atom/dialogs/moveElementsDialog.js","webpack:///./src/util/xmlutil.js","webpack:///./src/util/schemaGenerator.js","webpack:///./src/atom/console/console-view.js","webpack:///./src/atom/editor-tools/details-view.js","webpack:///external \"emissary\"","webpack:///external \"raml-outline\"","webpack:///external \"xmldom\"","webpack:///external \"yaml-ast-parser\"","webpack:///external \"react\"","webpack:///external \"xtend\"","webpack:///external \"popsicle\"","webpack:///./src/atom/dialogs/dialogs.js","webpack:///./src/atom/editor-tools/outline-common.js","webpack:///./src/util/index.js","webpack:///./src/util/pathwatcherProxy.js","webpack:///./src/atom/util/atom.js","webpack:///./src/atom/console/render.js","webpack:///./src/util/config/apiList.json","webpack:///./src/atom/editor-tools/details.js","webpack:///./src/atom/editor-tools/schemaUI.js","webpack:///external \"mime\"","webpack:///external \"know-your-http-well\"","webpack:///external \"remote\"","webpack:///external \"jsonix\"","webpack:///external \"w3c-schemas\"","webpack:///./src/Opt.js","webpack:///external \"marked\"","webpack:///external \"classnames\"","webpack:///external \"react-pure-render/component\"","webpack:///external \"pretty-data\"","webpack:///./src/atom/editor-tools/details2.js","webpack:///./src/util/pair.js","webpack:///external \"invariant\"","webpack:///./src/atom/editor-tools/suggestions-panel.js","webpack:///./src/atom/editor-tools/typeDisplay.js","webpack:///./src/atom/editor-tools/default-values.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","package_entry_point","Console","apiList","editorTools","quickCommands","provider","quickOutline","decl","linterUI","CompositeDisposable","sharedASTInitializer","commandManager","contextMenu","quickFixActions","actions","activate","state","install","then","subscriptions","add","atom","commands","api-workbench:popular-apis","showPopularApis","api-workbench:editor-tools","initEditorTools","api-workbench:console","toggle","api-workbench:go-to-definition","gotoDeclaration","api-workbench:find-usages","findUsages","api-workbench:quick-outline","show","api-workbench:quick-commands","showCommands","api-workbench:rename","renameRAMLElement","api-workbench:new-project","newProject","api-workbench:select-node","select","api-workbench:revalidate","revalidate","workspace","addOpener","opener","initialize","registerCommands","register","getProvider","provideLinter","consumeLinter","linterApi","initEditorObservers","deactivate","dispose","config","grammars","type","default","openConsoleInSplitPane","require","createConsoleView","opts","ConsoleView","RAMLConsoleView","isConsoleView","obj","getActivePaneItem","destroyActivePaneItem","editor","getActiveTextEditor","notifications","addInfo","get","indexOf","getGrammar","scopeName","removeConsoleForEditor","addConsoleForEditor","uri","getUriForEditor","previewPane","paneForURI","destroyItem","itemForURI","open","addConsoleForFile","filename","getUriForFilename","result","url","parse","protocol","host","pathname","err","decodeURI","substr","editorId","shouldSplit","getWorkspaceOptions","activatePane","searchAllPanes","split","undefined","openView","raml","pane","getActivePane","item","findOrCreateRightmostSibling","itemOpened","activateItem","Promise","resolve","workspaceOptions","view","setState","deserializers","name","deserialize","buildXHR","x","XMLHttpRequestConstructor","execProcess","logEnabled","console","log","messageBefore","logObj","childProcess","execSync","callPath","cwd","wrkDir","encoding","stdio","messageAfter","toString","trim","length","maxLogLength","substring","Math","min","onError","errLogEnabled","messageError","message","gitInstalled","errorOccured","ExecConfig","fileDialogUtils","getHome","info","callBack","section","UI","Icon","BOOK","buttonBar","hc","setPercentWidth","setStyle","addChild","label","okButton","button","ButtonSizes","NORMAL","ButtonHighlights","SUCCESS","NONE","destroy","addModalPanel","renderUI","cloneRepo","repo","dir","branch","defaultBranch","extractRepoName","mkdirp","sync","ok","error","repoPath","lastIndexOf","doSplit","RamlOutline","SplitDirections","RIGHT","__extends","this","d","b","__","constructor","hasOwnProperty","prototype","Object","create","path","fs","SC","fdUtils","XMLHttpRequest","_super","apply","arguments","disposables","getTitle","load","reposLink","sec","xhr","html","outer","home","apiListData","secHC","sett","a","openFolderDialog","newVal","setText","SETTINGS","TextClasses","HighLightClasses","HIGHLIGHT","branchLink","prompt","y","GIT_BRANCH","margin","l","list","uiLabel","REPO","pad","buttonCallback","existsSync","mkdirSync","git_url","output","pathsToOpen","uiButton","EXTRA_SMALL","attached","_isAttached","Scrollable","display","manager","EditorManager","editorToolsStatus","opened","aquireManager","updateAndSelect","node","_view","refresh","updateText","selectNode","value","newPane","BOTTOM","splitDown","TOP","splitUp","LEFT","splitLeft","splitRight","addItem","rp","project","detailsView","outlineView","_this","_initialized","updateCount","outlineCount","fire","_cleanOutline","performanceDebug","placeholder","window","onDidChangeActivePaneItem","e","updateEverything","addAutoCloseListener","getPath","currentEditor","getCurrentEditor","internalScheduleUpdateViews","count","setTimeout","updateViews","scheduleViewsUpdate","internalScheduleOutlineUpdate","updateOutline","scheduleOutlineUpdate","onDidDestroyPane","evt","edcount","getPaneItems","filter","ast","unit","_currentNode","global","cleanCache","paneForItem","_details","getOrCreateView","setUnit","getDetails","RamlDetails","updateDetails","update","reparseAST","_path","prj","getBuffer","createProject","dirname","setCachedUnitContent","basename","getText","addTextChangeListener","delta","cm","offset","end","replacementLength","text","buffer","start","positionForCharacterIndex","endPosition","setTextInRange","highLevel","isETPane","items","getItems","aw","fpane","pos","contents","setCursorBufferPosition","hnode","lowLevel","setViewsDisplayStyle","visible","element","style","isRaml","editorPath","extName","extname","patched","addListenersToEditor","characterIndexForPosition","getCursorBufferPosition","positionUpdated","cedit","onDidChange","t0","Date","getMilliseconds","t1","getLastCursor","onDidChangePosition","addListenersOnMove","movingPane","onDidAddPaneItem","event","moveItemToPane","setActiveItem","patchCurrentNode","n","getCurrentNode","setSelectedNode","unitPath","absolutePath","parent","anode","findById","posStart","getSelectedNode","cNode","ds","setSelection","d1","newPosition","currentPosition","findElementAtOffset","CommandManager","cc","registerQuickCommands","et","qcui","contextActions","QuickCommand","title","command","priority","when","registerAsAtomCommand","target","atomCommand","disposed","unregister","panel","SelectListView","cmd","qcmd","atomTarget","predicate","joinedCommands","commandId","getDynamicCommands","forEach","currentCommand","keys","map","key","sort","currentActions","calculateCurrentActions","TARGET_RAML_EDITOR_NODE","action","convertedQuickCommand","onClick","push","astProvider","suggestions","setDefaultASTProvider","onDidInsertSuggestion","triggerPosition","suggestion","annotation","txt","i","charAt","newPos","insert","replacementPrefix","extra","getSuggestions","request","editorState","AtomEditorState","suggest","FSProvider","prefix","getAstNode","clearLastChar","allowNull","bufferPosition","kind","search","determineCompletionKind","LocationKind","KEY_COMPLETION","ilevel","oldOfffset","pm","astNode","attr","_","find","attrs","at","property","isKey","saveUnit","unitText","openedEditor","getTextEditors","writeFileSync","selector","disableForSelector","filterSuggestions","inclusionPriority","excludeLowerPriority","contentDirName","content","contentPath","dirName","childPath","exists","checkPath","contextPath","relativePath","isDirectory","dirPath","stat","statSync","readDir","readdirSync","existsAsync","readDirAsync","readdir","isDirectoryAsync","stats","textEditor","getBaseName","getOffset","showQuickOutline","QuickOutlineDialog","ed","filePath","ext","tooltipManager","isAllowedExtension","outline","_editor","extraContent","s","zz","nodeToSelect","vc","createTree","root","selection","elements","setDisabled","model","getSource","setCursorScreenPosition","addClass","cancel","buttonSimple","PRIMARY","tabIndex","onkeypress","keyCode","focus","createGlobalSchema","r","t","range","universe","sc","stubs","createStubNode","attrOrCreate","setValue","sdir","shFile","createGlobalSchemaFromNameAndContent","schp","index_1","universeHelpers","isRAML10Node","createGlobalSchemaFromNameAndContent10","isRAML08Node","createGlobalSchemaFromNameAndContent08","createSchemaFile","schemaPath","getActiveEditor","definition","universes","Universe10","TypeDeclaration","Api","properties","types","Universe08","GlobalSchema","schemas","saveExample","createRAMLFile","version","baseUri","sample","raml1","apiLines","typesLines","resourceLines","concat","join","NewProjectDialog","splitOnLines","lines","match","cleanEmptyLines","rs","stripIndent","indent","line","activeEditor","moveOut","h","MoveToNewFileDialog","relint","VALUE_COMPLETION","hlnode","getAdapter","services","RAMLPropertyService","targets","referenceTargets","findUsagesImpl","reverse","ua","asAttr","RAMLService","getKeyProp","nameId","SEQUENCE_KEY_COPLETION","oldValue","attrValue","renameInProperty","contentToReplace","replaceWith","oldPropertyValue","structuredValue","oldPropertyStringValue","valueName","convertedHighLevel","toHighLevel","found","isAnnotationType","prop","getKey","attribute","newValue","replace","newPropertyStringValue","setKey","up","def","UserDefinedProp","withRange","StringType","withFromParentKey","getDeclaringNode","createASTPropImpl","setSelectedBufferRange","f","updateContent","results","query","sv","setInput","SearchResultView","addBottomPanel","findDeclaration","canBeReference","deepFindNode","parentProperty","isUsesProperty","PATH_COMPLETION","toLowerCase","openLowLevelNode","SpacePenViews","apititle","_raml1","_defStructure","_createSampleResource","sourceValue","generateDefaultProjectParentFolder","validateProjectLocation","toValidate","errorStatus","parentDirectory","okStatus","validateTitle","h3","Panel","LayoutType","BLOCK","statusLabel","ERROR","slf","CustomField","setDisplay","code","StatusCode","projectLocationInput","texfField","getBinding","addValidator","addListener","st","setIcon","BUG","titleStatusLabel","titleStatusMessage","titleTextField","status","r1","checkBox","getValue","r2","r3","NO_HIGHLIGHT","onOk","createIfNotExist","ps","GIST_NEW","errorLabel","destination","isError","dump","ci","li","keyEnd","endPart","startPart","vl","_result","isAttached","div","class","tabindex","SEARCH","p1","getLowLevelStart","res","openPropertyNode","SUBTLE","row","SMALL","ScrollView","p2","getLowLevelEnd","column","relintLater","linterApiProxy","rr","addLoadCallback","observeTextEditors","lintersToDestroy","linter","destroyLinter","deleteMessages","deleteLinter","setupLinterCallback","callback","linterCallback","removeLinterCallback","execLinterCallback","lint","actualLint","hasAsyncRequests","isRAMLUnit","unitUtils","getTime","editorManager","Acceptor","tab","trace","gatherValidationErrors","l1","combErrors","warnings","errors","validate","utils","TextBuffer","grammarScopes","scope","lintOnFly","lowerCase","getEditorLinter","setMessages","onDidDestroy","original","JSON","stringify","newKey","tr","mes","ms","primaryUnit","buffers","accept","issue","transformIssue","issueType","isWarning","issuesArray","extras","issues","convertParserIssue","iType","buf","acceptUnique","PointOfViewValidationAcceptorImpl","editorProvider","gotEditorFromOutline","getASTRoot","selectedNode","parser","lastPosition","getEndPosition","astModifier","deleteNode","forEachViewer","remove","resetChildren","commonContextActions","outlineInitializer","addCommand","tag","listCommands","disposable","commandInfo","commandIdToCommandInfo","tagCommands","tagToCommands","deleteUnmanagedCommand","registeredCommands","selectorBasedListenersByCommandName","deleteManagedCommand","infoIndex","currentInfo","index","splice","deleteCommandsByTag","commandName","initialized","packages","activatePackage","listener","prePanelDisplay","listenersArray","sequenceNumber","Error","registerContributor","contributor","contributors","DYNAMIC_COMMAND_TAG","contributorId","calculationStarted","calculateItems","calculationFinished","originalShowForEvent","showForEvent","preMenuDisplay","postMenuDisplay","treeRoots","calculateMenuItemsTree","nodeSets","cleanExistingSets","itemSet","findOrCreateItemSet","menuItem","constructAtomMenuItem","children","submenu","child","childMenuItem","existingSet","itemSets","currentSet","DYNAMIC_SET_TAG","specificity","usedSelectors","existingSets","hlConv","CreateGlobalSchemaDialog","addAction","category","stateCalculator","CreateGlobalSchemaStateCalculator","shouldDisplay","move","MoveElementsDialog","MoveResourceStateCalculator","extract","ExtractTypesAndTraitsDialog","ExtractResourceTypeStateCalculator","ExtractTraitStateCalculator","ExtractJSONSchemaToTypeDialog","ConvertJsonSchemaToTypeStateCalculator","ExtractLibraryDialog","ExtractLibraryStateCalculator","ExtractOverlayDialog","ExtractOverlayStateCalculator","ModifyOverlayDialog","ModifyOverlayStateCalculator","PullUpDialog","PullUpStateCalculator","ExtractSupertypeDialog","ExtractSupertypeCalculator","su","schema","assistUtils","AbstractDialogWithValidation","parentNode","performOk","createBody","getParentNode","printDetails","mainSection","createValidationIndicator","createButtonBar","rootAtomPanel","performValidation","validationMessage","parentPanel","getNodeId","parentId","sameName","directChildren","ind","nodesEqualById","node1","node2","isParentOf","potentialParent","potentialChild","current","calculate","generalState","getGeneralState","completionKind","highLevelNode","isResourceType","CommonASTStateCalculator","isSchemaProperty","typeNameTextField","schemaName","api","createSchemaModelGenerator","generateTo","schemaNameTextField","getDefaultSchemaName","schemaContent","schemaFilePath","getSchemaFilePath","globalSchemaType","schemaNode","getSchemaRelativePath","schemaDir","schemaExtension","determineSchemaExtension","fileName","ExpandSignatureStateCalculator","isMethodType","MoveContentStateCalculator","isElement","asElement","isAttr","isRAML08Attribute","isOverlayType","AbstractMoveTypePropertiesCalculator","isTypeNode","isTypeDeclarationType","isTypesProperty","superTypes","findUserDefinedSupertypes","GenerateExampleCalculator","isExampleProperty","typeAttr","uiActions","registerMoveContentsAction","uiFinishedCallback","registerCompleteBodyAction","FillBodyDialog","xmlutil","shemagen","errorMessage","canWrite","accessSync","W_OK","exception","needXML","needJSON","jsexample","xmlexample","xmlschema","jsschema","updateButtons","createButton","em","getJSONSchema","getXMLSchema","tf","TabFolder","createTextSection","setOnSelected","selectedComponent","te","caption","lang","hs","setCaption","setId","ts","AtomEditorElement","setMini","setGrammar","generateSchema","setSelectedIndex","uiState","_children","v","scroll","top","left","scrollTop","scrollLeft","size","bottom","clientHeight","right","clientWidth","changed","ui","setParent","_parent","removeChild","doRender","innerRenderUI","selfRender","document","createElement","el","appendChild","Workspace","arg","addRightPanel","args","aspv","_confirmed","filterKey","getFilterKey","viewForItem","hide","confirmed","getSelectedItemView","storeFocusedElement","setItems","focusFilterEditor","getResourceParent","isResourcesProperty","isResourceTypesProperty","isResourceTypeType","getMethodParent","isTraitType","isUserDefined","getParent","isAssignableFrom","toResource","dialogs","newResource","AddNewResourceStateCalculator","newApi","CreateNewAPIStateCalculator","addSimpleAction","newMethod","newNode","getEditor","isApiType","getNodeType","outlineCommon","isResource","HLNodeType","Resource","isOther","Trait","isResourceTypeOrTrait","Type","isSchemaOrType","Schema","Unknown","fullStructurePath","fullPath","simpleTree","input","selectionListener","categoryName","viewer","treeViewer","HLRenderer","setBasicLabelFunction","setKeyProvider","addSelectionListener","set","subTrees","ramlOutline","getStructureForAllCategories","resourcesModel","ResourcesCategory","typesModel","SchemasAndTypesCategory","traitsModel","ResourceTypesAndTraitsCategory","otherModel","OtherCategory","selectionChanged","other","folder","selectedTab","getSelection","SelectionChangedEvent","customizePanel","_rs","sender","_viewers","getNodePType","_selectedNode","force","attach","$this","$","outerHTML","iconNameToIconEnum","iconName","textHighlightNameToTextClass","highlightName","render","isTypedStructureNode","NodeType","ATTRIBUTE","ARROW_SMALL_LEFT","icon","DASH","highLight","textStyle","typeText","WARNING","getFromShadowDom","rootElement","querySelectorAll","sp","editorView","pixelPositionFromMouseEvent","clientX","clientY","linesClientRect","getBoundingClientRect","screenPositionFromMouseEvent","getModel","screenPositionForPixelPosition","screenPositionFromMouse","views","getView","displayBuffer","getScrollTop","getScrollLeft","clientRect","emissary","Subscriber","View","options","init","defineProperty","enumerable","configurable","TooltipView","rect","body","append","updatePosition","outlet","inner","fadeTo","offsetWidth","width","css","white-space","offsetHeight","height","initializeActionSupport","intializeStandardActions","initializeActionBasedMenu","editorCommandContributor","setEditorProvider","setASTProvider","setASTModifier","keyProvider","createCategories","createDecorations","addCategoryFilter","addDecoration","RESOURCE","PRIMITIVE_SQUARE","METHOD","PRIMITIVE_DOT","SECURITY_SCHEME","FILE_SUBMODULE","ANNOTATION_DECLARATION","TAG","TYPE_DECLARATION","FILE_BINARY","DOCUMENTATION_ITEM","man","createSmallSelectionPanel","float","createVIewer","setTagName","typeNode","nodeType","localType","addUserDefinedSupertypes","typesToAddTo","superType","isWebPath","str","util","stringStartsWith","assist","yaml","universeModule","_resourceType","filters","NodeFilters","isErr","stub","filterFunc","removals","createNodeStub","v1","moveRight","z","moveLeft","allRight","allLeft","ev","nodesToMove","unregisteredNode","nodeToMove","registeredNode","movedNode","newTypeName","stub2","typeOrTraitValueToReplace","replacements","superAttributeName","ResourceType","is","superAttributes","attributes","superAttrProperty","superAttribute","superAttributeLL","valueStart","valueEnd","typeOrTraitValueToReplaceWith","stubAttributeValue","stubSuperAttribute","createAttr","cl","totalRepalcement","isMultiValue","totalReplacement","rtypes","traits","k","copy","isUnknown","pc","Method","AbstractSecurityScheme","LOCK","isAnnotationTypesProperty","Parameter","ObjectTypeDeclaration","nm","DocumentationItem","tp","AbstractlMoveElementsDialog","movedNodes","checkNode","nodeToFilter","visitChildren","canBeMoved","createHeader","stubTreeRoot","extractSection","stubRoot","createStub","createPanels","createMovedNodesTree","parents","currentParent","currentStubPointer","stubAnalogueOfParent","currentStubElement","createMovedNode","originalNode","createStubRoot","createMap","createASTNodeImpl","leftDisplayFilter","nodeToCheck","leftPanel","rightDisplayFilter","rightPanel","mergeTrees","sourceTreeRoot","targetTreeRoot","mergeProperties","mergeNode","sourceNode","targetParent","targetChildren","analogueChild","sourceChild","currentNode","prrr","blah","isTp","isGlobalSchemaType","isSecuritySchemaType","getUniverse","nodeClass","Library","libraryPath","libraryNamespace","getLibraryQualifier","originalValue","trimmed","getDefaultLibraryNamespace","generateDefaultLibraryPath","libraryUnit","createLibraryUnit","libraries","globalDeclarations","libraryClass","librariesToExport","library","findReferences","reference","currentPath","_node","isAbsolute","currentDirectory","relative","createMapping","stubLibrary","wrapperNode","addToProp","FragmentDeclaration","uses","updateLibraryUnit","modifiedUnits","libraryQualifier","movedNodeReferences","oldStringValue","textToReplace","textToReplanceWith","newStringValue","modifiedPropertyUnit","modifiedUnit","addUsesNode","getLibraryPath","currentFilePath","getLibraryName","targetLibraryPath","targetLibraryAst","getKind","existingFirstUsesNode","childAny","isLibraryType","usesMapping","sequenceFound","Kind","MAPPING","SEQ","positionToInsert","insertTextToActiveEditor","titleNode","isStringTypeType","isTitleProperty","createUsesNode","usesProperty","usesNode","Overlay","overlayPath","generateDefaultOverlayPath","overlayUnit","createOverlayUnit","updateOverlayUnit","getOverlayPath","originalUnitPath","addMasterReference","targetOverlayPath","targetOverlayAst","masterRefAttribute","overlayASTRoot","masterASTRoot","createMasterAST","overlayASTLeafNodes","calculateLeafNodes","getOverlayUnit","masterAbsolutePath","findMasterAbsolutePath","masterUnit","toReportTo","overlayAbsolutePath","targetPath","AbstractMoveTypePropertiesDialog","sourceType","getTargetType","sourceUnit","targetType","targetUnit","postMerge","superTypeNames","findSuperTypeNames","Select","selectedSuperType","setOptions","foundSuperType","superTypeName","generateDefaultSupertypeName","astRoot","typeWrapper","LibraryBase","modify","createObjectTypeDeclaration","typeStub","superValidate","hl","isEmpty","xmlToJson","xml","j","nodeName","nodeValue","hasChildNodes","childNodes","old","cleanupText","cleanupJson","parseXML","DomParser","DOMParser","parsed","parseFromString","mediaType","generator","JsonSchemaGenerator","schemaObject","schemaString","sch","pass","valueType","detectType","Array","isArray","passArray","passObject","registerProperty","propName","array","template","defaults","Atom","React","pathwatcher","extend","popsicle","AtomUtil","Render","isParsing","pageState","paths","editors","resolver","ConsoleResolver","readFileSync","parameters","headers","uriParameters","baseUriParameters","queryParameters","bodies","expander","expandTraitsAndResourceTypes","cloneWithResolver","resolveEditor","resolveFilename","watchEditor","stopWatchingPath","getEditorById","trigger","loadRAML","onDidActivateInitialPackages","file","File","getEditorByPath","watchForFile","watchFile","onDidStopChanging","updateUnit","cb","stopWatchingEditor","onDidChangePath","watcher","close","watch","deleteUnit","watchForPath","newFilename","stopWatching","navigate","getElementById","abortRequest","props","setParameter","group","execRequest","setPageState","requestError","securityScheme","securitySchemes","defaultBaseUriParameters","toDefaultParameters","allBaseUriParameters","defaultUriParameters","allUriParameters","methodHeaders","methodQuery","completeRelativeUri","describedBy","requestOptions","method","User-Agent","usedParameters","use","plugins","unzip","concatStream","progress","requestProgress","completed","response","requestResponse","toJSON","params","parameter","param","abort","updateRAML","baseUnit","getUnit","getFilename","originalRoot","serialize","deserializer","unmountComponentAtNode","groupState","getURI","FSResolverImpl","contentAsync","reject","readFile","data","listAsync","files","isSchema","details","schemaUI","allowStructureChanges","innerHTML","container","setSchema","wasSchema","schemaView","ssto","clear","errLabel","applyStyling","setInterval","schemaText","_updatePreview","treeView","textView","smallEditor","includePath","sm","includeReference","_updateEditor","_schemaPreview","schemaTab","GIT_MERGE","FILE_TEXT","oldItem","detach","setResource","displayEmpty","updateDetailsPanel","Button","LARGE","REPO_CLONE","getDialog","dialog","remote","showError","showMessageBox","getCurrentWindow","buttons","detail","getMethodDescriptions","_methodDescriptions","methodsProperty","resources","ResourceBase","methods","enumOptions","khttp","desc","description","getStatusCodeDescriptions","_statusCodeDescriptions","statusCodes","tfTitle","TextField","tfVersion","tfBaseURI","setTabIndex","cbSample","CheckBox","cbRaml1","DASHBOARD","_dialog","getActualField","mdesc","cdesc","NO_RESPONCE","NO_RESPONCE_BT","bodyType","mdescLabel","LabelField","cdescLabel","methodSelect","SelectField","responseSelect","responseTypeSelect","typeOfValue","realBodyType","bodyTypeSelect","bodyTypeOfValue","actualType","bodyTypeString","__ret","typeValues","responseSection","CODE","oldNode","elementsOfKind","methodNode","createMethodStub","bodyNode","createBodyStub","codeNode","createResponseStub","getStringValue","typeEditDialog","onDone","typePanel","typeProperty","toPropagate","svMap","typeList","typeName","EMPTY_VALUE","genStructuredValue","propagateValues","allProperties","CIRCUIT_BOARD","pair","Map","values","val","pairs","enumEditDialog","_cp","renderer","GIT_COMMIT","TRASHCAN","ListView","addKeyPressListener","LIST_UNORDERED","calculatesParentURIPath","resource","segment","uriLable","resourceParent","parentsPath","uriTF","methodsPanel","ch","hcp","createResourceStub","resourceTypeProp","qName","makeLabelNextToField","hideLabel","details2","buildItem","setTitle","showDescription","_unit","traitsEditDialog","tabs","sel","traitProperty","returnv","trait","traitName","traitValue","traitNode","returnee","enabled","tcb","traitPanel","nameOrValue","schemaEditDialog","NEW_SCHEMA","refValue","_schemaText","sname","timeout","preview","intervalId","MICROSCOPE","NoSchema","InvalidSchema","_dialog2","highlight","INFO","newText","isChanged","validateSchema","saveSchema","clearInterval","createSchema","schemaType","getType","filterJSON","extensions","filterXML","projectFolder","showSaveDialog","defaultPath","fname","ename","rpath","markdown","exampleEditorDialog","projectPath","refPath","openFileDialogModal","reui","onclick","blur","nextSibling","_closeDialog","_dialogPanels","pop","mdp","filterAll","saveFileDialogModal","toFocus","stretch","isPrimary","addStatusListener","eventListener","parentElement","getComputedStyle","parseFloat","overflowY","addEventListener","removeEventListener","msg","onChange","defs","BodyLike","sh","enumValues","prohibit","resourceTypes","flattenArrayOfObjects","xs","Opt","toTuples","fromTuples","tuples","tap","kv","iter","indexed","objects","delKey","shallowCopy","stringEndsWith","dif","lazypropkeyfilter","lazyprop","func","ready","lazyprops","keyfilter","ifInstanceOf","Function","vf","iff","isRAMLUrl","getAllRequiredExternalModulesFromCode","mods","RegExp","exec","unique","isEssential","firstToUpper","q","toUpperCase","updateObject","source","addNewFields","keySet","replaceMap","prev","defined","isInstance","C","collectInstancesOf","collectInstancesOfInMap","asArray","flatMap","flatten","xss","takeWhile","serial","String","getGrammerFromMime","mimeType","grammarsByScopeName","extension","mime","getGrammars","grammar","fileTypes","codeToEditorElement","editorElement","setAttributeNode","createAttribute","removeAttribute","getDecorations","define","text/xml","isRAML10","RAMLVersion","isRAML08","plural","singular","getCaseless","getNodeLabel","highLevelAst","NodeKind","NODE","wrapper","RamlWrapper1","isDocumentationItem","RamlWrapper08","isApi","isExtension","isOverlay","isXML","isJSON","localParameters","baseUriParams","ownerApi","absoluteUriParameters","condition","marked","classnames","PureComponent","pretty","api10","api08","atomUtil","BULLET_TEXT","METHOD_CLASS_MAP","get?","post","post?","delete","delete?","put","put?","patch","patch?","isSupportedNode","isObjectTypeDeclaration","isResponse","isTypeDeclaration","isLibrary","isSecuritySchemePart","isOAuth1SecurityScheme","isOAuth2SecurityScheme","renderNode","isTrait","isAbstractSecurityScheme","SecurityScheme","Documentation","isMethod","Root","Block","TitleText","href","wrapperClassName","renderBreadcrumb","renderedNode","parts","nodes","unshift","lastNode","className","flex","idNode","wrapBody","overflow","wrapContent","breadcrumb","flexDirection","Loading","Errors","referencedNode","findReferencedValue","MissingReference","ResourceTypesAndTraits","documentation","InsetPanel","marginTop","ResourceChildren","MethodButton","verb","references","SimpleText","usage","AbstractMethod","References","OpenInEditor","formatNode","AbstractResource","MarkdownBlock","ParametersBlock","displayName","relativeUri","ParameterInfo","marginRight","TypeInfo","hasNamedSuperTypes","namedTypeFound","renderDefinition","renderNameId","isRequired","hasUnionInHierarchy","unionInHierarchy","leftType","rightType","hasArrayInHierarchy","arrayInHierarchy","componentType","runtimeDefinition","hasGenuineUserDefinedTypeInHierarchy","isGenuineUserDefinedType","genuineUserDefinedTypeInHierarchy","summary","isFileTypeDeclaration","minLength","maxLength","isIntegerTypeDeclaration","minimum","maximum","required","renderBody","schemaPart","createSchemaPart","createExampleParts","exampleToString","example","exampleValue","runtimeType","examples","exampleName","MarkupBlock","asString","isBodyLike","exampleNode","exampleContent","bodyAsType","hasExternalInHierarchy","externalType","externalInHierarchy","methodBodies","responses","demo","canDemo","MethodDemo","contentType","allSecuredBy","currentSecurityScheme","EditParameters","change","TextEditor","mini","marginLeft","max","isNaN","Response","statusText","rawHeaders","Markup","_prop","_groupName","componentDidMount","updateModel","refs","getDOMNode","cleanup","setPlaceholderText","readonly","setAttribute","gutter","position","cursors","getBufferPosition","setBufferPosition","componentWillUnmount","componentDidUpdate","ref","isXml","isJson","isCss","canPrettify","pd","json","checked","NavigateLabel","getName","cursor","securedBy","openInEditor","panes","getPanes","activePane","hasUnit","dangerouslySetInnerHTML","__html","full_name","owner","login","avatar_url","gravatar_id","html_url","followers_url","following_url","gists_url","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","site_admin","private","fork","forks_url","keys_url","collaborators_url","teams_url","hooks_url","issue_events_url","assignees_url","branches_url","tags_url","blobs_url","git_tags_url","git_refs_url","trees_url","statuses_url","languages_url","stargazers_url","contributors_url","subscribers_url","subscription_url","commits_url","git_commits_url","comments_url","issue_comment_url","contents_url","compare_url","merges_url","archive_url","downloads_url","issues_url","pulls_url","milestones_url","notifications_url","labels_url","releases_url","created_at","updated_at","pushed_at","ssh_url","clone_url","svn_url","homepage","stargazers_count","watchers_count","language","has_issues","has_downloads","has_wiki","has_pages","forks_count","mirror_url","open_issues_count","forks","open_issues","watchers","default_branch","permissions","admin","pull","updateTextOnDone","cfg","styles","emitter","handlersByEventName","sadd","sremove","schange","cfgCh","addGrammar","updateGrammar","emptyGrammarListeners","nullGrammar","empty","rend","field","focusedPosition","focusedPropertyName","getSchemaType","schemautil","propertyInfo","isValueProperty","ipath","isMulti","rangeName","ret","include","stringView","DataElement","filterOut","SchemaRenderer","setComparator","getSchemaTree","typeString","schemaModel","rootElements","schemaTree","getXMLSchemaTree","parseSchema","XSD_1_0","context","jsonix","Jsonix","Context","unmarshaller","createUnmarshaller","unmarshalString","schemaObj","getRootElements","extractName","typeObj","localPart","objValue","groups","elementGroups","attributeGroups","simpleTypes","complexTypes","ElementDescription","getTSType","xmltype","XSD_2_TS_TYPE_MAP","roots","getSType","isSimple","elem","tc","QUESTION","TypeDescription","_name","_isSimple","_object","object","isChoice","elementObjects","collectElements","complexContent","groupRef","groupDef","AttributeDescription","base","baseObj","restriction","resExt","typeObject","sType","cType","typeOpt","isDefined","getOrThrow","containers","gr","PropertyDescription","optional","isAttribute","otherAttributes","maxOccurs","mo","parseInt","minOccurs","ENTITIES","ENTITY","ID","IDREF","IDREFS","Name","NCName","NMTOKEN","NMTOKENS","normalizedString","QName","string","token","date","dateTime","duration","gDay","gMonth","gMonthDay","gYear","gYearMonth","time","anyURI","base64Binary","hexBinary","NOTATION","boolean","double","byte","decimal","int","integer","long","negativeInteger","nonNegativeInteger","nonPositiveInteger","positiveInteger","short","unsignedLong","unsignedInt","unsignedShort","unsignedByte","globalEmptyOpt","invariant","_value","_isDefined","_isEmpty","_arr","toArray","getOrElse","getOrElseF","equals","fn","escapeValue","domain","universehelpers","isDocumentationProperty","isUsageProperty","isDescriptionProperty","isDisplayNameProperty","isAnnotationsProperty","isIsProperty","isSecuredByProperty","isTypeProperty","isTypeExpr","isProtocolsProperty","addExampleControl","exampleElement","isYAML","addItemToCategory","LowLevelTreeField","isJSONString","ExampleField","isXMLString","XMLExampleField","updateType","propertiesAllowedToUse","TopLevelNode","setDescription","isFragment","fragmentName","getFragmentDefenitionName","allSuperTypes","isNameProperty","ExampleSpec","isBooleanTypeType","isMarkdownStringType","StructuredField","inheritedContent","JSONSchemaField","XMLSchemaField","vls","valueOptions","TypeSelectBox","SelectBox","SimpleMultiEditor","PropertyEditorInfo","CheckBoxField","MarkdownField","isTypeDeclarationSibling","isExamplesProperty","exampleElements","exampleElementName","currentExample","ActionsItem","visibleActions","cats","groupBy","cat","ContextActionsItem","TypeDisplayItem","associatedType","isExternal","typeDisplay","defaultValues","resourceRegistry","Item","_title","listeners","needsSeparateLabel","removeListener","setError","clearErrors","lastSelectedCaption","Category","plainChildren","categories","it","createSection","descriptionLabel","contributeTop","wrappedChild","createWrappedChild","subCategories","remap","newCats","showHeader","Section","pnl","firstLabel","inRender","ep","subCategoryByNameOrCreate","_options","_panel","tabsCount","header","INBOX","prInfo","isDescriminator","newExtras","kp","keyItem","fld","setStatus","parsedType","exampleMeta","metaInfo","meta","validateObject","validateSelf","getAnnotationTypeRegistry","getErrors","createIssue","notFound","CheckBox2","setLabelWidth","rendered","fromEditorToModel","getDefaultValue","hasDefault","toLocalValue","av","toUIValue","actualUnit","apath","inputValue","fromModelToEditor","WrapPanel","createField","np","valueDocProvider","ac","lbl","newDoc","ww","setValues","generateSuggestionsPanel","CHECKLIST","MarkdownFieldUI","onchange","setLabelHeight","setRequired","XMLField","JSONField","oldNames","savedAttrs","isAllowedTypeToReplaceFacets","addTypeFacets","names","facetName","currentTypeDef","StringTypeDeclaration","BooleanTypeDeclaration","NumberTypeDeclaration","IntegerTypeDeclaration","TreeField","getChildren","inputV","pr","stvalue","tm","isBodyProperty","sug","suggester","getOftenKeys","KeyValuePair","mappings","volume","callbackfn","isMerged","includesContents","inserter","Inserter","enums","rn","MethodBase","findBuiltInValueType","isValueType","isBuiltIn","getValueTypeDisplayName","builtinValueType","getTypeDisplayName","asUnion","wn","renderType","rf","getRepresentationOf","facets","getFixedFacets","propertyName","LINK","universesInfo"],"mappings":"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","file":"main.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar Console = __webpack_require__(3);\n\tvar apiList = __webpack_require__(4);\n\tvar editorTools = __webpack_require__(5);\n\tvar quickCommands = __webpack_require__(6);\n\tvar provider = __webpack_require__(7);\n\tvar quickOutline = __webpack_require__(8);\n\tvar decl = __webpack_require__(9);\n\tvar linterUI = __webpack_require__(10);\n\tvar CompositeDisposable = __webpack_require__(1).CompositeDisposable;\n\tvar sharedASTInitializer = __webpack_require__(11);\n\tvar commandManager = __webpack_require__(12);\n\tvar contextMenu = __webpack_require__(13);\n\tvar quickFixActions = __webpack_require__(14);\n\tvar actions = __webpack_require__(15);\n\tvar package_entry_point;\n\t(function (package_entry_point) {\n\t    var subscriptions = new CompositeDisposable();\n\t    function activate(state) {\n\t        __webpack_require__(2).install('api-workbench', true)\n\t            .then(function () {\n\t            subscriptions.add(atom.commands.add('atom-workspace', {\n\t                'api-workbench:popular-apis': apiList.showPopularApis,\n\t                'api-workbench:editor-tools': editorTools.initEditorTools,\n\t                'api-workbench:console': Console.toggle,\n\t                'api-workbench:go-to-definition': decl.gotoDeclaration,\n\t                'api-workbench:find-usages': decl.findUsages,\n\t                'api-workbench:quick-outline': quickOutline.show,\n\t                'api-workbench:quick-commands': quickCommands.showCommands,\n\t                'api-workbench:rename': decl.renameRAMLElement,\n\t                'api-workbench:new-project': decl.newProject,\n\t                'api-workbench:select-node': decl.select,\n\t                'api-workbench:revalidate': decl.revalidate\n\t            }));\n\t            subscriptions.add(atom.workspace.addOpener(Console.opener));\n\t            //subscriptions.add(atom.workspace.addOpener(RamlScriptReport.opener))\n\t            commandManager.initialize();\n\t            contextMenu.initialize();\n\t            sharedASTInitializer.initialize();\n\t            quickCommands.registerCommands();\n\t            quickFixActions.initialize();\n\t            actions.register();\n\t            editorTools.initEditorTools();\n\t        });\n\t    }\n\t    package_entry_point.activate = activate;\n\t    function getProvider() {\n\t        return provider;\n\t    }\n\t    package_entry_point.getProvider = getProvider;\n\t    function provideLinter() {\n\t        return linterUI;\n\t    }\n\t    package_entry_point.provideLinter = provideLinter;\n\t    function consumeLinter(linterApi) {\n\t        subscriptions.add(linterUI.initEditorObservers(linterApi));\n\t    }\n\t    package_entry_point.consumeLinter = consumeLinter;\n\t    function deactivate() {\n\t        subscriptions.dispose();\n\t    }\n\t    package_entry_point.deactivate = deactivate;\n\t    package_entry_point.config = {\n\t        grammars: {\n\t            type: 'array',\n\t            default: [\n\t                'source.raml'\n\t            ]\n\t        },\n\t        openConsoleInSplitPane: {\n\t            type: 'boolean',\n\t            default: true\n\t        }\n\t    };\n\t})(package_entry_point || (package_entry_point = {}));\n\tmodule.exports = package_entry_point;\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-package-deps\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar url = __webpack_require__(16);\n\tvar ConsoleView = __webpack_require__(44);\n\tatom.deserializers.add({\n\t    name: 'RAMLConsoleView',\n\t    deserialize: function (state) {\n\t        if (state) {\n\t            return createConsoleView(state);\n\t        }\n\t    }\n\t});\n\tfunction createConsoleView(opts) {\n\t    return new ConsoleView.RAMLConsoleView(opts);\n\t}\n\texports.createConsoleView = createConsoleView;\n\tfunction isConsoleView(obj) {\n\t    return obj instanceof ConsoleView.RAMLConsoleView;\n\t}\n\texports.isConsoleView = isConsoleView;\n\tfunction toggle() {\n\t    if (isConsoleView(atom.workspace.getActivePaneItem())) {\n\t        atom.workspace.destroyActivePaneItem();\n\t        return;\n\t    }\n\t    var editor = atom.workspace.getActiveTextEditor();\n\t    if (!editor) {\n\t        atom.notifications.addInfo('The API Console can only be opened when focused on a RAML file editor.');\n\t        return;\n\t    }\n\t    var grammars = atom.config.get('api-workbench.grammars') || [];\n\t    if (grammars.indexOf(editor.getGrammar().scopeName) === -1) {\n\t        atom.notifications.addInfo('The API Console can only be opened with focus on a RAML file.');\n\t        return;\n\t    }\n\t    if (!removeConsoleForEditor(editor)) {\n\t        addConsoleForEditor(editor);\n\t        return;\n\t    }\n\t}\n\texports.toggle = toggle;\n\tfunction removeConsoleForEditor(editor) {\n\t    var uri = ConsoleView.RAMLConsoleView.getUriForEditor(editor);\n\t    var previewPane = atom.workspace.paneForURI(uri);\n\t    if (previewPane) {\n\t        previewPane.destroyItem(previewPane.itemForURI(uri));\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.removeConsoleForEditor = removeConsoleForEditor;\n\tfunction addConsoleForEditor(editor, state) {\n\t    return open(ConsoleView.RAMLConsoleView.getUriForEditor(editor), state);\n\t}\n\texports.addConsoleForEditor = addConsoleForEditor;\n\tfunction addConsoleForFile(filename, state) {\n\t    return open(ConsoleView.RAMLConsoleView.getUriForFilename(filename), state);\n\t}\n\texports.addConsoleForFile = addConsoleForFile;\n\tfunction opener(uri) {\n\t    try {\n\t        var result = url.parse(uri);\n\t        var protocol = result.protocol;\n\t        var host = result.host;\n\t        var pathname = result.pathname;\n\t    }\n\t    catch (err) {\n\t        return;\n\t    }\n\t    if (protocol !== 'raml-console:') {\n\t        return;\n\t    }\n\t    try {\n\t        pathname = decodeURI(pathname || '').substr(1);\n\t    }\n\t    catch (err) {\n\t        return;\n\t    }\n\t    if (host === 'editor') {\n\t        return createConsoleView({ editorId: pathname });\n\t    }\n\t    return createConsoleView({ filename: pathname });\n\t}\n\texports.opener = opener;\n\tfunction shouldSplit() {\n\t    return atom.config.get('api-workbench.openConsoleInSplitPane');\n\t}\n\tfunction getWorkspaceOptions() {\n\t    return {\n\t        activatePane: false,\n\t        searchAllPanes: true,\n\t        split: shouldSplit() ? 'right' : undefined\n\t    };\n\t}\n\tfunction openView(raml, state) {\n\t    var pane = atom.workspace.getActivePane();\n\t    var item = createConsoleView({ raml: raml, state: state });\n\t    // TODO(blakeembrey): Fix RAML instance passed in, RAML 0.8 interface is dead.\n\t    if (shouldSplit()) {\n\t        pane = pane.findOrCreateRightmostSibling();\n\t    }\n\t    atom.workspace.itemOpened(item);\n\t    pane.activateItem(item);\n\t    return Promise.resolve(item);\n\t}\n\texports.openView = openView;\n\tfunction open(uri, state) {\n\t    var workspaceOptions = getWorkspaceOptions();\n\t    var previousActivePane = atom.workspace.getActivePane();\n\t    return atom.workspace.open(uri, workspaceOptions)\n\t        .then(function (view) {\n\t        view.setState(state);\n\t        return view;\n\t    });\n\t}\n\t\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar path = __webpack_require__(17);\n\tvar fs = __webpack_require__(18);\n\tvar UI = __webpack_require__(19);\n\tvar SC = __webpack_require__(30);\n\tvar editorTools = __webpack_require__(5);\n\tvar childProcess = __webpack_require__(20);\n\tvar atom = __webpack_require__(31);\n\tvar fileDialogUtils = UI.fdUtils;\n\tvar XMLHttpRequestConstructor = __webpack_require__(21).XMLHttpRequest;\n\tvar mkdirp = __webpack_require__(22);\n\tvar defaultBranch = \"production\";\n\tfunction buildXHR() {\n\t    var x = new XMLHttpRequestConstructor;\n\t    return x;\n\t}\n\tvar ExecConfig = (function () {\n\t    function ExecConfig() {\n\t        this.callPath = null;\n\t        this.wrkDir = null;\n\t        this.logEnabled = false;\n\t        this.errLogEnabled = true;\n\t        this.messageBefore = '';\n\t        this.messageAfter = '';\n\t        this.messageError = '';\n\t        this.maxLogLength = -1;\n\t        this.onError = null;\n\t    }\n\t    return ExecConfig;\n\t}());\n\tfunction execProcess(config) {\n\t    try {\n\t        if (config.logEnabled) {\n\t            console.log(config.messageBefore);\n\t        }\n\t        var logObj = childProcess.execSync(config.callPath, {\n\t            cwd: config.wrkDir,\n\t            encoding: 'utf8',\n\t            stdio: [0, 1, 2]\n\t        });\n\t        if (config.logEnabled) {\n\t            console.log(config.messageAfter);\n\t            if (logObj) {\n\t                var log = logObj.toString();\n\t                if (log.trim().length > 0) {\n\t                    if (config.maxLogLength < 0) {\n\t                        console.log(log);\n\t                    }\n\t                    else if (config.maxLogLength > 0) {\n\t                        console.log(log.substring(0, Math.min(config.maxLogLength, log.length)));\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t    catch (err) {\n\t        if (config.onError) {\n\t            config.onError(err);\n\t        }\n\t        if (config.errLogEnabled) {\n\t            console.log(config.messageError);\n\t            console.log(err.message);\n\t        }\n\t    }\n\t}\n\tfunction branches(repoName, cb) {\n\t    var xhr = buildXHR();\n\t    var reposLink = 'https://api.github.com/repos/raml-apis/' + repoName + '/branches';\n\t    xhr.open(\"GET\", reposLink);\n\t    xhr.onload = function () {\n\t        var data = JSON.parse(xhr.responseText);\n\t        cb(data);\n\t    };\n\t    xhr.send();\n\t}\n\tfunction gitInstalled() {\n\t    var errorOccured = false;\n\t    var config = new ExecConfig();\n\t    config.callPath = 'git version';\n\t    config.wrkDir = fileDialogUtils.getHome();\n\t    config.logEnabled = true;\n\t    config.messageError = 'Git launch failed';\n\t    config.onError = function () {\n\t        errorOccured = true;\n\t    };\n\t    execProcess(config);\n\t    return !errorOccured;\n\t}\n\texports.gitInstalled = gitInstalled;\n\tvar RamlOutline = (function (_super) {\n\t    __extends(RamlOutline, _super);\n\t    function RamlOutline() {\n\t        _super.apply(this, arguments);\n\t        this.disposables = new UI.CompositeDisposable();\n\t    }\n\t    RamlOutline.prototype.getTitle = function () {\n\t        return \"RAML Apis\";\n\t    };\n\t    RamlOutline.prototype.load = function () {\n\t        var reposLink = 'https://api.github.com/orgs/raml-apis/repos?per_page=200';\n\t        var sec = UI.section(\"RAML Apis\");\n\t        var xhr = buildXHR();\n\t        sec.addChild(UI.label(\"loading...\"));\n\t        this.html(sec.renderUI());\n\t        xhr.open(\"GET\", reposLink);\n\t        var outer = this;\n\t        var home = fileDialogUtils.getHome();\n\t        var dir = path.resolve(home, \"apis\");\n\t        var apiListData = __webpack_require__(59);\n\t        var secHC = UI.hc();\n\t        var sett = UI.a(\"Cloning to: \" + dir + \"(click to change)\", function (x) {\n\t            fileDialogUtils.openFolderDialog(\"Please enter new path to clone\", function (newVal) {\n\t                dir = newVal;\n\t                sett.setText(\"Cloning to: \" + dir + \"(click to change)\");\n\t            }, true, dir);\n\t        }, UI.Icon.SETTINGS, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n\t        secHC.addChild(sett);\n\t        var branchLink = UI.a(\"\" + defaultBranch, function (x) {\n\t            UI.prompt(\"Please enter name of the branch\", function (y) {\n\t                defaultBranch = y;\n\t                branchLink.setText(y);\n\t            }, defaultBranch);\n\t        }, UI.Icon.GIT_BRANCH, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n\t        branchLink.margin(10, 0);\n\t        var l = UI.list(apiListData, function (x) {\n\t            var uiLabel = UI.label(x.name, UI.Icon.REPO, UI.TextClasses.HIGHLIGHT, UI.HighLightClasses.NONE).pad(10, 10);\n\t            var buttonCallback = function () {\n\t                if (!fs.existsSync(dir)) {\n\t                    fs.mkdirSync(dir);\n\t                }\n\t                var ok = cloneRepo(x.git_url, dir);\n\t                if (ok) {\n\t                    var output = path.resolve(dir, x.name);\n\t                    if (!fs.existsSync(dir)) {\n\t                        fs.mkdirSync(dir);\n\t                    }\n\t                    var a = path.resolve(output, \"api.raml\");\n\t                    if (!fs.existsSync(a)) {\n\t                        a = path.resolve(output, x.name + \".raml\");\n\t                    }\n\t                    if (fs.existsSync(a)) {\n\t                        atom.open({ pathsToOpen: [output, a] });\n\t                    }\n\t                    else {\n\t                        atom.open({ pathsToOpen: [output] });\n\t                    }\n\t                }\n\t            };\n\t            var uiButton = UI.button(\"clone\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, buttonCallback);\n\t            return UI.hc(uiLabel, uiButton);\n\t        });\n\t        secHC.addChild(l);\n\t        outer.html(secHC.renderUI());\n\t    };\n\t    RamlOutline.prototype.attached = function () {\n\t        if (this._isAttached) {\n\t            return;\n\t        }\n\t        this.load();\n\t        this._isAttached = true;\n\t    };\n\t    RamlOutline.prototype.destroy = function () {\n\t        this.disposables.dispose();\n\t    };\n\t    return RamlOutline;\n\t}(SC.Scrollable));\n\tfunction info(name, callBack) {\n\t    var pane = null;\n\t    var section = UI.section(name, UI.Icon.BOOK, false, false);\n\t    var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t    buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t    var okButton = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t        pane.destroy();\n\t    });\n\t    buttonBar.addChild(okButton);\n\t    section.addChild(buttonBar);\n\t    pane = atom.workspace.addModalPanel({\n\t        item: section.renderUI()\n\t    });\n\t}\n\texports.info = info;\n\tfunction cloneRepo(repo, dir, branch) {\n\t    if (branch === void 0) { branch = null; }\n\t    if (!branch) {\n\t        branch = defaultBranch;\n\t    }\n\t    var repoName = extractRepoName(repo);\n\t    mkdirp.sync(dir);\n\t    var ok = true;\n\t    var config = new ExecConfig();\n\t    config.callPath = 'git clone --branch ' + branch + ' \"' + repo + '\"';\n\t    config.wrkDir = dir;\n\t    config.logEnabled = true;\n\t    config.messageBefore = 'Cloning GIT repository: ' + repo;\n\t    config.messageAfter = 'Cloning complete: ' + repo;\n\t    config.messageError = 'Cloning failed: ' + repo;\n\t    config.onError = function (error) {\n\t        ok = false;\n\t        info(error.message, function () { return null; });\n\t    };\n\t    execProcess(config);\n\t    return ok;\n\t}\n\tfunction extractRepoName(repoPath) {\n\t    return repoPath.substring(repoPath.lastIndexOf('/') + 1, repoPath.lastIndexOf('.'));\n\t}\n\tfunction showPopularApis() {\n\t    if (!gitInstalled()) {\n\t        info(\"GIT is required to clone APIs. Please install GIT.\", function (x) { });\n\t        return;\n\t    }\n\t    editorTools.doSplit(new RamlOutline(), editorTools.SplitDirections.RIGHT);\n\t}\n\texports.showPopularApis = showPopularApis;\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar path = __webpack_require__(17);\n\tvar atom = __webpack_require__(31);\n\tvar rp = __webpack_require__(23);\n\tvar project = rp.project;\n\tvar detailsView = __webpack_require__(45);\n\tvar outlineView = __webpack_require__(34);\n\tvar _bmc = 0;\n\tfunction benchmark(func) {\n\t    var t0 = new Date().getTime();\n\t    if (_bmc != 0 && func)\n\t        console.log(func + \" took \" + (t0 - _bmc) + \" miliseconds.\");\n\t    _bmc = t0;\n\t}\n\tvar EditorManager = (function () {\n\t    function EditorManager(display) {\n\t        var _this = this;\n\t        if (display === void 0) { display = true; }\n\t        this._initialized = false;\n\t        this.updateCount = 0;\n\t        this.outlineCount = 0;\n\t        this.fire = true;\n\t        this.opened = false;\n\t        this._cleanOutline = false;\n\t        this.performanceDebug = true;\n\t        this.placeholder = false;\n\t        manager = window[\"manager\"] = this;\n\t        atom.workspace.onDidChangeActivePaneItem(function (e) { return _this.updateEverything(display); });\n\t        this.updateEverything(display);\n\t        this.addAutoCloseListener();\n\t    }\n\t    EditorManager.prototype.getPath = function () {\n\t        console.log(\"ETM::GetPath\");\n\t        return this.currentEditor ? this.currentEditor.getPath() : null;\n\t    };\n\t    EditorManager.prototype.getCurrentEditor = function () { return this.currentEditor; };\n\t    EditorManager.prototype.internalScheduleUpdateViews = function (count) {\n\t        var _this = this;\n\t        this.updateCount = count;\n\t        setTimeout(function () {\n\t            if (_this.updateCount == count) {\n\t                _this.updateViews();\n\t            }\n\t        }, 500);\n\t    };\n\t    EditorManager.prototype.scheduleViewsUpdate = function () {\n\t        if (this.fire) {\n\t            this.internalScheduleUpdateViews(this.updateCount + 1);\n\t        }\n\t    };\n\t    EditorManager.prototype.internalScheduleOutlineUpdate = function (count) {\n\t        var _this = this;\n\t        this.outlineCount = count;\n\t        setTimeout(function () {\n\t            if (_this.outlineCount == count) {\n\t                _this.updateOutline();\n\t            }\n\t        }, 500);\n\t    };\n\t    EditorManager.prototype.scheduleOutlineUpdate = function () {\n\t        this.internalScheduleOutlineUpdate(this.outlineCount + 1);\n\t    };\n\t    EditorManager.prototype.addAutoCloseListener = function () {\n\t        var _this = this;\n\t        atom.workspace.onDidDestroyPane(function (evt) {\n\t            try {\n\t                var edcount = atom.workspace.getPaneItems().filter(function (e) {\n\t                    return e['softTabs'] != undefined;\n\t                }).length;\n\t                if (edcount == 0) {\n\t                    _this.ast = null;\n\t                    _this.unit = null;\n\t                    _this._currentNode = null;\n\t                    _this.currentEditor = null;\n\t                    global.cleanCache();\n\t                    if (atom.workspace.paneForItem(_this._view))\n\t                        atom.workspace.paneForItem(_this._view).destroy();\n\t                    if (atom.workspace.paneForItem(_this._details))\n\t                        atom.workspace.paneForItem(_this._details).destroy();\n\t                    _this.opened = false;\n\t                }\n\t            }\n\t            catch (e) {\n\t                //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n\t                console.log(e);\n\t            }\n\t        });\n\t    };\n\t    EditorManager.prototype.getOrCreateView = function () {\n\t        if (!this._view) {\n\t            this._view = new outlineView.RamlOutline();\n\t            if (this.ast) {\n\t                this._view.setUnit(this.ast);\n\t            }\n\t        }\n\t        return this._view;\n\t    };\n\t    EditorManager.prototype.getDetails = function () {\n\t        if (!this._details)\n\t            this._details = new detailsView.RamlDetails();\n\t        return this._details;\n\t    };\n\t    EditorManager.prototype.updateDetails = function () {\n\t        this.getDetails().update();\n\t    };\n\t    EditorManager.prototype.reparseAST = function () {\n\t        var _this = this;\n\t        if (this.currentEditor) {\n\t            var _path = this.currentEditor.getPath();\n\t            var bf = this.currentEditor.getBuffer();\n\t            var prj = project.createProject(path.dirname(_path));\n\t            var unit = prj.setCachedUnitContent(path.basename(_path), this.currentEditor.getBuffer().getText());\n\t            unit.project().addTextChangeListener(function (delta) {\n\t                if (delta.unit != unit) {\n\t                    return;\n\t                }\n\t                var cm = delta.offset;\n\t                var end = delta.replacementLength;\n\t                var text = delta.text;\n\t                var buffer = _this.currentEditor.getBuffer();\n\t                var start = buffer.positionForCharacterIndex(cm);\n\t                var endPosition = buffer.positionForCharacterIndex(cm + end);\n\t                try {\n\t                    _this.fire = false;\n\t                    buffer.setTextInRange({ start: start, end: endPosition }, text);\n\t                    _this.scheduleOutlineUpdate();\n\t                }\n\t                finally {\n\t                    _this.fire = true;\n\t                }\n\t            });\n\t            this.ast = unit.highLevel();\n\t            this.unit = unit;\n\t        }\n\t    };\n\t    EditorManager.prototype.isETPane = function (pane) {\n\t        if (!this._view) {\n\t            return;\n\t        }\n\t        var items = pane.getItems();\n\t        return (items.indexOf(this.getDetails()) >= 0 || items.indexOf(this._view) >= 0);\n\t    };\n\t    EditorManager.prototype.display = function () {\n\t        console.log(\"ETM::Display\");\n\t        var aw = atom.workspace;\n\t        var fpane = atom.workspace.paneForItem(this.getCurrentEditor());\n\t        if (!fpane)\n\t            return;\n\t        if (!aw.paneForItem(this.getOrCreateView()))\n\t            doSplit(this.getOrCreateView());\n\t        if (!aw.paneForItem(manager.getDetails()))\n\t            doSplit(this.getDetails(), SplitDirections.BOTTOM);\n\t        this.opened = true;\n\t    };\n\t    EditorManager.prototype.updateText = function (node) {\n\t        this.fire = false;\n\t        var editor = this.currentEditor;\n\t        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n\t        editor.setText(this.unit.contents());\n\t        this.fire = true;\n\t        if (pos)\n\t            editor.setCursorBufferPosition(pos);\n\t    };\n\t    EditorManager.prototype.selectNode = function (hnode) {\n\t        var node = hnode.lowLevel();\n\t        if (!node)\n\t            return;\n\t        var editor = this.currentEditor;\n\t        if (!editor)\n\t            return;\n\t        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n\t        if (pos)\n\t            editor.setCursorBufferPosition(pos);\n\t    };\n\t    EditorManager.prototype.setViewsDisplayStyle = function (visible) {\n\t        if (this._details && this._details.element) {\n\t            this._details.element.style.display = visible ? null : \"none\";\n\t        }\n\t        if (this._view && this._view.element) {\n\t            this._view.element.style.display = visible ? null : \"none\";\n\t        }\n\t    };\n\t    EditorManager.prototype.isRaml = function (editor) {\n\t        if (!editor) {\n\t            return false;\n\t        }\n\t        var editorPath = editor.getPath();\n\t        if (!editorPath) {\n\t            return false;\n\t        }\n\t        var extName = path.extname(editorPath);\n\t        if (extName !== '.raml') {\n\t            return false;\n\t        }\n\t        return true;\n\t    };\n\t    EditorManager.prototype.updateEverything = function (display) {\n\t        if (display === void 0) { display = true; }\n\t        var editor = atom.workspace.getActiveTextEditor();\n\t        if (editor) {\n\t            this.setViewsDisplayStyle(this.isRaml(editor));\n\t        }\n\t        if (!editor || editor == this.currentEditor || !this.isRaml(editor)) {\n\t            return;\n\t        }\n\t        this.currentEditor = editor;\n\t        if (this.opened == false && display)\n\t            this.display();\n\t        if (!editor.patched) {\n\t            this.addListenersToEditor(editor);\n\t        }\n\t        this.reparseAST();\n\t        var pos = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n\t        this.positionUpdated(pos);\n\t        this.scheduleViewsUpdate();\n\t    };\n\t    EditorManager.prototype.addListenersToEditor = function (cedit) {\n\t        var _this = this;\n\t        var buffer = cedit.getBuffer();\n\t        buffer.onDidChange(function (x) {\n\t            try {\n\t                var t0 = new Date().getMilliseconds();\n\t                _this.reparseAST();\n\t                var pos = buffer.characterIndexForPosition(cedit.getCursorBufferPosition());\n\t                _this.positionUpdated(pos);\n\t                _this.scheduleViewsUpdate();\n\t                var t1 = new Date().getMilliseconds();\n\t                if (_this.performanceDebug) {\n\t                    console.log(\"Change take:\" + (t1 - t0));\n\t                }\n\t            }\n\t            catch (e) {\n\t                console.log(e);\n\t            }\n\t        });\n\t        //updating ast node on position change\n\t        cedit.getLastCursor().onDidChangePosition(function (x) {\n\t            if (!_this.fire)\n\t                return;\n\t            _this.positionUpdated(buffer.characterIndexForPosition(cedit.getCursorBufferPosition()));\n\t            _this.scheduleViewsUpdate();\n\t        });\n\t        this.addListenersOnMove(cedit);\n\t        this.currentEditor.patched = true;\n\t    };\n\t    EditorManager.prototype.addListenersOnMove = function (cedit) {\n\t        var _this = this;\n\t        var movingPane = false;\n\t        atom.workspace.onDidAddPaneItem(function (event) {\n\t            if (movingPane || _this.isETPane(event.pane) == false || event.item == _this.getOrCreateView() || event.item == _this.getDetails())\n\t                return event;\n\t            setTimeout(function () {\n\t                try {\n\t                    var fpane = atom.workspace.paneForItem(cedit);\n\t                    if (fpane) {\n\t                        movingPane = true;\n\t                        event.pane.moveItemToPane(event.item, fpane, null);\n\t                        movingPane = false;\n\t                        fpane.setActiveItem(event.item);\n\t                        fpane.activate();\n\t                    }\n\t                }\n\t                catch (e) {\n\t                    //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n\t                    console.log(e);\n\t                }\n\t            }, 18);\n\t        });\n\t    };\n\t    //_selectedNode: hl.IHighLevelNode;\n\t    EditorManager.prototype.patchCurrentNode = function (n) {\n\t        this._currentNode = n;\n\t    };\n\t    EditorManager.prototype.getCurrentNode = function () {\n\t        if (this._currentNode == null)\n\t            return this._currentNode = this.ast;\n\t        else\n\t            return this._currentNode;\n\t    };\n\t    EditorManager.prototype.setSelectedNode = function (node) {\n\t        //this._selectedNode = node;\n\t        if (this.unit) {\n\t            var unitPath = this.unit.absolutePath();\n\t            while (node.lowLevel().unit().absolutePath() != unitPath) {\n\t                if (!node.parent()) {\n\t                    break;\n\t                }\n\t                else {\n\t                    node = node.parent();\n\t                }\n\t            }\n\t        }\n\t        var id = node.id();\n\t        var anode = this.ast.findById(id);\n\t        if (anode) {\n\t            node = anode;\n\t        }\n\t        if (this._details) {\n\t            this._details.show(node);\n\t        }\n\t        var editor = this.getCurrentEditor();\n\t        if (editor) {\n\t            this.fire = false;\n\t            try {\n\t                var buffer = editor.getBuffer();\n\t                var posStart = buffer.positionForCharacterIndex(node.lowLevel().start());\n\t                var posEnd = buffer.positionForCharacterIndex(node.lowLevel().end());\n\t                editor.setCursorBufferPosition(posStart);\n\t                this.positionUpdated(buffer.characterIndexForPosition(editor.getCursorBufferPosition()));\n\t            }\n\t            finally {\n\t                this.fire = true;\n\t            }\n\t        }\n\t    };\n\t    EditorManager.prototype.getSelectedNode = function () {\n\t        return this.getCurrentNode();\n\t        //else return this._selectedNode;\n\t    };\n\t    EditorManager.prototype.setText = function (text) {\n\t        console.log(\"ETM::SetText\");\n\t        var editor = this.currentEditor;\n\t        if (editor == null)\n\t            return;\n\t        editor.setText(text);\n\t    };\n\t    EditorManager.prototype.updateViews = function () {\n\t        var cNode = this.getCurrentNode();\n\t        var ds = new Date().getMilliseconds();\n\t        if (this._details) {\n\t            this.getDetails().show(cNode);\n\t        }\n\t        if (this._view) {\n\t            this.getOrCreateView().setUnit(manager.ast);\n\t            this.getOrCreateView().setSelection(cNode);\n\t        }\n\t        var d1 = new Date().getMilliseconds();\n\t        if (this.performanceDebug) {\n\t            console.log(\"Views update:\" + (d1 - ds));\n\t        }\n\t    };\n\t    EditorManager.prototype.updateOutline = function () {\n\t        var cNode = this.getCurrentNode();\n\t        var ds = new Date().getMilliseconds();\n\t        if (this._view) {\n\t            this.getOrCreateView().setUnit(manager.ast);\n\t            this.getOrCreateView().setSelection(cNode);\n\t        }\n\t        var d1 = new Date().getMilliseconds();\n\t        if (this.performanceDebug) {\n\t            console.log(\"Outline update:\" + (d1 - ds));\n\t        }\n\t    };\n\t    EditorManager.prototype.positionUpdated = function (newPosition) {\n\t        this.currentPosition = newPosition;\n\t        if (this.ast) {\n\t            this._currentNode = this.ast.findElementAtOffset(this.currentPosition);\n\t        }\n\t    };\n\t    return EditorManager;\n\t}());\n\tvar manager = null;\n\tfunction initEditorTools(display) {\n\t    if (display === void 0) { display = true; }\n\t    if (manager == null)\n\t        manager = new EditorManager(display);\n\t    else if (display)\n\t        manager.display();\n\t}\n\texports.initEditorTools = initEditorTools;\n\tfunction editorToolsStatus() {\n\t    return manager != null && manager.opened;\n\t}\n\texports.editorToolsStatus = editorToolsStatus;\n\tfunction aquireManager() {\n\t    if (!manager) {\n\t        manager = new EditorManager(true);\n\t    }\n\t    return manager;\n\t}\n\texports.aquireManager = aquireManager;\n\tfunction updateAndSelect(node) {\n\t    if (aquireManager()._view) {\n\t        aquireManager()._view.refresh();\n\t    }\n\t    aquireManager().updateText();\n\t    aquireManager().selectNode(node);\n\t}\n\texports.updateAndSelect = updateAndSelect;\n\t(function (SplitDirections) {\n\t    SplitDirections[SplitDirections[\"RIGHT\"] = 0] = \"RIGHT\";\n\t    SplitDirections[SplitDirections[\"LEFT\"] = 1] = \"LEFT\";\n\t    SplitDirections[SplitDirections[\"TOP\"] = 2] = \"TOP\";\n\t    SplitDirections[SplitDirections[\"BOTTOM\"] = 3] = \"BOTTOM\";\n\t})(exports.SplitDirections || (exports.SplitDirections = {}));\n\tvar SplitDirections = exports.SplitDirections;\n\tfunction doSplit(value, dir) {\n\t    if (dir === void 0) { dir = SplitDirections.RIGHT; }\n\t    var newPane = null;\n\t    switch (dir) {\n\t        case SplitDirections.BOTTOM:\n\t            newPane = atom.workspace.getActivePane().splitDown({});\n\t            break;\n\t        case SplitDirections.TOP:\n\t            newPane = atom.workspace.getActivePane().splitUp({});\n\t            break;\n\t        case SplitDirections.LEFT:\n\t            newPane = atom.workspace.getActivePane().splitLeft({});\n\t            break;\n\t        case SplitDirections.RIGHT:\n\t            newPane = atom.workspace.getActivePane().splitRight({});\n\t            break;\n\t    }\n\t    newPane.addItem(value);\n\t    return newPane;\n\t}\n\texports.doSplit = doSplit;\n\t\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar qcui = __webpack_require__(32);\n\tvar atom = __webpack_require__(31);\n\tvar contextActions = __webpack_require__(24);\n\tvar cc = __webpack_require__(33);\n\tvar et = __webpack_require__(5);\n\t/*\n\t * Quick command is a command object that stores command info, body and filtering function\n\t */\n\tvar QuickCommand = (function () {\n\t    function QuickCommand(id, title, command, priority, when) {\n\t        this.id = id;\n\t        this.title = title;\n\t        this.command = command;\n\t        this.priority = priority;\n\t        this.when = when;\n\t    }\n\t    QuickCommand.prototype.registerAsAtomCommand = function (target) {\n\t        if (this.atomCommand && this.atomCommand.disposed == false)\n\t            this.atomCommand.dispose();\n\t        this.atomCommand = atom.commands.add(target, this.id, this.command);\n\t    };\n\t    QuickCommand.prototype.dispose = function () {\n\t        if (this.atomCommand && this.atomCommand.disposed == false)\n\t            this.atomCommand.dispose();\n\t        cm.unregister(this);\n\t    };\n\t    return QuickCommand;\n\t}());\n\texports.QuickCommand = QuickCommand;\n\t/*\n\t * Command manager manages quick commands.\n\t * All quick commands should be registered here.\n\t * For usage example, see registerCommands\n\t */\n\tvar CommandManager = (function () {\n\t    function CommandManager() {\n\t        this.commands = {};\n\t        this.panel = new qcui.SelectListView(function (command) { return command.command(); }, function (command) { return command.title; }, 'title');\n\t    }\n\t    CommandManager.prototype.register = function (cmd) {\n\t        if (this.commands[cmd.id] != null)\n\t            this.unregister(cmd.id);\n\t        this.commands[cmd.id] = cmd;\n\t        return cmd;\n\t    };\n\t    CommandManager.prototype.unregister = function (cmd) {\n\t        if (typeof (cmd) == \"string\")\n\t            this.unregister(this.commands[cmd]);\n\t        var qcmd = cmd;\n\t        if (qcmd == null)\n\t            return null;\n\t        delete this.commands[qcmd.id];\n\t        return qcmd;\n\t    };\n\t    CommandManager.prototype.add = function (id, title, command, when, priority, atomTarget) {\n\t        var cmd = new QuickCommand(id, title, command, priority ? priority : 0, when ? when : function () { return true; });\n\t        if (atomTarget)\n\t            cmd.registerAsAtomCommand(atomTarget);\n\t        this.register(cmd);\n\t        return cmd;\n\t    };\n\t    CommandManager.prototype.show = function (predicate) {\n\t        var joinedCommands = {};\n\t        for (var commandId in this.commands) {\n\t            joinedCommands[commandId] = this.commands[commandId];\n\t        }\n\t        this.getDynamicCommands().forEach(function (currentCommand) {\n\t            joinedCommands[currentCommand.id] = currentCommand;\n\t        });\n\t        var list = Object.keys(joinedCommands)\n\t            .map(function (key) { return joinedCommands[key]; })\n\t            .sort(function (a, b) { return b.priority - a.priority; })\n\t            .filter(function (cmd) { return cmd.when(); });\n\t        if (predicate)\n\t            list = list.filter(predicate);\n\t        this.panel.show(list);\n\t    };\n\t    CommandManager.prototype.getDynamicCommands = function () {\n\t        var result = [];\n\t        var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t        currentActions.forEach(function (action) {\n\t            var convertedQuickCommand = new QuickCommand(action.name, action.label ? action.label : action.name, action.onClick, 1, function () { return true; });\n\t            var cmd = convertedQuickCommand;\n\t            cmd['__module__'] = 'editorTools';\n\t            result.push(convertedQuickCommand);\n\t        });\n\t        return result;\n\t    };\n\t    return CommandManager;\n\t}());\n\texports.CommandManager = CommandManager;\n\tvar cm;\n\t/*\n\t * Always return working copy of manager.\n\t */\n\tfunction manager() {\n\t    if (!cm)\n\t        cm = new CommandManager();\n\t    return cm;\n\t}\n\texports.manager = manager;\n\t/*\n\t * function for RAML -> Show Quick Commands (^Q)\n\t */\n\tfunction showCommands() {\n\t    manager().show();\n\t}\n\texports.showCommands = showCommands;\n\t/*\n\t * registerCommands is called at the plugin initialization for registering global commands\n\t */\n\tfunction registerCommands() {\n\t    cc.registerQuickCommands(manager());\n\t    cm.add('api-workbench:editor-tools', 'Show Editor Tools', function () { return et.initEditorTools(); }, function () { return et.editorToolsStatus() == false; });\n\t}\n\texports.registerCommands = registerCommands;\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar fs = __webpack_require__(18);\n\tvar path = __webpack_require__(17);\n\tvar rp = __webpack_require__(23);\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(26);\n\tvar suggestions = __webpack_require__(27);\n\texports.selector = '.source.raml';\n\texports.disableForSelector = '.text.html .comment';\n\texports.filterSuggestions = true;\n\texports.inclusionPriority = 1;\n\texports.excludeLowerPriority = true;\n\tvar editorTools = __webpack_require__(5);\n\tfunction initialize(astProvider) {\n\t    suggestions.setDefaultASTProvider(astProvider);\n\t}\n\texports.initialize = initialize;\n\tfunction onDidInsertSuggestion(event) {\n\t    var offset = event.editor.getBuffer().characterIndexForPosition(event.triggerPosition);\n\t    if (event.suggestion.annotation) {\n\t        var txt = event.editor.getBuffer().getText();\n\t        for (var i = offset; i < txt.length; i++) {\n\t            var c = txt.charAt(i);\n\t            if (c == ')') {\n\t                offset = i + 1;\n\t                break;\n\t            }\n\t            if (c == '\\r' || c == '\\n') {\n\t                return;\n\t            }\n\t        }\n\t        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t        event.editor.getBuffer().insert(newPos, ':');\n\t        return;\n\t    }\n\t    if ((event.suggestion.replacementPrefix && event.suggestion.extra) || event.suggestion.extra == \"%\") {\n\t        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset - event.suggestion.replacementPrefix.length);\n\t        event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t    }\n\t    else {\n\t        //This actually looks exactly like a previous case but typing it as a separate case for now TODO\n\t        if (event.suggestion.extra == \" \") {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t        //FIXME\n\t        if (event.suggestion.extra == \" { \") {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t        if (event.suggestion.extra && event.suggestion.extra.indexOf(\"!include\") != -1) {\n\t            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n\t            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n\t        }\n\t    }\n\t}\n\texports.onDidInsertSuggestion = onDidInsertSuggestion;\n\tvar FSProvider = (function () {\n\t    function FSProvider() {\n\t    }\n\t    FSProvider.prototype.contentDirName = function (content) {\n\t        var contentPath = content.getPath();\n\t        return path.dirname(contentPath);\n\t    };\n\t    FSProvider.prototype.dirName = function (childPath) {\n\t        return path.dirname(childPath);\n\t    };\n\t    FSProvider.prototype.exists = function (checkPath) {\n\t        return fs.existsSync(checkPath);\n\t    };\n\t    FSProvider.prototype.resolve = function (contextPath, relativePath) {\n\t        return path.resolve(contextPath, relativePath);\n\t    };\n\t    FSProvider.prototype.isDirectory = function (dirPath) {\n\t        var stat = fs.statSync(dirPath);\n\t        return stat && stat.isDirectory();\n\t    };\n\t    FSProvider.prototype.readDir = function (dirPath) {\n\t        return fs.readdirSync(dirPath);\n\t    };\n\t    FSProvider.prototype.existsAsync = function (path) {\n\t        return new Promise(function (resolve) {\n\t            fs.exists(path, function (result) { resolve(result); });\n\t        });\n\t    };\n\t    /**\n\t     * Returns directory content list.\n\t     * @param fullPath\n\t     */\n\t    FSProvider.prototype.readDirAsync = function (path) {\n\t        return new Promise(function (resolve) {\n\t            fs.readdir(path, function (err, result) { resolve(result); });\n\t        });\n\t    };\n\t    /**\n\t     * Check whether the path points to a directory.\n\t     * @param fullPath\n\t     */\n\t    FSProvider.prototype.isDirectoryAsync = function (path) {\n\t        return new Promise(function (resolve) {\n\t            fs.stat(path, function (err, stats) { resolve(stats.isDirectory()); });\n\t        });\n\t    };\n\t    return FSProvider;\n\t}());\n\tvar AtomEditorState = (function () {\n\t    function AtomEditorState(textEditor, request) {\n\t        this.request = request;\n\t        this.textEditor = textEditor;\n\t    }\n\t    AtomEditorState.prototype.getText = function () {\n\t        return this.textEditor.getBuffer().getText();\n\t    };\n\t    AtomEditorState.prototype.getPath = function () {\n\t        return this.textEditor.getPath();\n\t    };\n\t    AtomEditorState.prototype.getBaseName = function () {\n\t        return path.basename(this.getPath());\n\t    };\n\t    AtomEditorState.prototype.getOffset = function () {\n\t        return this.request.editor.getBuffer().characterIndexForPosition(this.request.bufferPosition);\n\t    };\n\t    return AtomEditorState;\n\t}());\n\tfunction getSuggestions(request) {\n\t    var t0 = new Date().getMilliseconds();\n\t    try {\n\t        var editorState = new AtomEditorState(request.editor, request);\n\t        var result = suggestions.suggest(editorState, new FSProvider());\n\t        result.forEach(function (suggestion) {\n\t            if (suggestion.prefix !== undefined) {\n\t                delete suggestion.prefix;\n\t                suggestion.replacementPrefix = suggestion.prefix;\n\t                delete suggestion.prefix;\n\t            }\n\t        });\n\t        return result;\n\t    }\n\t    finally {\n\t        if (editorTools.aquireManager()) {\n\t            var m = editorTools.aquireManager();\n\t            if (m.performanceDebug) {\n\t                var t1 = new Date().getMilliseconds();\n\t                console.log(\"Completion calc:\" + (t1 - t0));\n\t            }\n\t        }\n\t    }\n\t}\n\texports.getSuggestions = getSuggestions;\n\tfunction getAstNode(request, clearLastChar, allowNull) {\n\t    if (clearLastChar === void 0) { clearLastChar = true; }\n\t    if (allowNull === void 0) { allowNull = true; }\n\t    var p = request.editor.getPath();\n\t    var prj = rp.project.createProject(path.dirname(p));\n\t    var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t    var text = request.editor.getBuffer().getText();\n\t    var kind = search.determineCompletionKind(text, offset);\n\t    if (kind == search.LocationKind.KEY_COMPLETION && clearLastChar) {\n\t        var pos = offset > 0 ? offset - 1 : offset;\n\t        for (var i = pos; i > 0; i--) {\n\t            var c = text[i];\n\t            if (c == '\\r' || c == '\\n') {\n\t                break;\n\t            }\n\t            else {\n\t                if (c == ' ' || c == '\\t') {\n\t                    ilevel++;\n\t                }\n\t            }\n\t        }\n\t        var oldOfffset = offset;\n\t        text = text.substring(0, oldOfffset) + \"k:\" + text.substring(oldOfffset);\n\t    }\n\t    var ilevel = 0;\n\t    var unit = prj.setCachedUnitContent(path.basename(p), text);\n\t    var ast = unit.highLevel();\n\t    var cm = offset;\n\t    for (var pm = offset - 1; pm >= 0; pm--) {\n\t        var c = text[pm];\n\t        //if (c==' '||c=='\\t'||c=='\\r'||c=='\\n'){\n\t        //    cm=pm-1;\n\t        //    continue;\n\t        //}\n\t        if (c == ' ' || c == '\\t') {\n\t            cm = pm - 1;\n\t            continue;\n\t        }\n\t        break;\n\t    }\n\t    var astNode = ast.findElementAtOffset(cm);\n\t    if (astNode && astNode.parent() == null) {\n\t        if (ilevel > 0 && kind == search.LocationKind.KEY_COMPLETION) {\n\t            var attr = _.find(astNode.attrs(), function (attr) {\n\t                var at = attr;\n\t                return at.lowLevel().start() < offset && at.lowLevel().end() >= offset && !at.property().isKey();\n\t            });\n\t            if (!attr) {\n\t                if (allowNull) {\n\t                    return null;\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if (!allowNull && !astNode) {\n\t        return ast;\n\t    }\n\t    return astNode;\n\t}\n\texports.getAstNode = getAstNode;\n\tfunction saveUnit(unit) {\n\t    var unitPath = unit.absolutePath();\n\t    var unitText = unit.contents();\n\t    //first trying to find an opened text editor\n\t    var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n\t        var editorPath = editor.getPath();\n\t        return editorPath == unitPath;\n\t    });\n\t    if (openedEditor) {\n\t        openedEditor.setText(unitText);\n\t    }\n\t    else {\n\t        fs.writeFileSync(unitPath, unitText);\n\t    }\n\t}\n\texports.saveUnit = saveUnit;\n\t\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar path = __webpack_require__(17);\n\tvar fs = __webpack_require__(18);\n\tvar atom_space_pen_views_1 = __webpack_require__(25);\n\tvar provider = __webpack_require__(7);\n\tvar tooltipManager = __webpack_require__(35);\n\tvar UI = __webpack_require__(19);\n\tvar outline = __webpack_require__(34);\n\tvar editorTools = __webpack_require__(5);\n\tvar QuickOutlineDialog = (function () {\n\t    function QuickOutlineDialog(_editor) {\n\t        this._editor = _editor;\n\t    }\n\t    QuickOutlineDialog.prototype.extraContent = function (s) {\n\t    };\n\t    QuickOutlineDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var nodeToSelect = null;\n\t        var node = provider.getAstNode({ bufferPosition: this._editor.getCursorBufferPosition(), editor: this._editor }, false, false);\n\t        var vc = UI.section(\"Quick outline:\");\n\t        var section = outline.createTree(node.root(), function (x) {\n\t            if (x.selection) {\n\t                if (x.selection.elements.length > 0) {\n\t                    nodeToSelect = x.selection.elements[0];\n\t                    ok.setDisabled(false);\n\t                    return;\n\t                }\n\t            }\n\t            ok.setDisabled(true);\n\t        }, function (model) {\n\t            var editor = _this._editor;\n\t            var buffer = editor.getBuffer();\n\t            var posStart = buffer.positionForCharacterIndex(model.getSource().lowLevel().start());\n\t            editor.setCursorScreenPosition(posStart);\n\t            zz.destroy();\n\t        });\n\t        section.setStyle(\"max-height\", \"800px\");\n\t        section.addClass(\"tree-view-scroller\");\n\t        vc.addChild(section);\n\t        var cancel = UI.buttonSimple(\"Cancel\", function (x) { zz.destroy(); }, UI.Icon.NONE);\n\t        cancel.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        var ok = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) {\n\t            if (nodeToSelect) {\n\t                editorTools.aquireManager().setSelectedNode(nodeToSelect);\n\t            }\n\t            zz.destroy();\n\t        });\n\t        ok.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        ok.setDisabled(true);\n\t        vc.addChild(ok);\n\t        vc.addChild(cancel);\n\t        var html = vc.renderUI();\n\t        html.tabIndex = 0;\n\t        html.onkeypress = function (x) {\n\t            if (x.keyCode == 27) {\n\t                zz.destroy();\n\t            }\n\t        };\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return QuickOutlineDialog;\n\t}());\n\tfunction showQuickOutline(editor) {\n\t    new QuickOutlineDialog(editor).show();\n\t}\n\tfunction pixelPositionFromMouseEvent(editorView) {\n\t    var clientX = 0, clientY = 0;\n\t    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n\t    var top = clientY - linesClientRect.top;\n\t    var left = clientX - linesClientRect.left;\n\t    return { top: top, left: left };\n\t}\n\tfunction getFromShadowDom(element, selector) {\n\t    var el = element[0];\n\t    var found = el.rootElement.querySelectorAll(selector);\n\t    return atom_space_pen_views_1.$(found[0]);\n\t}\n\tfunction show() {\n\t    var ed = atom.workspace.getActiveTextEditor();\n\t    if (!ed) {\n\t        return;\n\t    }\n\t    var filePath = ed.getPath();\n\t    var filename = path.basename(filePath);\n\t    var ext = path.extname(filename);\n\t    if (!tooltipManager.isAllowedExtension(ext))\n\t        return;\n\t    if (!fs.existsSync(filePath)) {\n\t        return;\n\t    }\n\t    showQuickOutline(ed);\n\t}\n\texports.show = show;\n\t\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(18);\n\tvar path = __webpack_require__(17);\n\tvar rp = __webpack_require__(23);\n\tvar stubs = rp.stubs;\n\tvar universes = rp.universes;\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(26);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(19);\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar def = rp.ds;\n\tvar services = def;\n\tvar linterUI = __webpack_require__(10);\n\tvar editorTools = __webpack_require__(5);\n\tvar index_1 = __webpack_require__(28);\n\tfunction createGlobalSchema(attr) {\n\t    var r = attr.parent().root();\n\t    var t = attr.property().range().universe().type(\"GlobalSchema\");\n\t    var sc = stubs.createStubNode(t, t.universe().type(\"Api\").property(\"schemas\"), \"\" + attr.value());\n\t    sc.attrOrCreate(\"value\").setValue(\"!include \" + \"schemas/\" + attr.value() + \".json\");\n\t    r.add(sc);\n\t    var ed = atom.workspace.getActiveTextEditor();\n\t    ed.getBuffer().setText(r.lowLevel().unit().contents());\n\t    var sdir = path.resolve(path.dirname(ed.getPath()), \"schemas\");\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = path.resolve(sdir, attr.value() + \".json\");\n\t    fs.writeFileSync(shFile, \"\\n{\\n  \\\"$schema\\\" : \\\"http://json-schema.org/draft-04/schema\\\" ,\\n  \\\"type\\\" : \\\"object\\\" ,\\n  \\\"properties\\\" : {\\n   }\\n}\\n\");\n\t    atom.workspace.open(shFile, {});\n\t}\n\texports.createGlobalSchema = createGlobalSchema;\n\tfunction createGlobalSchemaFromNameAndContent(root, name, schp, content, absolutePath) {\n\t    if (index_1.universeHelpers.isRAML10Node(root)) {\n\t        createGlobalSchemaFromNameAndContent10(root, name, schp, content, absolutePath);\n\t    }\n\t    else if (index_1.universeHelpers.isRAML08Node(root)) {\n\t        createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath);\n\t    }\n\t}\n\texports.createGlobalSchemaFromNameAndContent = createGlobalSchemaFromNameAndContent;\n\tfunction createSchemaFile(content, schemaPath, absolutePath) {\n\t    var ed = getActiveEditor();\n\t    var sdir = absolutePath ? path.dirname(absolutePath) : path.resolve(path.dirname(ed.getPath()), path.dirname(schemaPath));\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = absolutePath ? absolutePath : path.resolve(path.dirname(ed.getPath()), schemaPath);\n\t    fs.writeFileSync(shFile, content);\n\t}\n\tfunction createGlobalSchemaFromNameAndContent10(root, name, schemaPath, content, absolutePath) {\n\t    var t = root.definition().universe().type(universes.Universe10.TypeDeclaration.name);\n\t    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe10.Api.name).property(universes.Universe10.Api.properties.types.name), \"\" + name);\n\t    sc.attrOrCreate(universes.Universe10.TypeDeclaration.properties.type.name).setValue(\"!include \" + schemaPath);\n\t    root.add(sc);\n\t    createSchemaFile(content, schemaPath, absolutePath);\n\t}\n\texports.createGlobalSchemaFromNameAndContent10 = createGlobalSchemaFromNameAndContent10;\n\tfunction createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath) {\n\t    var t = root.definition().universe().type(universes.Universe08.GlobalSchema.name);\n\t    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe08.Api.name).property(universes.Universe08.Api.properties.schemas.name), \"\" + name);\n\t    sc.attrOrCreate(universes.Universe08.GlobalSchema.properties.value.name).setValue(\"!include \" + schp);\n\t    root.add(sc);\n\t    createSchemaFile(content, schp, absolutePath);\n\t}\n\texports.createGlobalSchemaFromNameAndContent08 = createGlobalSchemaFromNameAndContent08;\n\tfunction saveExample(r, schp, content) {\n\t    var ed = getActiveEditor();\n\t    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n\t    if (!fs.existsSync(sdir)) {\n\t        fs.mkdirSync(sdir);\n\t    }\n\t    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n\t    fs.writeFileSync(shFile, content);\n\t}\n\texports.saveExample = saveExample;\n\tvar NewProjectDialog = (function () {\n\t    function NewProjectDialog(title) {\n\t        if (title === void 0) { title = \"Create RAML Project\"; }\n\t        this.title = title;\n\t        this.apititle = \"New API\";\n\t        this.version = \"v1\";\n\t        this.baseUri = \"http://api.samplehost.com\";\n\t        this._raml1 = true;\n\t        this._defStructure = true;\n\t        this._createSampleResource = true;\n\t        this.sourceValue = path.resolve(this.generateDefaultProjectParentFolder(), \"newRamlProject\");\n\t    }\n\t    NewProjectDialog.prototype.generateDefaultProjectParentFolder = function () {\n\t        return UI.fdUtils.getHome();\n\t    };\n\t    NewProjectDialog.prototype.extraContent = function (s) {\n\t    };\n\t    NewProjectDialog.prototype.validateProjectLocation = function (value) {\n\t        var toValidate = value ? value.trim() : \"\";\n\t        if (!toValidate) {\n\t            return UI.errorStatus(\"Path should't be empty\");\n\t        }\n\t        var parentDirectory = path.dirname(toValidate);\n\t        if (!parentDirectory || parentDirectory == \".\")\n\t            return UI.errorStatus(\"Can not find path parent\");\n\t        if (!fs.existsSync(parentDirectory))\n\t            return UI.errorStatus(\"Parent directory does not exist\");\n\t        return UI.okStatus();\n\t    };\n\t    NewProjectDialog.prototype.validateTitle = function (value) {\n\t        var toValidate = value ? value.trim() : \"\";\n\t        if (!toValidate || toValidate.length < 1) {\n\t            return UI.errorStatus(\"Title field is required\");\n\t        }\n\t        return UI.okStatus();\n\t    };\n\t    NewProjectDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var section = UI.section(this.title, UI.Icon.BOOK, false, false, UI.h3(\"Please select location to place your project:\")).pad(10, 10);\n\t        var panel = new UI.Panel(UI.LayoutType.BLOCK);\n\t        var statusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n\t        var slf = new UI.CustomField(\"\", statusLabel, function (x) { return x; });\n\t        slf.setDisplay(this.validateProjectLocation(this.sourceValue).code == UI.StatusCode.ERROR);\n\t        panel.addChild(slf);\n\t        var projectLocationInput = UI.texfField(\"\", this.sourceValue, function (x) { return _this.sourceValue = x.getBinding().get(); });\n\t        projectLocationInput.getBinding().addValidator(function () { return _this.validateProjectLocation(_this.sourceValue); });\n\t        projectLocationInput.setStyle(\"width\", \"400px\");\n\t        projectLocationInput.getBinding().addListener(function (value) {\n\t            //var st = projectLocationInput.getBinding().status()\n\t            var st = _this.validateProjectLocation(value);\n\t            if (st.code != UI.StatusCode.ERROR) {\n\t                //this.updateUI(q, x)\n\t                statusLabel.setText(\"\");\n\t                statusLabel.setIcon(UI.Icon.NONE);\n\t                slf.setDisplay(false);\n\t            }\n\t            else {\n\t                statusLabel.setText(st.message);\n\t                statusLabel.setIcon(UI.Icon.BUG);\n\t                slf.setDisplay(true);\n\t            }\n\t        });\n\t        panel.addChild(\n\t        //UI.hc(\n\t        projectLocationInput);\n\t        panel.addChild(UI.h3(\"Title of your API:\"));\n\t        var titleStatusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n\t        var titleStatusMessage = new UI.CustomField(\"\", titleStatusLabel, function (x) { return x; });\n\t        titleStatusMessage.setDisplay(false);\n\t        panel.addChild(titleStatusMessage);\n\t        var titleTextField = UI.texfField(\"\", this.apititle, function (x) { return _this.apititle = x.getBinding().get(); });\n\t        titleTextField.getBinding().addValidator(function () { return _this.validateTitle(_this.apititle); });\n\t        titleTextField.getBinding().addListener(function (value) {\n\t            var status = _this.validateTitle(value);\n\t            if (status.code !== UI.StatusCode.ERROR) {\n\t                titleStatusLabel.setText(\"\");\n\t                titleStatusLabel.setIcon(UI.Icon.NONE);\n\t                titleStatusMessage.setDisplay(false);\n\t            }\n\t            else {\n\t                titleStatusLabel.setText(status.message);\n\t                titleStatusLabel.setIcon(UI.Icon.BUG);\n\t                titleStatusMessage.setDisplay(true);\n\t            }\n\t        });\n\t        panel.addChild(titleTextField);\n\t        panel.addChild(UI.h3(\"Version of your API\"));\n\t        panel.addChild(UI.texfField(\"\", this.version, function (x) { return _this.version = x.getBinding().get(); }));\n\t        panel.addChild(UI.h3(\"Base URI of your API\"));\n\t        panel.addChild(UI.texfField(\"\", this.baseUri, function (x) { return _this.baseUri = x.getBinding().get(); }));\n\t        section.addChild(panel);\n\t        var r1 = UI.checkBox(\"Use RAML 1.0\");\n\t        r1.setValue(this._raml1);\n\t        r1.getBinding().addListener(function (x) { return _this._raml1 = r1.getValue(); });\n\t        section.addChild(r1);\n\t        var r2 = UI.checkBox(\"Create default directory structure\");\n\t        r2.setValue(this._defStructure);\n\t        r2.getBinding().addListener(function (x) { return _this._defStructure = r2.getValue(); });\n\t        section.addChild(r2);\n\t        var r3 = UI.checkBox(\"Create sample resource and method\");\n\t        r3.setValue(this._createSampleResource);\n\t        r3.getBinding().addListener(function (x) { return _this._createSampleResource = r3.getValue(); });\n\t        section.addChild(r3);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        buttonBar.addChild(UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            if (_this.validateTitle(_this.apititle).code === UI.StatusCode.ERROR) {\n\t                return;\n\t            }\n\t            if (_this.validateProjectLocation(_this.sourceValue).code === UI.StatusCode.ERROR) {\n\t                return;\n\t            }\n\t            _this.onOk(zz);\n\t            zz.destroy();\n\t        }));\n\t        section.addChild(buttonBar);\n\t        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n\t    };\n\t    NewProjectDialog.prototype.createIfNotExist = function (p) {\n\t        var ps = path.resolve(this.sourceValue, p);\n\t        if (!fs.existsSync(ps)) {\n\t            fs.mkdirSync(ps);\n\t        }\n\t    };\n\t    NewProjectDialog.prototype.onOk = function (zz) {\n\t        if (!fs.existsSync(this.sourceValue)) {\n\t            fs.mkdirSync(this.sourceValue);\n\t        }\n\t        if (this._defStructure) {\n\t            this.createIfNotExist(\"schemas\");\n\t            this.createIfNotExist(\"examples\");\n\t            this.createIfNotExist(\"traits\");\n\t            this.createIfNotExist(\"resourceTypes\");\n\t            this.createIfNotExist(\"securitySchemes\");\n\t            this.createIfNotExist(\"documentation\");\n\t            if (this._raml1) {\n\t                this.createIfNotExist(\"notebooks\");\n\t                this.createIfNotExist(\"scripts\");\n\t            }\n\t        }\n\t        var content = createRAMLFile(this.apititle, this.version, this.baseUri, this._createSampleResource, this._raml1);\n\t        var ps = path.resolve(this.sourceValue, \"api.raml\");\n\t        fs.writeFileSync(ps, content);\n\t        atom.open({ pathsToOpen: [this.sourceValue, ps] });\n\t    };\n\t    return NewProjectDialog;\n\t}());\n\tfunction createRAMLFile(title, version, baseUri, sample, raml1) {\n\t    if (sample === void 0) { sample = true; }\n\t    if (raml1 === void 0) { raml1 = true; }\n\t    var apiLines = [(raml1 ? \"#%RAML 1.0\" : \"#%RAML 0.8\"), (\"title: \" + title)];\n\t    if (version)\n\t        apiLines.push(\"version: \" + version);\n\t    if (baseUri)\n\t        apiLines.push(\"baseUri: \" + baseUri);\n\t    var typesLines = [\n\t        'types:',\n\t        '  TestType:',\n\t        '    type: object',\n\t        '    properties:',\n\t        '      id: number',\n\t        '      optional?: string',\n\t        '      expanded:',\n\t        '        type: object',\n\t        '        properties:',\n\t        '          count: number'\n\t    ], resourceLines = [\n\t        '/helloWorld:',\n\t        '  get:',\n\t        '    responses:',\n\t        '      200:',\n\t        '        body:',\n\t        '          application/json:',\n\t        '            example: |',\n\t        '              {',\n\t        '                \"message\" : \"Hello World\"',\n\t        '              }'\n\t    ];\n\t    var result = apiLines;\n\t    if (sample) {\n\t        if (raml1)\n\t            result = result.concat(typesLines);\n\t        result = result.concat(resourceLines);\n\t    }\n\t    return result.join('\\n') + '\\n';\n\t}\n\texports.createRAMLFile = createRAMLFile;\n\tfunction newProject() {\n\t    new NewProjectDialog().show();\n\t}\n\texports.newProject = newProject;\n\t// export function moveResource(h:hl.IHighLevelNode){\n\t//     new move.MoveElementsDialog(h, \"Resource Type\",true).show()\n\t// }\n\tfunction splitOnLines(text) {\n\t    var lines = text.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n\t    return lines;\n\t}\n\texports.splitOnLines = splitOnLines;\n\tfunction cleanEmptyLines(text) {\n\t    var lines = splitOnLines(text);\n\t    var rs = [];\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (lines[i].trim().length > 0) {\n\t            rs.push(lines[i]);\n\t        }\n\t    }\n\t    return rs.join(\"\");\n\t}\n\texports.cleanEmptyLines = cleanEmptyLines;\n\t//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n\tfunction stripIndent(text, indent) {\n\t    var lines = splitOnLines(text);\n\t    var rs = [];\n\t    for (var i = 0; i < lines.length; i++) {\n\t        if (i == 0) {\n\t            rs.push(lines[0]);\n\t        }\n\t        else {\n\t            rs.push(lines[i].substring(indent.length));\n\t        }\n\t    }\n\t    return rs.join(\"\");\n\t}\n\tvar leadingIndent = function (node, text) {\n\t    var leading = \"\";\n\t    var pos = node.start() - 1;\n\t    while (pos > 0) {\n\t        var ch = text[pos];\n\t        if (ch == '\\r' || ch == '\\n')\n\t            break;\n\t        leading = ch + leading;\n\t        pos--;\n\t    }\n\t    return leading;\n\t};\n\tfunction indent(line) {\n\t    var rs = \"\";\n\t    for (var i = 0; i < line.length; i++) {\n\t        var c = line[i];\n\t        if (c == '\\r' || c == '\\n') {\n\t            continue;\n\t        }\n\t        if (c == ' ' || c == '\\t') {\n\t            rs += c;\n\t            continue;\n\t        }\n\t        break;\n\t    }\n\t    return rs;\n\t}\n\tfunction getActiveEditor() {\n\t    var activeEditor = atom.workspace.getActiveTextEditor();\n\t    if (activeEditor) {\n\t        return activeEditor;\n\t    }\n\t    if (editorTools.aquireManager())\n\t        return editorTools.aquireManager().getCurrentEditor();\n\t    return null;\n\t}\n\texports.getActiveEditor = getActiveEditor;\n\tvar MoveToNewFileDialog = (function () {\n\t    function MoveToNewFileDialog(node) {\n\t        this.node = node;\n\t    }\n\t    MoveToNewFileDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"please enter correct destination path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please enter destination path\"));\n\t        var txt = UI.texfField(\"\", \"\", function (x) {\n\t            if (!txt) {\n\t                return;\n\t            }\n\t            _this.destination = txt.getBinding().get();\n\t            var isError = _this.destination.trim().length == 0;\n\t            if (!isError) {\n\t                if (path.extname(_this.destination) != '.raml') {\n\t                    isError = true;\n\t                }\n\t            }\n\t            if (!isError) {\n\t                var dir = path.resolve(path.dirname(getActiveEditor().getPath()), path.dirname(_this.destination));\n\t                if (!fs.existsSync(dir)) {\n\t                    isError = true;\n\t                }\n\t                else {\n\t                    var st = fs.statSync(dir);\n\t                    if (!st.isDirectory()) {\n\t                        isError = true;\n\t                    }\n\t                }\n\t            }\n\t            errorLabel.setDisplay(isError);\n\t            okButton.setDisabled(isError);\n\t        });\n\t        vc.addChild(UI.vc(txt));\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            var d = path.resolve(path.dirname(getActiveEditor().getPath()), _this.destination);\n\t            var dump = _this.node.lowLevel().dump();\n\t            var ci = splitOnLines(dump);\n\t            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n\t            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n\t            dump = stripIndent(dump, li);\n\t            dump = \"#%RAML 0.8 \" + _this.node.definition().nameId() + \"\\n\" + dump;\n\t            fs.writeFileSync(d, dump);\n\t            //no we need to replace content of the node with text;\n\t            var txt = node.lowLevel().unit().contents();\n\t            var endPart = txt.substring(node.lowLevel().end());\n\t            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n\t            var vl = startPart + \" !include \" + _this.destination + endPart;\n\t            getActiveEditor().setText(vl);\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveToNewFileDialog;\n\t}());\n\texports.MoveToNewFileDialog = MoveToNewFileDialog;\n\tfunction moveOut(h) {\n\t    new MoveToNewFileDialog(h).show();\n\t}\n\texports.moveOut = moveOut;\n\tfunction revalidate() {\n\t    var currentEditor = getActiveEditor();\n\t    if (!currentEditor)\n\t        return;\n\t    linterUI.relint(currentEditor);\n\t}\n\texports.revalidate = revalidate;\n\tfunction renameRAMLElement() {\n\t    var ed = getActiveEditor();\n\t    var quickFixes = [];\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var node = provider.getAstNode(request, false);\n\t            if (!node) {\n\t                return;\n\t            }\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var kind = search.determineCompletionKind(ed.getBuffer().getText(), offset);\n\t            if (kind == search.LocationKind.VALUE_COMPLETION) {\n\t                var hlnode = node;\n\t                var attr = _.find(hlnode.attrs(), function (x) { return x.lowLevel().start() < offset && x.lowLevel().end() >= offset && !x.property().getAdapter(services.RAMLPropertyService).isKey(); });\n\t                if (attr) {\n\t                    if (attr.value()) {\n\t                        var p = attr.property();\n\t                        //FIXME INFRASTRUCTURE NEEDED\n\t                        var v = attr.value();\n\t                        var targets = search.referenceTargets(p, hlnode);\n\t                        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n\t                        if (t) {\n\t                            UI.prompt(\"New name for \" + attr.value(), function (newVal) {\n\t                                findUsagesImpl(function (n, r) {\n\t                                    //todo update nodes\n\t                                    r.reverse().forEach(function (x) {\n\t                                        var ua = x;\n\t                                        ua.asAttr().setValue(newVal);\n\t                                    });\n\t                                    n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n\t                                    var ed = getActiveEditor();\n\t                                    ed.getBuffer().setText(n.lowLevel().unit().contents());\n\t                                });\n\t                            }, attr.value());\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (kind == search.LocationKind.KEY_COMPLETION || kind == search.LocationKind.SEQUENCE_KEY_COPLETION) {\n\t                var hlnode = node;\n\t                UI.prompt(\"New name for \" + hlnode.name(), function (newVal) {\n\t                    findUsagesImpl(function (n, r) {\n\t                        var oldValue = n.attrValue(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId());\n\t                        //todo update nodes\n\t                        r.reverse().forEach(function (x) {\n\t                            var ua = x;\n\t                            renameInProperty(ua.asAttr(), oldValue, newVal);\n\t                        });\n\t                        n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n\t                        var ed = getActiveEditor();\n\t                        ed.getBuffer().setText(n.lowLevel().unit().contents());\n\t                    });\n\t                }, hlnode.name());\n\t            }\n\t        }\n\t    }\n\t}\n\texports.renameRAMLElement = renameRAMLElement;\n\tfunction renameInProperty(property, contentToReplace, replaceWith) {\n\t    var oldPropertyValue = property.value();\n\t    if (typeof oldPropertyValue == 'string') {\n\t        var oldPropertyStringValue = oldPropertyValue;\n\t        var newPropertyStringValue = oldPropertyStringValue.replace(contentToReplace, replaceWith);\n\t        property.setValue(newPropertyStringValue);\n\t        if (oldPropertyStringValue.indexOf(contentToReplace) == -1) {\n\t            if (property.name().indexOf(contentToReplace) != -1) {\n\t                var newValue = property.name().replace(contentToReplace, replaceWith);\n\t                property.setKey(newValue);\n\t            }\n\t        }\n\t        return;\n\t    }\n\t    else if (oldPropertyValue && (typeof oldPropertyValue === \"object\")) {\n\t        var structuredValue = oldPropertyValue;\n\t        var oldPropertyStringValue = structuredValue.valueName();\n\t        if (oldPropertyStringValue.indexOf(contentToReplace) != -1) {\n\t            var convertedHighLevel = structuredValue.toHighLevel();\n\t            if (convertedHighLevel) {\n\t                var found = false;\n\t                if (convertedHighLevel.definition().isAnnotationType()) {\n\t                    var prop = getKey(convertedHighLevel.definition(), structuredValue.lowLevel());\n\t                    prop.setValue(\"(\" + replaceWith + \")\");\n\t                    return;\n\t                }\n\t                convertedHighLevel.attrs().forEach(function (attribute) {\n\t                    if (attribute.property().getAdapter(services.RAMLPropertyService).isKey()) {\n\t                        var oldValue = attribute.value();\n\t                        if (typeof oldValue == 'string') {\n\t                            found = true;\n\t                            var newValue = oldValue.replace(contentToReplace, replaceWith);\n\t                            attribute.setValue(newValue);\n\t                        }\n\t                    }\n\t                });\n\t                return;\n\t            }\n\t        }\n\t    }\n\t    //default case\n\t    property.setValue(replaceWith);\n\t}\n\tfunction getKey(t, n) {\n\t    var up = new def.UserDefinedProp(\"name\", null);\n\t    //up.withDomain(this);\n\t    up.withRange(this.universe().type(universes.Universe10.StringType.name));\n\t    up.withFromParentKey(true);\n\t    var node = t.getAdapter(services.RAMLService).getDeclaringNode();\n\t    //node:ll.ILowLevelASTNode, parent:hl.IHighLevelNode, private _def:hl.IValueTypeDefinition, private _prop:hl.IProperty, private fromKey:boolean = false\n\t    return stubs.createASTPropImpl(n, node, up.range(), up, true);\n\t    //rs.push(up);\n\t}\n\tvar getKeyValue = function (offset, txt) {\n\t    var m = offset;\n\t    for (var i = offset; i >= 0; i--) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n\t            m = i + 1;\n\t            break;\n\t        }\n\t    }\n\t    var res = \"\";\n\t    for (var i = m; m < txt.length; i++) {\n\t        var c = txt.charAt(i);\n\t        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n\t            break;\n\t        }\n\t        res += c;\n\t    }\n\t    return res;\n\t};\n\tfunction select() {\n\t    var ed = getActiveEditor();\n\t    var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t    var node = provider.getAstNode(request, false);\n\t    if (!node) {\n\t        return;\n\t    }\n\t    var start = ed.getBuffer().positionForCharacterIndex(node.lowLevel().start());\n\t    var end = ed.getBuffer().positionForCharacterIndex(node.lowLevel().end());\n\t    ed.setSelectedBufferRange({ start: start, end: end }, {});\n\t}\n\texports.select = select;\n\t//export function expandSignature(attr:hl.IAttribute){\n\t//    var tr=signature.convertToTrait(signature.parse(attr));\n\t//    //console.log('trait:\\n' + tr.highLevel().lowLevel().dump());\n\t//    var res = attr.parent();\n\t//    //pr.remove(attr); // incorrect usage!!! remove attributes as below\n\t//    attr.remove();\n\t//    tr.highLevel().elements().forEach(x=>{\n\t//        res.add(<any>x)\n\t//    });\n\t//    var ed=getActiveEditor();\n\t//    ed.setText(attr.root().lowLevel().unit().contents());\n\t//}\n\tfunction findUsagesImpl(f) {\n\t    if (f === void 0) { f = display; }\n\t    var ed = getActiveEditor();\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var p = request.editor.getPath();\n\t            var prj = rp.project.createProject(path.dirname(p));\n\t            var unit = prj.unit(path.basename(p));\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var text = request.editor.getBuffer().getText();\n\t            unit.updateContent(text);\n\t            var decl = search.findUsages(unit, offset);\n\t            if (decl.node) {\n\t                f(decl.node, _.filter(decl.results, function (result) { return (result && result.parent && result.parent() !== decl.node); }));\n\t            }\n\t        }\n\t    }\n\t}\n\texports.findUsagesImpl = findUsagesImpl;\n\tfunction findUsages() {\n\t    findUsagesImpl(display);\n\t}\n\texports.findUsages = findUsages;\n\tvar SearchResultView = (function (_super) {\n\t    __extends(SearchResultView, _super);\n\t    function SearchResultView(query, _result) {\n\t        _super.call(this);\n\t        this.query = query;\n\t        this._result = _result;\n\t        this.isAttached = false;\n\t    }\n\t    SearchResultView.prototype.initialize = function () {\n\t        _super.prototype.initialize.apply(this, arguments);\n\t        return true;\n\t    };\n\t    SearchResultView.content = function () {\n\t        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n\t    };\n\t    SearchResultView.prototype.attached = function () {\n\t        if (this.isAttached) {\n\t            return;\n\t        }\n\t        this.load();\n\t        this.isAttached = true;\n\t    };\n\t    SearchResultView.prototype.setInput = function (query, _result) {\n\t        this.query = query;\n\t        this._result = _result;\n\t        this.load();\n\t    };\n\t    SearchResultView.prototype.load = function () {\n\t        var _this = this;\n\t        var section = UI.section(\"Find usages for \" + this.query, UI.Icon.SEARCH);\n\t        var view = UI.list(this._result, function (x) {\n\t            var p1 = getActiveEditor().getBuffer().positionForCharacterIndex(x.getLowLevelStart());\n\t            var res = UI.hc(UI.a(x.id(), function (y) {\n\t                openPropertyNode(getActiveEditor(), x);\n\t            }), UI.label(x.lowLevel().unit().path() + \" line:\", UI.Icon.NONE, UI.TextClasses.SUBTLE).pad(5, 5), UI.label(\"\" + p1.row, UI.Icon.NONE, UI.TextClasses.SUCCESS));\n\t            return res;\n\t        });\n\t        view.setStyle(\"max-height\", \"400px\");\n\t        section.addChild(view);\n\t        section.addChild(UI.button(\"Close\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) { _this.panel.destroy(); sv = null; }));\n\t        this.html(section.renderUI());\n\t    };\n\t    return SearchResultView;\n\t}(SpacePenViews.ScrollView));\n\tvar sv;\n\tfunction display(query, n) {\n\t    if (sv) {\n\t        sv.setInput(query.name(), n);\n\t    }\n\t    else {\n\t        sv = new SearchResultView(query.name() + \":\" + query.definition().nameId(), n);\n\t        sv.panel = atom.workspace.addBottomPanel({ item: sv });\n\t    }\n\t}\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openPropertyNode = function (ed, t) {\n\t    var p1 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelStart());\n\t    var p2 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelEnd());\n\t    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n\t};\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openNode = function (ed, t) {\n\t    openLowLevelNode(ed, t.lowLevel());\n\t};\n\t//TODO REFACTOR COMMON LOGIC TO COFE\n\tvar openLowLevelNode = function (ed, t) {\n\t    if (t.unit().absolutePath() != ed.getPath()) {\n\t        atom.workspace.open(t.unit().absolutePath(), {}).then(function (x) {\n\t            ed = getActiveEditor();\n\t            openLowLevelNode(ed, t);\n\t        });\n\t        return;\n\t    }\n\t    var p1 = ed.getBuffer().positionForCharacterIndex(t.start());\n\t    var p2 = ed.getBuffer().positionForCharacterIndex(t.end());\n\t    p2.column = p1.column + t.key() ? t.key().length : 0;\n\t    p2.row = p1.row;\n\t    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n\t};\n\tfunction gotoDeclaration() {\n\t    var ed = getActiveEditor();\n\t    if (ed) {\n\t        if (path.extname(ed.getPath()) == '.raml') {\n\t            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n\t            var p = request.editor.getPath();\n\t            var prj = rp.project.createProject(path.dirname(p));\n\t            var unit = prj.unit(path.basename(p));\n\t            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n\t            var text = request.editor.getBuffer().getText();\n\t            unit.updateContent(text);\n\t            var decl = search.findDeclaration(unit, offset);\n\t            if (!decl) {\n\t                var canBeReference = search.deepFindNode(unit.highLevel(), offset, offset, false);\n\t                var parentProperty = canBeReference && canBeReference.parent() && canBeReference.parent().property();\n\t                decl = index_1.universeHelpers.isUsesProperty(parentProperty) && search.findDeclaration(unit, offset, search.LocationKind.PATH_COMPLETION);\n\t            }\n\t            if (decl) {\n\t                if (!decl.absolutePath) {\n\t                    openLowLevelNode(ed, decl.lowLevel());\n\t                }\n\t                else {\n\t                    var absolutePath = decl.absolutePath();\n\t                    if (absolutePath && absolutePath.toLowerCase().indexOf('http') === 0) {\n\t                        return;\n\t                    }\n\t                    atom.workspace.open(absolutePath, {});\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\texports.gotoDeclaration = gotoDeclaration;\n\t\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar path = __webpack_require__(17);\n\tvar rp = __webpack_require__(23);\n\tvar utils = rp.utils;\n\tvar rr = rp.utils;\n\tvar unitUtils = __webpack_require__(38);\n\tvar TextBuffer = __webpack_require__(29);\n\tvar editorManager = __webpack_require__(39);\n\tvar editorTools = __webpack_require__(5);\n\texports.grammarScopes = ['source.raml'];\n\texports.scope = 'file';\n\texports.lintOnFly = true;\n\tvar lintersToDestroy = [];\n\tvar linterApiProxy = {};\n\texports.relint = function (editor) {\n\t    var editorPath = editor.getPath && editor.getPath();\n\t    var extName = editorPath && path.extname(editorPath);\n\t    var lowerCase = extName && extName.toLowerCase();\n\t    var linter = linterApiProxy.getEditorLinter(editor);\n\t    lintersToDestroy.push(linter);\n\t    if (lowerCase === '.raml' || lowerCase === '.yaml') {\n\t        var res = lint(editor);\n\t        if (!rr.hasAsyncRequests()) {\n\t            linterApiProxy.setMessages(linter, res);\n\t        }\n\t        setupLinterCallback(editor, function () { return linterApiProxy.deleteMessages(linter); });\n\t        linter.onDidDestroy(function () {\n\t            removeLinterCallback(editor);\n\t        });\n\t        editor.onDidDestroy(function () {\n\t            destroyLinter(linterApiProxy, linter);\n\t        });\n\t    }\n\t};\n\tfunction relintLater(editor) {\n\t    Promise.resolve(editor).then(function (editor) {\n\t        exports.relint(editor);\n\t    });\n\t}\n\tfunction initEditorObservers(linterApi) {\n\t    linterApiProxy = linterApi;\n\t    rr.addLoadCallback(function (x) {\n\t        atom.workspace.getTextEditors().forEach(function (x) { return relintLater(x); });\n\t        var manager = editorTools.aquireManager();\n\t        if (manager) {\n\t            manager.updateDetails();\n\t        }\n\t    });\n\t    atom.workspace.observeTextEditors(relintLater);\n\t    return {\n\t        dispose: function () {\n\t            lintersToDestroy.forEach(function (linter) {\n\t                destroyLinter(linterApi, linter);\n\t            });\n\t        }\n\t    };\n\t}\n\texports.initEditorObservers = initEditorObservers;\n\tfunction destroyLinter(linterApi, linter) {\n\t    linterApi.deleteMessages(linter);\n\t    linterApi.deleteLinter(linter);\n\t}\n\t;\n\tfunction setupLinterCallback(editor, callback) {\n\t    editor.linterCallback = callback;\n\t}\n\tfunction removeLinterCallback(editor) {\n\t    editor.linterCallback = null;\n\t}\n\tfunction execLinterCallback(editor) {\n\t    if (editor.linterCallback) {\n\t        editor.linterCallback();\n\t        removeLinterCallback(editor);\n\t    }\n\t}\n\tfunction lint(textEditor) {\n\t    var result = actualLint(textEditor);\n\t    if (rr.hasAsyncRequests()) {\n\t        return [];\n\t    }\n\t    return result;\n\t}\n\texports.lint = lint;\n\tfunction isRAMLUnit(editor) {\n\t    var contents = editor.getBuffer().getText();\n\t    return unitUtils.isRAMLUnit(contents);\n\t}\n\tvar combErrors = function (result) {\n\t    var map = {};\n\t    result.forEach(function (x) {\n\t        var original = JSON.parse(JSON.stringify(x));\n\t        original.trace = null;\n\t        var newKey = JSON.stringify(original);\n\t        var tr = map[newKey];\n\t        if (tr) {\n\t            tr.push(x);\n\t        }\n\t        else {\n\t            map[newKey] = [x];\n\t        }\n\t    });\n\t    var rs = [];\n\t    for (var i in map) {\n\t        var mes = JSON.parse(i);\n\t        mes.trace = [];\n\t        var ms = map[i];\n\t        ms.forEach(function (x) {\n\t            if (x.trace) {\n\t                mes.trace = mes.trace.concat(x.trace);\n\t            }\n\t        });\n\t        mes.trace = combErrors(mes.trace);\n\t        rs.push(mes);\n\t    }\n\t    return rs;\n\t};\n\tfunction actualLint(textEditor) {\n\t    execLinterCallback(textEditor);\n\t    if (rr.hasAsyncRequests()) {\n\t        return [];\n\t    }\n\t    if (!isRAMLUnit(textEditor))\n\t        return [];\n\t    var l = new Date().getTime();\n\t    var astNode = editorManager.ast(textEditor);\n\t    if (astNode == null) {\n\t        return [];\n\t    }\n\t    var result = [];\n\t    var acceptor = new Acceptor(textEditor, result, astNode.root());\n\t    var c = astNode.lowLevel() ? astNode.lowLevel().unit().contents() : \"\";\n\t    var tab = 0;\n\t    while (true) {\n\t        var tab = c.indexOf('\\t', tab);\n\t        if (tab != -1) {\n\t            var p1 = textEditor.getBuffer().positionForCharacterIndex(tab);\n\t            var p2 = textEditor.getBuffer().positionForCharacterIndex(tab + 1);\n\t            var t = \"Using tabs  can lead to unpredictable results\";\n\t            var message = {\n\t                type: (\"Warning\"),\n\t                filePath: textEditor.getPath(),\n\t                text: t,\n\t                trace: [],\n\t                range: [[p1.row, p1.column], [p2.row, p2.column]]\n\t            };\n\t            result.push(message);\n\t            tab++;\n\t        }\n\t        else {\n\t            break;\n\t        }\n\t    }\n\t    if (!astNode.lowLevel()) {\n\t        return [];\n\t    }\n\t    gatherValidationErrors(astNode, result, textEditor);\n\t    var l1 = new Date().getTime();\n\t    var rs = combErrors(result);\n\t    if (editorTools.aquireManager()) {\n\t        if (editorTools.aquireManager().performanceDebug) {\n\t            console.log(\"Linting took:\" + (l1 - l));\n\t        }\n\t    }\n\t    var warnings = 0;\n\t    return rs.filter(function (x) {\n\t        return x;\n\t    })\n\t        .filter(function (x) {\n\t        if (x.type === \"Warning\") {\n\t            if (warnings >= 20) {\n\t                return false;\n\t            }\n\t            warnings++;\n\t        }\n\t        return x;\n\t    });\n\t}\n\tvar Acceptor = (function (_super) {\n\t    __extends(Acceptor, _super);\n\t    function Acceptor(editor, errors, primaryUnit) {\n\t        _super.call(this, errors, primaryUnit);\n\t        this.editor = editor;\n\t        this.buffers = {};\n\t    }\n\t    Acceptor.prototype.accept = function (issue) {\n\t        var _this = this;\n\t        if (!issue) {\n\t            return;\n\t        }\n\t        this.transformIssue(issue);\n\t        var issueType = issue.isWarning ? \"Warning\" : 'Error';\n\t        var issuesArray = [];\n\t        while (issue) {\n\t            issuesArray.push(issue);\n\t            if (issue.extras && issue.extras.length > 0) {\n\t                issue = issue.extras[0];\n\t            }\n\t            else {\n\t                issue = null;\n\t            }\n\t        }\n\t        var issues = issuesArray.reverse().map(function (x) {\n\t            var result = _this.convertParserIssue(x, issueType);\n\t            issueType = \"Trace\";\n\t            return result;\n\t        });\n\t        for (var i = 0; i < issues.length - 1; i++) {\n\t            issues[0].trace.push(issues[i + 1]);\n\t        }\n\t        var message = issues[0];\n\t        this.errors.push(message);\n\t    };\n\t    Acceptor.prototype.convertParserIssue = function (x, iType) {\n\t        var t = x.message;\n\t        var buf = this.editor.getBuffer();\n\t        var ps = x.path;\n\t        if (x.unit) {\n\t            ps = x.unit.absolutePath();\n\t        }\n\t        if (ps) {\n\t            if (this.buffers[ps]) {\n\t                buf = this.buffers[ps];\n\t            }\n\t            else {\n\t                buf = new TextBuffer(x.unit.contents());\n\t                this.buffers[ps] = buf;\n\t            }\n\t        }\n\t        var p1 = buf.positionForCharacterIndex(x.start);\n\t        var p2 = buf.positionForCharacterIndex(x.end);\n\t        var trace = {\n\t            type: iType,\n\t            filePath: x.path ? ps : this.editor.getPath(),\n\t            text: t,\n\t            range: [[p1.row, p1.column], [p2.row, p2.column]],\n\t            trace: [],\n\t        };\n\t        return trace;\n\t    };\n\t    Acceptor.prototype.acceptUnique = function (issue) {\n\t        this.accept(issue);\n\t    };\n\t    Acceptor.prototype.end = function () {\n\t    };\n\t    return Acceptor;\n\t}(utils.PointOfViewValidationAcceptorImpl));\n\tfunction gatherValidationErrors(astNode, errors, editor) {\n\t    if (astNode) {\n\t        astNode.validate(new Acceptor(editor, errors, astNode.root()));\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar editorTools = __webpack_require__(5);\n\tvar commonContextActions = __webpack_require__(36);\n\tvar provider = __webpack_require__(7);\n\tvar outlineInitializer = __webpack_require__(37);\n\tvar path = __webpack_require__(17);\n\tvar unitUtils = __webpack_require__(38);\n\tvar parser = __webpack_require__(23);\n\tfunction initialize() {\n\t    var editorProvider = {\n\t        getCurrentEditor: function () {\n\t            var gotEditorFromOutline = false;\n\t            var editor = null;\n\t            if (atom.workspace.getActiveTextEditor()) {\n\t                editor = atom.workspace.getActiveTextEditor();\n\t            }\n\t            else if (editorTools.aquireManager()) {\n\t                editor = editorTools.aquireManager().getCurrentEditor();\n\t                gotEditorFromOutline = true;\n\t            }\n\t            return editor;\n\t        }\n\t    };\n\t    var astProvider = {\n\t        getASTRoot: function () {\n\t            var selectedNode = this.getSelectedNode();\n\t            if (selectedNode)\n\t                return selectedNode.root();\n\t            var editor = null;\n\t            if (editorTools.aquireManager()) {\n\t                editor = editorTools.aquireManager().getCurrentEditor();\n\t            }\n\t            if (!editor && atom.workspace.getActiveTextEditor()) {\n\t                editor = atom.workspace.getActiveTextEditor();\n\t            }\n\t            if (!editor)\n\t                return null;\n\t            if (!unitUtils.isRAMLUnit(editor.getBuffer().getText()))\n\t                return null;\n\t            var filePath = editor.getPath();\n\t            var prj = parser.project.createProject(path.dirname(filePath));\n\t            var offset = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n\t            var text = editor.getBuffer().getText();\n\t            var unit = prj.setCachedUnitContent(path.basename(filePath), text);\n\t            return unit.highLevel();\n\t        },\n\t        getSelectedNode: function () {\n\t            var editor = null;\n\t            var gotEditorFromOutline = false;\n\t            if (editorTools.aquireManager()) {\n\t                editor = editorTools.aquireManager().getCurrentEditor();\n\t                gotEditorFromOutline = true;\n\t            }\n\t            if (!editor && atom.workspace.getActiveTextEditor()) {\n\t                editor = atom.workspace.getActiveTextEditor();\n\t            }\n\t            if (!editor)\n\t                return null;\n\t            if (path.extname(editor.getPath()) != '.raml')\n\t                return null;\n\t            if (!unitUtils.isRAMLUnit(editor.getBuffer().getText()))\n\t                return null;\n\t            var request = {\n\t                editor: editor,\n\t                bufferPosition: editor.getCursorBufferPosition()\n\t            };\n\t            var node = null;\n\t            if (gotEditorFromOutline) {\n\t                node = editorTools.aquireManager().getSelectedNode();\n\t            }\n\t            else {\n\t                if (editor.getBuffer()) {\n\t                    var lastPosition = editor.getBuffer().getEndPosition();\n\t                    if (lastPosition.column == request.bufferPosition.column\n\t                        && lastPosition.row == request.bufferPosition.row) {\n\t                        return null;\n\t                    }\n\t                    if (request.bufferPosition.row == 0 && request.bufferPosition.column == 0) {\n\t                        return null;\n\t                    }\n\t                }\n\t                node = provider.getAstNode(request, false);\n\t            }\n\t            return node;\n\t        }\n\t    };\n\t    var astModifier = {\n\t        deleteNode: function (node) {\n\t            var editorManager = editorTools.aquireManager();\n\t            if (editorManager && editorManager._view) {\n\t                editorManager._view.forEachViewer(function (x) { return x.remove(node); });\n\t            }\n\t            var parent = node.parent();\n\t            if (parent) {\n\t                parent.remove(node);\n\t                parent.resetChildren();\n\t            }\n\t        },\n\t        updateText: function (node) {\n\t            var editorManager = editorTools.aquireManager();\n\t            if (editorManager) {\n\t                editorManager.updateText(node);\n\t            }\n\t        }\n\t    };\n\t    commonContextActions.initialize(editorProvider, astProvider, astModifier);\n\t    outlineInitializer.initialize(editorProvider, astProvider);\n\t    provider.initialize(astProvider);\n\t}\n\texports.initialize = initialize;\n\t\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar _ = __webpack_require__(26);\n\texports.DYNAMIC_COMMAND_TAG = \"DYNAMIC_COMMAND_TAG\";\n\tvar commandIdToCommandInfo = {};\n\tvar tagToCommands = {};\n\t/**\n\t * Adds new managed command\n\t * @param selector - command CSS selector\n\t * @param id - command id. Must be unique across the managed commands.\n\t * @param callBack - called on command invocation\n\t * @param tag - optional action tag allowing to perform batch operations\n\t */\n\tfunction addCommand(selector, id, callBack, tag) {\n\t    if (_.find(listCommands(), function (commandId) {\n\t        if (commandId == id) {\n\t            return true;\n\t        }\n\t        return false;\n\t    })) {\n\t        return;\n\t    }\n\t    var disposable = atom.commands.add(selector, id, callBack);\n\t    var commandInfo = {\n\t        commandId: id,\n\t        tag: tag,\n\t        disposable: disposable\n\t    };\n\t    commandIdToCommandInfo[id] = commandInfo;\n\t    if (tag) {\n\t        var tagCommands = tagToCommands[tag];\n\t        if (!tagCommands) {\n\t            tagCommands = [];\n\t            tagToCommands[tag] = tagCommands;\n\t        }\n\t        tagCommands.push(commandInfo);\n\t    }\n\t}\n\texports.addCommand = addCommand;\n\t/**\n\t * Deletes unmanaged command.\n\t * Generally, should not be called for managed actions, use the managed\n\t * version instead.\n\t * @param id - command id\n\t */\n\tfunction deleteUnmanagedCommand(id) {\n\t    atom.commands.registeredCommands[id] = null;\n\t    atom.commands.selectorBasedListenersByCommandName[id] = null;\n\t}\n\texports.deleteUnmanagedCommand = deleteUnmanagedCommand;\n\t/**\n\t * Deletes managed action by id\n\t * @param id\n\t */\n\tfunction deleteManagedCommand(id) {\n\t    var commandInfo = commandIdToCommandInfo[id];\n\t    if (!commandInfo)\n\t        return;\n\t    commandInfo.disposable.dispose();\n\t    delete commandIdToCommandInfo[id];\n\t    if (commandInfo.tag) {\n\t        var tagCommands = tagToCommands[commandInfo.tag];\n\t        if (!tagCommands)\n\t            return;\n\t        var infoIndex = -1;\n\t        _.find(tagCommands, function (currentInfo, index) {\n\t            if (currentInfo.commandId == id) {\n\t                infoIndex = index;\n\t                return true;\n\t            }\n\t            return false;\n\t        });\n\t        if (infoIndex != -1)\n\t            tagCommands.splice(infoIndex, 1);\n\t    }\n\t}\n\texports.deleteManagedCommand = deleteManagedCommand;\n\t/**\n\t * Deletes all managed commands tagged the the specific tag\n\t * @param tag\n\t */\n\tfunction deleteCommandsByTag(tag) {\n\t    var tagCommands = tagToCommands[tag];\n\t    if (!tagCommands)\n\t        return;\n\t    for (var index in tagCommands) {\n\t        var currentInfo = tagCommands[index];\n\t        currentInfo.disposable.dispose();\n\t        delete commandIdToCommandInfo[currentInfo.commandId];\n\t    }\n\t    delete tagToCommands[tag];\n\t}\n\texports.deleteCommandsByTag = deleteCommandsByTag;\n\t/**\n\t * Lists all commands, both managed and unmanaged.\n\t * @returns {string[]}\n\t */\n\tfunction listCommands() {\n\t    var result = [];\n\t    for (var commandName in atom.commands.selectorBasedListenersByCommandName) {\n\t        result.push(commandName);\n\t    }\n\t    return result;\n\t}\n\texports.listCommands = listCommands;\n\tvar initialized = false;\n\tfunction initialize() {\n\t    if (initialized)\n\t        return;\n\t    initialized = true;\n\t    try {\n\t        //forcing command palette to register itself\n\t        atom.packages.activatePackage('command-palette');\n\t        //registering our own listener to command palette's command\n\t        var listener = function () {\n\t            prePanelDisplay();\n\t        };\n\t        listener.commandManager = true;\n\t        atom.commands.add('atom-workspace', 'command-palette:toggle', listener);\n\t        ////and now swapping those listeners, so our one is called first\n\t        //var listenersArray = (<any>atom.commands.selectorBasedListenersByCommandName)\n\t        //    [\"command-palette:toggle\"]\n\t        //listenersArray.splice(0,0,listenersArray[1])\n\t        //listenersArray.splice(1, 1)\n\t        var listenersArray = atom.commands.selectorBasedListenersByCommandName[\"command-palette:toggle\"];\n\t        listenersArray.forEach(function (listener) {\n\t            if (listener.callback.commandManager) {\n\t                listener.sequenceNumber = 100500000;\n\t            }\n\t        });\n\t    }\n\t    catch (Error) {\n\t        console.error(Error.message);\n\t    }\n\t}\n\texports.initialize = initialize;\n\tvar contributors = {};\n\tfunction registerContributor(contributor) {\n\t    contributors[contributor.id] = contributor;\n\t}\n\texports.registerContributor = registerContributor;\n\tfunction prePanelDisplay() {\n\t    deleteCommandsByTag(exports.DYNAMIC_COMMAND_TAG);\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationStarted) {\n\t            contributor.calculationStarted();\n\t        }\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        contributor.calculateItems().forEach(function (item) {\n\t            addCommand(item.selector, \"api-workbench:\" + item.id, item.callBack, exports.DYNAMIC_COMMAND_TAG);\n\t        });\n\t    }\n\t    for (var contributorId in contributors) {\n\t        var contributor = contributors[contributorId];\n\t        if (contributor.calculationFinished) {\n\t            contributor.calculationFinished();\n\t        }\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar actions = __webpack_require__(24);\n\tvar _ = __webpack_require__(26);\n\tvar commandManager = __webpack_require__(12);\n\tvar originalShowForEvent;\n\t/**\n\t * Must be called first, at startup, before the module is used.\n\t */\n\tfunction initialize() {\n\t    if (initialized) {\n\t        return;\n\t    }\n\t    initialized = true;\n\t    originalShowForEvent = atom.contextMenu.constructor.prototype.showForEvent;\n\t    atom.contextMenu.constructor.prototype.showForEvent = function (event) {\n\t        preMenuDisplay();\n\t        originalShowForEvent.apply(atom.contextMenu, [event]);\n\t        postMenuDisplay();\n\t    };\n\t}\n\texports.initialize = initialize;\n\tvar initialized = false;\n\tfunction preMenuDisplay() {\n\t    try {\n\t        var treeRoots = actions.calculateMenuItemsTree();\n\t        var nodeSets = {};\n\t        cleanExistingSets();\n\t        commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG);\n\t        treeRoots.forEach(function (node) {\n\t            var itemSet = nodeSets[node.selector];\n\t            if (!itemSet) {\n\t                itemSet = findOrCreateItemSet(node.selector);\n\t                nodeSets[node.selector] = itemSet;\n\t            }\n\t            var menuItem = constructAtomMenuItem(node);\n\t            itemSet.items.push(menuItem);\n\t        });\n\t    }\n\t    catch (Error) {\n\t        console.log(Error.message);\n\t    }\n\t}\n\tfunction constructAtomMenuItem(node) {\n\t    var result = {\n\t        label: node.name,\n\t    };\n\t    if (node.children.length > 0) {\n\t        result.submenu = [];\n\t    }\n\t    else {\n\t        var commandName = \"api-workbench:\" + node.name;\n\t        var existingCommands = commandManager.listCommands();\n\t        commandManager.addCommand(node.selector, commandName, node.onClick, commandManager.DYNAMIC_COMMAND_TAG);\n\t        result.command = commandName;\n\t    }\n\t    node.children.forEach(function (child) {\n\t        var childMenuItem = constructAtomMenuItem(child);\n\t        result.submenu.push(childMenuItem);\n\t    });\n\t    return result;\n\t}\n\tvar DYNAMIC_SET_TAG = \"DYNAMIC_SET_TAG\";\n\t/**\n\t * Selector that were used at least once in the context menu\n\t * @type {Array}\n\t */\n\tvar usedSelectors = [];\n\tfunction findOrCreateItemSet(selector) {\n\t    var existingSet = _.find(atom.contextMenu.itemSets, function (currentSet) {\n\t        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n\t    });\n\t    if (!existingSet) {\n\t        existingSet = {\n\t            items: [],\n\t            selector: selector,\n\t            specificity: 11,\n\t            tag: DYNAMIC_SET_TAG\n\t        };\n\t        atom.contextMenu.itemSets.push(existingSet);\n\t        //saving used selector name\n\t        if (!_.find(usedSelectors, function (name) { return name == selector; })) {\n\t            usedSelectors.push(selector);\n\t        }\n\t    }\n\t    return existingSet;\n\t}\n\tfunction cleanExistingSets() {\n\t    var existingSets = _.filter(atom.contextMenu.itemSets, function (currentSet) {\n\t        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n\t    });\n\t    existingSets.forEach(function (existingSet) {\n\t        existingSet.items = [];\n\t    });\n\t}\n\tfunction postMenuDisplay() {\n\t    //commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG)\n\t}\n\t\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(18);\n\tvar path = __webpack_require__(17);\n\tvar contextActions = __webpack_require__(24);\n\tvar rp = contextActions.parser;\n\tvar search = rp.search;\n\tvar stubs = rp.stubs;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar su = rp.schema;\n\tvar _ = __webpack_require__(26);\n\tvar UI = __webpack_require__(19);\n\tvar extract = __webpack_require__(40);\n\tvar def = rp.ds;\n\tvar move = __webpack_require__(41);\n\tvar assistUtils = __webpack_require__(9);\n\t/**\n\t * For unknown reason, compiler cant merge highlevel coming from raml-1-parser direct import\n\t * and the one coming from actions, so we need to convert manually.\n\t * @param node\n\t */\n\tfunction hlConv(node) {\n\t    return node;\n\t}\n\tvar AbstractDialogWithValidation = (function () {\n\t    function AbstractDialogWithValidation(parentNode, name) {\n\t        this.parentNode = parentNode;\n\t        this.name = name;\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractDialogWithValidation.prototype.validate = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    AbstractDialogWithValidation.prototype.performOk = function () {\n\t    };\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    AbstractDialogWithValidation.prototype.createBody = function (section) {\n\t    };\n\t    /**\n\t     * Call this to display the dialog.\n\t     */\n\t    AbstractDialogWithValidation.prototype.show = function () {\n\t        console.log(\"Original node tree:\");\n\t        if (this.getParentNode())\n\t            console.log(this.getParentNode().printDetails());\n\t        if (!this.getParentNode()) {\n\t            return;\n\t        }\n\t        var mainSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        this.createValidationIndicator(mainSection);\n\t        this.createBody(mainSection);\n\t        this.createButtonBar(mainSection);\n\t        mainSection.setPercentWidth(100);\n\t        var html = mainSection.renderUI();\n\t        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t        this.performValidation();\n\t    };\n\t    AbstractDialogWithValidation.prototype.performValidation = function () {\n\t        var validationMessage = this.validate();\n\t        if (this.okButton) {\n\t            if (validationMessage)\n\t                this.okButton.setDisabled(true);\n\t            else\n\t                this.okButton.setDisabled(false);\n\t        }\n\t        if (this.errorLabel) {\n\t            if (validationMessage) {\n\t                this.errorLabel.setDisplay(true);\n\t                this.errorLabel.setText(validationMessage);\n\t            }\n\t            else {\n\t                this.errorLabel.setDisplay(false);\n\t                this.errorLabel.setText(\"\");\n\t            }\n\t        }\n\t    };\n\t    AbstractDialogWithValidation.prototype.createValidationIndicator = function (vc) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(this.errorLabel));\n\t    };\n\t    AbstractDialogWithValidation.prototype.saveUnit = function (unit) {\n\t        var unitPath = unit.absolutePath();\n\t        var unitText = unit.contents();\n\t        //first trying to find an opened text editor\n\t        var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n\t            var editorPath = editor.getPath();\n\t            return editorPath == unitPath;\n\t        });\n\t        if (openedEditor) {\n\t            openedEditor.setText(unitText);\n\t        }\n\t        else {\n\t            fs.writeFileSync(unitPath, unitText);\n\t        }\n\t    };\n\t    AbstractDialogWithValidation.prototype.createButtonBar = function (parentPanel) {\n\t        var _this = this;\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            _this.rootAtomPanel.destroy();\n\t        }).margin(10, 10));\n\t        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.performOk();\n\t            _this.rootAtomPanel.destroy();\n\t        });\n\t        this.okButton.setDisabled(true);\n\t        buttonBar.addChild(this.okButton);\n\t        parentPanel.addChild(buttonBar);\n\t    };\n\t    AbstractDialogWithValidation.prototype.getParentNode = function () {\n\t        return this.parentNode;\n\t    };\n\t    AbstractDialogWithValidation.prototype.getActiveEditor = function () {\n\t        return assistUtils.getActiveEditor();\n\t    };\n\t    AbstractDialogWithValidation.prototype.getNodeId = function (node) {\n\t        if (node.parent()) {\n\t            var parentId = this.getNodeId(node.parent());\n\t            parentId += \".\" + node.name();\n\t            var sameName = node.parent().directChildren().filter(function (x) { return x.name() == node.name(); });\n\t            if (sameName.length > 1) {\n\t                var ind = sameName.indexOf(node);\n\t                parentId += \"[\" + ind + \"]\";\n\t            }\n\t            return parentId;\n\t        }\n\t        else if (node.name()) {\n\t            if (node.definition && node.definition() && node.definition().name() == \"Api\") {\n\t                //no other way to get rid of a fake Api \"key\"\n\t                return \"\";\n\t            }\n\t            return \".\" + node.name();\n\t        }\n\t        return \"\";\n\t    };\n\t    AbstractDialogWithValidation.prototype.nodesEqualById = function (node1, node2) {\n\t        return this.getNodeId(node1) == this.getNodeId(node2);\n\t    };\n\t    AbstractDialogWithValidation.prototype.isParentOf = function (potentialParent, potentialChild) {\n\t        var current = potentialChild.parent();\n\t        while (current != null) {\n\t            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n\t                return true;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return false;\n\t    };\n\t    return AbstractDialogWithValidation;\n\t}());\n\texports.AbstractDialogWithValidation = AbstractDialogWithValidation;\n\tvar MoveResourceStateCalculator = (function (_super) {\n\t    __extends(MoveResourceStateCalculator, _super);\n\t    function MoveResourceStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MoveResourceStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return MoveResourceStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar CreateGlobalSchemaStateCalculator = (function (_super) {\n\t    __extends(CreateGlobalSchemaStateCalculator, _super);\n\t    function CreateGlobalSchemaStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CreateGlobalSchemaStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        //FIXME INFRASTRUCTURE NEEDED\n\t        if (!universeHelpers.isSchemaProperty(p))\n\t            return null;\n\t        var v = attr.value();\n\t        var targets = search.referenceTargets(p, highLevelNode);\n\t        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n\t        if (t)\n\t            return null;\n\t        return attr;\n\t    };\n\t    return CreateGlobalSchemaStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar ExtractJSONSchemaToTypeDialog = (function (_super) {\n\t    __extends(ExtractJSONSchemaToTypeDialog, _super);\n\t    function ExtractJSONSchemaToTypeDialog() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.createBody = function (section) {\n\t        var _this = this;\n\t        section.addChild(UI.label(\"Type name:\").pad(5, 0));\n\t        this.typeNameTextField = UI.texfField(\"\", \"NewType\", function (x) {\n\t            _this.performValidation();\n\t        });\n\t        section.addChild(this.typeNameTextField);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.validate = function () {\n\t        if (!this.typeNameTextField || !this.typeNameTextField.getBinding()) {\n\t            return null;\n\t        }\n\t        var schemaName = this.typeNameTextField.getBinding().get();\n\t        if (schemaName.trim().length == 0) {\n\t            return \"Enter type name\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    ExtractJSONSchemaToTypeDialog.prototype.performOk = function () {\n\t        var node = this.getParentNode();\n\t        var api = node.root();\n\t        var schema = node.attrValue('schema');\n\t        node.attr('schema').setValue('');\n\t        var schemaName = this.typeNameTextField.getBinding().get();\n\t        var types = su.createSchemaModelGenerator().generateTo(api, schema, schemaName);\n\t        if (types.length > 0) {\n\t            node.attrOrCreate('type').setValue(types[0]);\n\t        }\n\t        this.saveUnit(api.lowLevel().unit());\n\t    };\n\t    return ExtractJSONSchemaToTypeDialog;\n\t}(AbstractDialogWithValidation));\n\texports.ExtractJSONSchemaToTypeDialog = ExtractJSONSchemaToTypeDialog;\n\tvar CreateGlobalSchemaDialog = (function (_super) {\n\t    __extends(CreateGlobalSchemaDialog, _super);\n\t    function CreateGlobalSchemaDialog() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    /**\n\t     * Indended for subclassing\n\t     * @param vc - parent section\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.createBody = function (section) {\n\t        var _this = this;\n\t        section.addChild(UI.label(\"Schema name:\").pad(5, 0));\n\t        this.schemaNameTextField = UI.texfField(\"\", this.getDefaultSchemaName(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        section.addChild(this.schemaNameTextField);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.validate = function () {\n\t        if (!this.schemaNameTextField || !this.schemaNameTextField.getBinding()) {\n\t            return null;\n\t        }\n\t        var schemaName = this.schemaNameTextField.getBinding().get();\n\t        if (schemaName.trim().length == 0) {\n\t            return \"Enter schema name\";\n\t        }\n\t        var attr = this.getParentNode();\n\t        var schemaContent = attr.value();\n\t        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n\t        if (fs.existsSync(schemaFilePath)) {\n\t            return \"Schema file \" + schemaFilePath + \" already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     */\n\t    CreateGlobalSchemaDialog.prototype.performOk = function () {\n\t        var schemaName = this.schemaNameTextField.getBinding().get();\n\t        var attr = this.getParentNode();\n\t        var schemaContent = attr.value();\n\t        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n\t        var root = attr.parent().root();\n\t        var globalSchemaType = attr.property().range().universe().type(\"GlobalSchema\");\n\t        var schemaNode = stubs.createStubNode(globalSchemaType, globalSchemaType.universe().type(\"Api\").property(\"schemas\"), schemaName);\n\t        schemaNode.attrOrCreate(\"value\").setValue(\"!include \" + this.getSchemaRelativePath(schemaName, schemaContent));\n\t        root.add(schemaNode);\n\t        attr.setValue(schemaName);\n\t        this.saveUnit(attr.lowLevel().unit());\n\t        var schemaDir = path.dirname(schemaFilePath);\n\t        if (!fs.existsSync(schemaDir)) {\n\t            fs.mkdirSync(schemaDir);\n\t        }\n\t        fs.writeFileSync(schemaFilePath, schemaContent);\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getSchemaFilePath = function (schemaName, schemaContent) {\n\t        var parentDirectory = path.resolve(path.dirname(this.getActiveEditor().getPath()), \"schemas\");\n\t        var schemaExtension = this.determineSchemaExtension(schemaContent);\n\t        var fileName = schemaName + \".\" + schemaExtension;\n\t        return path.resolve(parentDirectory, fileName);\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getSchemaRelativePath = function (schemaName, schemaContent) {\n\t        var schemaExtension = this.determineSchemaExtension(schemaContent);\n\t        var fileName = schemaName + \".\" + schemaExtension;\n\t        return \"schemas/\" + fileName;\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.determineSchemaExtension = function (schemaContent) {\n\t        var trim = schemaContent.trim();\n\t        if (trim.indexOf(\"{\") == 0 || trim.indexOf(\"[\") == 0) {\n\t            return \"json\";\n\t        }\n\t        return \"xsd\";\n\t    };\n\t    CreateGlobalSchemaDialog.prototype.getDefaultSchemaName = function () {\n\t        return \"NewSchema\";\n\t    };\n\t    return CreateGlobalSchemaDialog;\n\t}(AbstractDialogWithValidation));\n\texports.CreateGlobalSchemaDialog = CreateGlobalSchemaDialog;\n\tfunction createGlobalSchema(attr) {\n\t    new CreateGlobalSchemaDialog(attr, \"Create Global Schema\").show();\n\t}\n\texports.createGlobalSchema = createGlobalSchema;\n\tvar ExpandSignatureStateCalculator = (function (_super) {\n\t    __extends(ExpandSignatureStateCalculator, _super);\n\t    function ExpandSignatureStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExpandSignatureStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        return attr;\n\t    };\n\t    return ExpandSignatureStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tfunction updateEditor(node) {\n\t    var ed = assistUtils.getActiveEditor();\n\t    ed.setText(assistUtils.cleanEmptyLines(node.root().lowLevel().unit().contents()));\n\t}\n\tvar ExtractResourceTypeStateCalculator = (function (_super) {\n\t    __extends(ExtractResourceTypeStateCalculator, _super);\n\t    function ExtractResourceTypeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractResourceTypeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return ExtractResourceTypeStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar ExtractTraitStateCalculator = (function (_super) {\n\t    __extends(ExtractTraitStateCalculator, _super);\n\t    function ExtractTraitStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractTraitStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isMethodType(highLevelNode.definition()))\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return ExtractTraitStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar MoveContentStateCalculator = (function (_super) {\n\t    __extends(MoveContentStateCalculator, _super);\n\t    function MoveContentStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MoveContentStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (highLevelNode.children().length == 0)\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return MoveContentStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar ConvertJsonSchemaToTypeStateCalculator = (function (_super) {\n\t    __extends(ConvertJsonSchemaToTypeStateCalculator, _super);\n\t    function ConvertJsonSchemaToTypeStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ConvertJsonSchemaToTypeStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        if (generalState.node.isElement()) {\n\t            if (universeHelpers.isRAML08Node(generalState.node.asElement()))\n\t                return null;\n\t        }\n\t        if (generalState.node.isAttr()) {\n\t            if (universeHelpers.isRAML08Attribute(generalState.node.asAttr()))\n\t                return null;\n\t        }\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        if (!attr.value())\n\t            return null;\n\t        var p = attr.property();\n\t        if (!universeHelpers.isSchemaProperty(p))\n\t            return null;\n\t        if (typeof attr.value() != 'string' || attr.value().indexOf(\"{\") == -1) {\n\t            return null;\n\t        }\n\t        return highLevelNode;\n\t        //var txt=generalState.editor.getText();\n\t        //var res = getKeyValue(generalState.offset, txt);\n\t        //if(res != 'schema') return null;\n\t        //var schema = highLevelNode.attrValue('schema');\n\t        //if(!schema) return null;\n\t        //return (schema.length > 0 && schema[0] == '{')? highLevelNode : null;\n\t        //return true; //res == 'schema'? highLevelNode : null;\n\t    };\n\t    return ConvertJsonSchemaToTypeStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\t// function indent(line:string) {\n\t//     var rs = \"\";\n\t//     for (var i = 0; i < line.length; i++) {\n\t//         var c = line[i];\n\t//         if (c == '\\r' || c == '\\n') {\n\t//             continue;\n\t//         }\n\t//         if (c == ' ' || c == '\\t') {\n\t//             rs += c;\n\t//             continue;\n\t//         }\n\t//         break;\n\t//     }\n\t//     return rs;\n\t// }\n\t//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n\t// function stripIndent(text:string, indent:string) {\n\t//     var lines = assistUtils.splitOnLines(text);\n\t//     var rs = [];\n\t//     for (var i = 0; i < lines.length; i++) {\n\t//         if (i == 0) {\n\t//             rs.push(lines[0]);\n\t//         }\n\t//         else {\n\t//             rs.push(lines[i].substring(indent.length));\n\t//         }\n\t//     }\n\t//     return rs.join(\"\");\n\t// }\n\tvar ExtractLibraryStateCalculator = (function (_super) {\n\t    __extends(ExtractLibraryStateCalculator, _super);\n\t    function ExtractLibraryStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractLibraryStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        if (generalState.node.isElement()) {\n\t            if (universeHelpers.isRAML08Node(generalState.node.asElement()))\n\t                return null;\n\t        }\n\t        if (generalState.node.isAttr()) {\n\t            if (universeHelpers.isRAML08Attribute(generalState.node.asAttr()))\n\t                return null;\n\t        }\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        return current;\n\t    };\n\t    return ExtractLibraryStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar ExtractOverlayStateCalculator = (function (_super) {\n\t    __extends(ExtractOverlayStateCalculator, _super);\n\t    function ExtractOverlayStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractOverlayStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        return current;\n\t    };\n\t    return ExtractOverlayStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar ModifyOverlayStateCalculator = (function (_super) {\n\t    __extends(ModifyOverlayStateCalculator, _super);\n\t    function ModifyOverlayStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ModifyOverlayStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        while (current.parent() != null) {\n\t            current = current.parent();\n\t        }\n\t        if (current.definition\n\t            && universeHelpers.isOverlayType(current.definition())) {\n\t            return current;\n\t        }\n\t        return null;\n\t    };\n\t    return ModifyOverlayStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar AbstractMoveTypePropertiesCalculator = (function (_super) {\n\t    __extends(AbstractMoveTypePropertiesCalculator, _super);\n\t    function AbstractMoveTypePropertiesCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractMoveTypePropertiesCalculator.prototype.isTypeNode = function (node) {\n\t        return node.property\n\t            && node.property().range\n\t            && universeHelpers.isTypeDeclarationType(node.property().range())\n\t            && universeHelpers.isTypesProperty(node.property());\n\t    };\n\t    return AbstractMoveTypePropertiesCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar PullUpStateCalculator = (function (_super) {\n\t    __extends(PullUpStateCalculator, _super);\n\t    function PullUpStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    PullUpStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        if (!current)\n\t            return null;\n\t        while (current.parent() != null) {\n\t            if (this.isTypeNode(current)) {\n\t                //so, we're inside the type\n\t                //but we also want to double check that there are superclasses\n\t                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n\t                if (superTypes && superTypes.length > 0)\n\t                    return current;\n\t                else\n\t                    return null;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return null;\n\t    };\n\t    return PullUpStateCalculator;\n\t}(AbstractMoveTypePropertiesCalculator));\n\tvar ExtractSupertypeCalculator = (function (_super) {\n\t    __extends(ExtractSupertypeCalculator, _super);\n\t    function ExtractSupertypeCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ExtractSupertypeCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var current = generalState.node;\n\t        if (!current)\n\t            return null;\n\t        while (current.parent() != null) {\n\t            if (this.isTypeNode(current)) {\n\t                //so, we're inside the type\n\t                //but we also want to double check that there are no superclasses\n\t                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n\t                if (!superTypes || superTypes.length == 0)\n\t                    return current;\n\t                else\n\t                    return null;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return null;\n\t    };\n\t    return ExtractSupertypeCalculator;\n\t}(AbstractMoveTypePropertiesCalculator));\n\tvar GenerateExampleCalculator = (function (_super) {\n\t    __extends(GenerateExampleCalculator, _super);\n\t    function GenerateExampleCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    GenerateExampleCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n\t        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n\t            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n\t            return null;\n\t        var txt = generalState.editor.getText();\n\t        //var res = getKeyValue(generalState.offset, txt);\n\t        //return (res == 'type')? highLevelNode: null;\n\t        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n\t        if (!attr)\n\t            return null;\n\t        var p = attr.property();\n\t        if (!universeHelpers.isExampleProperty(p))\n\t            return null;\n\t        var typeAttr = highLevelNode.attr('type');\n\t        if (!typeAttr)\n\t            return null;\n\t        var type = typeAttr.value();\n\t        if (!type)\n\t            return null;\n\t        return highLevelNode;\n\t    };\n\t    return GenerateExampleCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tfunction initialize() {\n\t    contextActions.addAction({\n\t        name: \"Create global schema\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) { return createGlobalSchema(state); },\n\t        stateCalculator: new CreateGlobalSchemaStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Move resource\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new move.MoveElementsDialog(hlConv(state), \"Resource Type\", true).show();\n\t        },\n\t        stateCalculator: new MoveResourceStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Resource Type\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Resource Type\", true).show();\n\t        },\n\t        stateCalculator: new ExtractResourceTypeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Trait\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Trait\", false).show();\n\t        },\n\t        stateCalculator: new ExtractTraitStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Convert JSON schema to type\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new ExtractJSONSchemaToTypeDialog(state, \"Convert JSON schema to type\").show();\n\t        },\n\t        stateCalculator: new ConvertJsonSchemaToTypeStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Library\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractLibraryDialog(hlConv(state), \"Extract Library\").show();\n\t        },\n\t        stateCalculator: new ExtractLibraryStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Overlay\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractOverlayDialog(hlConv(state), \"Extract Overlay\").show();\n\t        },\n\t        stateCalculator: new ExtractOverlayStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Modify Overlay\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Code\"],\n\t        onClick: function (state) {\n\t            new extract.ModifyOverlayDialog(hlConv(state), \"Modify Overlay\").show();\n\t        },\n\t        stateCalculator: new ModifyOverlayStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Pull Up\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.PullUpDialog(hlConv(state), \"Pull Up\").show();\n\t        },\n\t        stateCalculator: new PullUpStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Extract Supertype\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Refactoring\"],\n\t        onClick: function (state) {\n\t            new extract.ExtractSupertypeDialog(hlConv(state), \"Extract Supertype\").show();\n\t        },\n\t        stateCalculator: new ExtractSupertypeCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t}\n\texports.initialize = initialize;\n\t\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar fs = __webpack_require__(18);\n\tvar path = __webpack_require__(17);\n\tvar contextActions = __webpack_require__(24);\n\tvar rp = contextActions.parser;\n\tvar su = rp.schema;\n\tvar UI = __webpack_require__(19);\n\tvar xmlutil = __webpack_require__(42);\n\tvar shemagen = __webpack_require__(43);\n\tvar assistUtils = __webpack_require__(9);\n\tvar MoveToNewFileDialog = (function () {\n\t    function MoveToNewFileDialog(callback) {\n\t        this.callback = callback;\n\t    }\n\t    MoveToNewFileDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"Please enter destination file path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please enter destination path\"));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t            _this.callback(_this.destination);\n\t        });\n\t        var txt = UI.texfField(\"\", \"\", function (x) {\n\t            if (!txt) {\n\t                return;\n\t            }\n\t            var errorMessage = null;\n\t            _this.destination = txt.getBinding().get();\n\t            if (_this.destination.trim().length == 0) {\n\t                errorMessage = \"Please enter destination file path\";\n\t            }\n\t            else if (!path.extname(_this.destination) || path.extname(_this.destination).trim().length <= 2) {\n\t                errorMessage = \"Please enter destination file extension\";\n\t            }\n\t            else {\n\t                var dir = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), path.dirname(_this.destination));\n\t                if (!fs.existsSync(dir)) {\n\t                    errorMessage = \"Parent directory does not exist\";\n\t                }\n\t                else {\n\t                    var st = fs.statSync(dir);\n\t                    if (!st.isDirectory()) {\n\t                        errorMessage = \"Parent path is not a directory\";\n\t                    }\n\t                    if (!errorMessage) {\n\t                        var canWrite = true;\n\t                        try {\n\t                            fs.accessSync(dir, fs.W_OK);\n\t                        }\n\t                        catch (exception) {\n\t                            canWrite = false;\n\t                        }\n\t                        if (!canWrite) {\n\t                            errorMessage = \"Can't write to specified directory, access denied. Please, check your permissions.\";\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (errorMessage) {\n\t                errorLabel.setDisplay(true);\n\t                errorLabel.setText(errorMessage);\n\t                okButton.setDisabled(true);\n\t            }\n\t            else {\n\t                errorLabel.setDisplay(false);\n\t                okButton.setDisabled(false);\n\t            }\n\t        });\n\t        vc.addChild(UI.vc(txt));\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t        }).margin(10, 10));\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveToNewFileDialog;\n\t}());\n\texports.MoveToNewFileDialog = MoveToNewFileDialog;\n\tvar FillBodyDialog = (function () {\n\t    function FillBodyDialog(callback, title) {\n\t        if (title === void 0) { title = \"Fill body\"; }\n\t        this.callback = callback;\n\t        this.title = title;\n\t        this.name = \"\";\n\t        this.needXML = true;\n\t        this.needJSON = true;\n\t        this.jsexample = '{\\n \"message\":\"Hello world\"\\n}';\n\t        this.xmlexample = \"\";\n\t        this.xmlschema = \"\";\n\t        this.jsschema = \"\";\n\t    }\n\t    FillBodyDialog.prototype.extraContent = function (s) {\n\t    };\n\t    FillBodyDialog.prototype.updateButtons = function () {\n\t        if (!this.createButton) {\n\t            return;\n\t        }\n\t        if (this.name.length == 0) {\n\t            this.createButton.setDisabled(true);\n\t            this.em.setDisplay(true);\n\t            this.em.setText(\"Please type name of your payload\");\n\t            return;\n\t        }\n\t        if (this.needJSON) {\n\t            try {\n\t                JSON.parse(this.jsexample);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"JSON example is not correct\");\n\t                return;\n\t            }\n\t            try {\n\t                var so = su.getJSONSchema(this.jsschema, null);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"JSON schema is not correct\");\n\t                return;\n\t            }\n\t        }\n\t        if (this.needXML) {\n\t            try {\n\t                xmlutil(this.xmlexample);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"XML example is not correct\");\n\t                return;\n\t            }\n\t            try {\n\t                var so = su.getXMLSchema(this.xmlschema);\n\t            }\n\t            catch (e) {\n\t                this.createButton.setDisabled(true);\n\t                this.em.setDisplay(true);\n\t                this.em.setText(\"XML schema is not correct\");\n\t                return;\n\t            }\n\t        }\n\t        this.em.setDisplay(false);\n\t        this.createButton.setDisabled(false);\n\t    };\n\t    FillBodyDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        this.em = UI.label(\"Please type name of your payload\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        var section = UI.section(this.title, UI.Icon.BOOK, false, false, this.em, UI.h3(\"Please type name for your payload\")).pad(10, 10);\n\t        section.addChild(UI.texfField(\"\", this.name, function (x) {\n\t            _this.name = x.getBinding().get();\n\t            _this.updateButtons();\n\t        }));\n\t        var r1 = UI.checkBox(\"Create XML body\");\n\t        r1.setValue(this.needXML);\n\t        r1.getBinding().addListener(function (x) {\n\t            _this.needXML = r1.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        section.addChild(r1);\n\t        var r2 = UI.checkBox(\"Create JSON body\");\n\t        r2.setValue(this.needJSON);\n\t        r2.getBinding().addListener(function (x) {\n\t            _this.needJSON = r2.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        section.addChild(r2);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            zz.destroy();\n\t        }).margin(10, 10));\n\t        this.createButton = UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.onOk(zz);\n\t            zz.destroy();\n\t        });\n\t        buttonBar.addChild(this.createButton);\n\t        var tf = new UI.TabFolder();\n\t        this.createButton.setDisabled(true);\n\t        this.createTextSection(tf, \"JSON Example\", \"source.json\", \"jsexample\");\n\t        this.createTextSection(tf, \"JSON Schema\", \"source.json\", \"jsschema\");\n\t        this.createTextSection(tf, \"XML Example\", \"text.xml\", \"xmlexample\");\n\t        this.createTextSection(tf, \"XML Schema\", \"text.xml\", \"xmlschema\");\n\t        tf.setOnSelected(function () {\n\t            var c = tf.selectedComponent();\n\t            var te = c.children()[1];\n\t            te.setText(_this[c.id()]);\n\t        });\n\t        section.addChild(tf);\n\t        section.addChild(buttonBar);\n\t        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n\t    };\n\t    FillBodyDialog.prototype.createTextSection = function (tf, caption, lang, code) {\n\t        var _this = this;\n\t        var hs = UI.vc();\n\t        hs.setCaption(caption);\n\t        hs.setId(code);\n\t        var ts = new UI.AtomEditorElement(\"\", function (x) { return x; });\n\t        ts.setMini(false);\n\t        ts.getBinding().addListener(function (x) {\n\t            _this[code] = ts.getValue();\n\t            _this.updateButtons();\n\t        });\n\t        //ts.setCaption(code)\n\t        ts.setText(\"\" + this[code]);\n\t        ts.setCaption(caption);\n\t        ts.setGrammar(lang);\n\t        ts.setStyle(\"height\", \"400px\");\n\t        ts.setStyle(\"border\", \"solid\");\n\t        ts.setStyle(\"border-width\", \"1px\");\n\t        hs.addChild(UI.h3(\"Please type your example here:\"));\n\t        hs.addChild(ts);\n\t        if (code == 'jsexample') {\n\t            var b = UI.button(\"Generate JSON schema\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t                try {\n\t                    var rs = shemagen.generateSchema(_this.jsexample, \"application/json\");\n\t                    _this.jsschema = rs;\n\t                    tf.setSelectedIndex(1);\n\t                }\n\t                catch (e) {\n\t                    _this.jsschema = e.message;\n\t                    tf.setSelectedIndex(1);\n\t                }\n\t            });\n\t            hs.addChild(b.margin(5, 5, 5, 5));\n\t        }\n\t        if (code == 'xmlexample') {\n\t            var b = UI.button(\"Generate JSON example\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t                try {\n\t                    var rs = xmlutil(_this.xmlexample);\n\t                    _this.jsexample = JSON.stringify(rs, null, 2);\n\t                    tf.setSelectedIndex(0);\n\t                }\n\t                catch (e) {\n\t                    _this.jsexample = e.message;\n\t                    tf.setSelectedIndex(0);\n\t                }\n\t            });\n\t            hs.addChild(b.margin(5, 5, 5, 5));\n\t        }\n\t        tf.add(caption, null, hs);\n\t    };\n\t    FillBodyDialog.prototype.onOk = function (zz) {\n\t        var uiState = {\n\t            name: this.name,\n\t            needJSON: this.needJSON,\n\t            needXML: this.needXML,\n\t            jsexample: this.jsexample,\n\t            xmlexample: this.xmlexample,\n\t            jsschema: this.jsschema,\n\t            xmlschema: this.xmlschema,\n\t        };\n\t        this.callback(uiState);\n\t    };\n\t    return FillBodyDialog;\n\t}());\n\tfunction register() {\n\t    contextActions.uiActions.registerMoveContentsAction(function (uiFinishedCallback) {\n\t        new MoveToNewFileDialog(uiFinishedCallback).show();\n\t    });\n\t    contextActions.uiActions.registerCompleteBodyAction(function (uiFinishedCallback) {\n\t        new FillBodyDialog(uiFinishedCallback).show();\n\t    });\n\t}\n\texports.register = register;\n\t\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"url\");\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-ui-lib\");\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"child_process\");\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xmlhttprequest\");\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"mkdirp\");\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-1-parser\");\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-actions\");\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"atom-space-pen-views\");\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"underscore\");\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-suggestions\");\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-1-parser/dist/index\");\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"basarat-text-buffer\");\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * Created by kor on 22/06/15.\n\t */\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar Scrollable = (function (_super) {\n\t    __extends(Scrollable, _super);\n\t    function Scrollable() {\n\t        _super.call(this);\n\t        this._children = [];\n\t    }\n\t    Scrollable.content = function () {\n\t        var v = this.div({ class: 'scrollpad pane-item padded', tabindex: -1, style: \"overflow:scroll;\" });\n\t        return v;\n\t    };\n\t    Scrollable.prototype.dispose = function () {\n\t    };\n\t    Scrollable.prototype.caption = function () { return \"\"; };\n\t    Scrollable.prototype.scroll = function (top, left) {\n\t        this.element.scrollTop = top;\n\t        this.element.scrollLeft = left;\n\t    };\n\t    Scrollable.prototype.size = function () {\n\t        return {\n\t            top: this.element.scrollTop,\n\t            left: this.element.scrollLeft,\n\t            bottom: this.element.scrollTop + this.element.clientHeight,\n\t            right: this.element.scrollLeft + this.element.clientWidth\n\t        };\n\t    };\n\t    Scrollable.prototype.changed = function () { };\n\t    Scrollable.prototype.refresh = function () { };\n\t    Scrollable.prototype.ui = function () {\n\t        return this.element;\n\t    };\n\t    Scrollable.prototype.setParent = function (p) {\n\t        if (this._parent != null)\n\t            this._parent.removeChild(this);\n\t        this._parent = p;\n\t    };\n\t    //TODO REMOVE COPY PASTE\n\t    Scrollable.prototype.addChild = function (child) {\n\t        child.setParent(this);\n\t        this._children.push(child);\n\t        //this.changed();\n\t    };\n\t    Scrollable.prototype.removeChild = function (child) {\n\t        this._children = this._children.filter(function (x) { return x != child; });\n\t        // this.changed();\n\t    };\n\t    Scrollable.prototype.doRender = function () {\n\t        return this.innerRenderUI();\n\t    };\n\t    /**\n\t     *\n\t     * @returns not null element;\n\t     */\n\t    Scrollable.prototype.selfRender = function () {\n\t        return document.createElement(\"div\");\n\t    };\n\t    Scrollable.prototype.attached = function () {\n\t        this.html(this.innerRenderUI());\n\t    };\n\t    Scrollable.prototype.innerRenderUI = function () {\n\t        var start = this.selfRender();\n\t        this._children.forEach(function (x) {\n\t            var el = x.renderUI();\n\t            if (el) {\n\t                start.appendChild(el);\n\t            }\n\t        });\n\t        return start;\n\t    };\n\t    Scrollable.prototype.renderUI = function () {\n\t        return this.element;\n\t    };\n\t    Scrollable.prototype.parent = function () {\n\t        return null;\n\t    };\n\t    Scrollable.prototype.children = function () {\n\t        return this._children;\n\t    };\n\t    Scrollable.prototype.isAttached = function () {\n\t        return true;\n\t    };\n\t    return Scrollable;\n\t}(SpacePenViews.ScrollView));\n\texports.Scrollable = Scrollable;\n\t\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\tvar Workspace = (function () {\n\t    function Workspace() {\n\t    }\n\t    Workspace.prototype.onDidChangeActivePaneItem = function (callback) {\n\t        return atom.workspace.onDidChangeActivePaneItem(callback);\n\t    };\n\t    Workspace.prototype.addModalPanel = function (arg) {\n\t        return atom.workspace.addModalPanel(arg);\n\t    };\n\t    Workspace.prototype.getActiveTextEditor = function () {\n\t        return atom.workspace.getActiveTextEditor();\n\t    };\n\t    Workspace.prototype.getActivePane = function () {\n\t        return atom.workspace.getActivePane();\n\t    };\n\t    Workspace.prototype.getActiveEditor = function () {\n\t        return atom.workspace.getActiveEditor();\n\t    };\n\t    Workspace.prototype.addRightPanel = function (arg) {\n\t        return atom.workspace.addRightPanel(arg);\n\t    };\n\t    Workspace.prototype.paneForItem = function (arg) {\n\t        return atom.workspace.paneForItem(arg);\n\t    };\n\t    Workspace.prototype.getPaneItems = function () {\n\t        return atom.workspace.getPaneItems();\n\t    };\n\t    Workspace.prototype.onDidAddPaneItem = function (callback) {\n\t        return atom.workspace.onDidAddPaneItem(callback);\n\t    };\n\t    Workspace.prototype.onDidDestroyPane = function (callback) {\n\t        return atom.workspace.onDidDestroyPane(callback);\n\t    };\n\t    Workspace.prototype.open = function (path, args) {\n\t        atom.workspace.open(path, args);\n\t    };\n\t    return Workspace;\n\t}());\n\texports.Workspace = Workspace;\n\tfunction open(pathsToOpen) {\n\t    atom.open(pathsToOpen);\n\t}\n\texports.open = open;\n\texports.workspace = new Workspace();\n\tvar CommandManager = (function () {\n\t    function CommandManager() {\n\t    }\n\t    CommandManager.prototype.add = function (selector, type, callback) {\n\t        return atom.commands.add(selector, type, callback);\n\t    };\n\t    return CommandManager;\n\t}());\n\texports.CommandManager = CommandManager;\n\texports.commands = new CommandManager();\n\t\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar atom = __webpack_require__(31);\n\tvar aspv = __webpack_require__(25);\n\t/*\n\t * List viewer for commands. accepts confirmation function, label function and key for fuzzy filtering.\n\t */\n\tvar SelectListView = (function (_super) {\n\t    __extends(SelectListView, _super);\n\t    function SelectListView(_confirmed, label, filterKey) {\n\t        if (filterKey === void 0) { filterKey = ''; }\n\t        _super.call(this, []);\n\t        this._confirmed = _confirmed;\n\t        this.label = label;\n\t        this.filterKey = filterKey;\n\t    }\n\t    SelectListView.prototype.getFilterKey = function () { return this.filterKey; };\n\t    SelectListView.prototype.viewForItem = function (item) {\n\t        return \"<li>\" + this.label(item) + \"</li>\";\n\t    };\n\t    SelectListView.prototype.cancel = function () {\n\t        this.panel.hide();\n\t        _super.prototype.cancel.call(this);\n\t    };\n\t    SelectListView.prototype.hide = function () {\n\t        if (!this.panel)\n\t            return;\n\t        this.panel.hide();\n\t    };\n\t    SelectListView.prototype.confirmed = function (item) {\n\t        this._confirmed(item);\n\t        this.hide();\n\t        return this.getSelectedItemView();\n\t    };\n\t    SelectListView.prototype.show = function (commands) {\n\t        this.storeFocusedElement();\n\t        if (!this.panel)\n\t            this.panel = atom.workspace.addModalPanel({ item: this });\n\t        this.setItems(commands);\n\t        this.panel.show();\n\t        this.focusFilterEditor();\n\t    };\n\t    return SelectListView;\n\t}(aspv.SelectListView));\n\texports.SelectListView = SelectListView;\n\t\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar editorTools = __webpack_require__(5);\n\tvar contextActions = __webpack_require__(24);\n\tvar dialogs = __webpack_require__(53);\n\tvar path = __webpack_require__(17);\n\tvar rp = __webpack_require__(23);\n\tvar services = rp.ds;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar AddNewResourceStateCalculator = (function (_super) {\n\t    __extends(AddNewResourceStateCalculator, _super);\n\t    function AddNewResourceStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AddNewResourceStateCalculator.prototype.calculate = function () {\n\t        //usually we dont need to check the editor, CommonASTStateCalculator does this for us\n\t        //but in this case we accept null generalState, so double-checking for opened file\n\t        var editor = this.getEditor();\n\t        if (!editor)\n\t            return null;\n\t        if (path.extname(editor.getPath() || '') != '.raml')\n\t            return null;\n\t        var generalState = this.getGeneralState();\n\t        if (!generalState)\n\t            return null;\n\t        var highLevelNode = generalState.node;\n\t        if (!universeHelpers.isResourceType(highLevelNode.definition()) &&\n\t            !universeHelpers.isApiType(highLevelNode.definition()))\n\t            return null;\n\t        if (!highLevelNode.lowLevel()) {\n\t            return null;\n\t        }\n\t        return highLevelNode;\n\t    };\n\t    return AddNewResourceStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tvar CreateNewAPIStateCalculator = (function (_super) {\n\t    __extends(CreateNewAPIStateCalculator, _super);\n\t    function CreateNewAPIStateCalculator() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CreateNewAPIStateCalculator.prototype.calculate = function () {\n\t        var generalState = this.getGeneralState();\n\t        if (generalState)\n\t            return null;\n\t        var editor = this.getEditor();\n\t        if (!editor)\n\t            return null;\n\t        if (path.extname(editor.getPath() || '') != '.raml')\n\t            return null;\n\t        var text = editor.getText().trim();\n\t        if (text != \"\")\n\t            return null;\n\t        return {};\n\t    };\n\t    return CreateNewAPIStateCalculator;\n\t}(contextActions.CommonASTStateCalculator));\n\tfunction getResourceParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n\t        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n\t        return node;\n\t    return getResourceParent(node.parent());\n\t}\n\texports.getResourceParent = getResourceParent;\n\tfunction getMethodParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isMethodType(node.definition()) || universeHelpers.isTraitType(node.definition())) && !node.definition().getAdapter(services.RAMLService).isUserDefined()) {\n\t        return node;\n\t    }\n\t    return null;\n\t}\n\tfunction getParent(node, name) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((node.definition().isAssignableFrom(name))) {\n\t        return node;\n\t    }\n\t    return null;\n\t}\n\tfunction getResourceParentOrRoot(node) {\n\t    var rp = getResourceParent(node);\n\t    return rp ? rp : editorTools.aquireManager().ast;\n\t}\n\tfunction toResource(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n\t        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n\t        return node;\n\t    return null;\n\t}\n\texports.toResource = toResource;\n\tfunction registerQuickCommands(cm) {\n\t    if (!editorTools.aquireManager())\n\t        editorTools.initEditorTools(false);\n\t    var commands = [];\n\t    commands.forEach(function (x) { return x['__module__'] = 'editorTools'; });\n\t    contextActions.addAction({\n\t        name: \"Add new resource\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Add new...\"],\n\t        onClick: function (state) { return dialogs.newResource(editorTools.aquireManager().getSelectedNode()); },\n\t        stateCalculator: new AddNewResourceStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addAction({\n\t        name: \"Create new API\",\n\t        target: contextActions.TARGET_RAML_EDITOR_NODE,\n\t        category: [\"Add new...\"],\n\t        onClick: function (state) { return dialogs.newApi(); },\n\t        stateCalculator: new CreateNewAPIStateCalculator(),\n\t        shouldDisplay: function (state) { return state != null; }\n\t    });\n\t    contextActions.addSimpleAction(\"Add new method\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newMethod(toResource(editorTools.aquireManager().getSelectedNode())); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && toResource(editorTools.aquireManager().getSelectedNode()) != null; });\n\t    contextActions.addSimpleAction(\"Create new URI Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(toResource(editorTools.aquireManager().getSelectedNode()), \"Create new URI Parameter\", \"uriParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (toResource(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Query Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Query Parameter\", \"queryParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Response Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Response Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Response Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Property\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\"), \"Create new Property\", \"properties\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\") != null); });\n\t    contextActions.addSimpleAction(\"Create new Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t    contextActions.addSimpleAction(\"Create new Response\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Response\", \"responses\", \"200\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n\t}\n\texports.registerQuickCommands = registerQuickCommands;\n\t\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(19);\n\tvar SC = __webpack_require__(30);\n\tvar CompositeDisposable = UI.CompositeDisposable;\n\tvar rp = __webpack_require__(23);\n\tvar universes = rp.universes;\n\tvar editorTools = __webpack_require__(5);\n\tvar ramlOutline = __webpack_require__(47);\n\tvar outlineCommon = __webpack_require__(54);\n\tvar RamlOutline = (function (_super) {\n\t    __extends(RamlOutline, _super);\n\t    function RamlOutline() {\n\t        _super.call(this);\n\t        this.disposables = new CompositeDisposable();\n\t        this.fire = true;\n\t        this.createTree(null);\n\t        this.addClass('raml-outline');\n\t        this.addChild(this._rs);\n\t    }\n\t    RamlOutline.prototype.createTree = function (p) {\n\t        var _this = this;\n\t        this._rs = createTree(p, function (sender) {\n\t            if (editorTools.aquireManager()._details && sender.selection && sender.selection.elements && _this.fire == true) {\n\t                if (sender.selection.elements.length > 0 && sender.selection.elements[0]) {\n\t                    editorTools.aquireManager().setSelectedNode(sender.selection.elements[0].getSource());\n\t                }\n\t            }\n\t        });\n\t        this._viewers = [0, 1, 2, 3].map(function (i) { return _this._rs.get(i).content; });\n\t    };\n\t    RamlOutline.prototype.getTitle = function () { return \"Outline\"; };\n\t    RamlOutline.prototype.getNodePType = function (node) {\n\t        while (node.parent() && node.parent().parent()) {\n\t            node = node.parent();\n\t        }\n\t        return getNodeType(node);\n\t    };\n\t    RamlOutline.prototype.setSelection = function (node) {\n\t        //if (this._selectedNode == node) return;\n\t        this._selectedNode = node;\n\t        this.fire = false;\n\t        try {\n\t            var index = this.getNodePType(node);\n\t            var viewer = this._viewers[index];\n\t            if (viewer != null) {\n\t                viewer.setSelection(node);\n\t                this._rs.setSelectedIndex(index);\n\t            }\n\t        }\n\t        finally {\n\t            this.fire = true;\n\t        }\n\t    };\n\t    RamlOutline.prototype.setUnit = function (unit, force) {\n\t        if (force === void 0) { force = false; }\n\t        this._children = [];\n\t        this.createTree(unit);\n\t        this.addClass('raml-outline');\n\t        this.addChild(this._rs);\n\t        this.html(this.innerRenderUI());\n\t    };\n\t    RamlOutline.prototype.attach = function () {\n\t        if (!this._isAttached) {\n\t            var $this = $(this);\n\t            $this.html(this._rs.renderUI().outerHTML);\n\t            this._isAttached = true;\n\t        }\n\t    };\n\t    RamlOutline.prototype.forEachViewer = function (command) {\n\t        this._viewers.forEach(command);\n\t    };\n\t    RamlOutline.prototype.refresh = function () {\n\t        var unit = this.unit;\n\t        this.setUnit(null);\n\t        this.setUnit(unit);\n\t    };\n\t    RamlOutline.prototype.destroy = function () {\n\t        editorTools.aquireManager()._view = null;\n\t        this._selectedNode = null;\n\t        this.unit = null;\n\t        this._viewers = [];\n\t        this._rs = null;\n\t        this._children = [];\n\t        this.disposables.dispose();\n\t    };\n\t    return RamlOutline;\n\t}(SC.Scrollable));\n\texports.RamlOutline = RamlOutline;\n\t/*\n\t *\n\t */\n\t// export function treeSection(input: hl.IParseResult,\n\t//                             name: string,\n\t//                             icon: UI.Icon,\n\t//                             filterFunc: (x:hl.IHighLevelNode)=>boolean,\n\t//                             l: UI.ISelectionListener<any>,\n\t//                             opener: (x:hl.IParseResult)=>void=null) : UI.TreePanel<any,any> {\n\t//\n\t//     var v = UI.treeViewerSection(name,icon,input,x=>getChildren(x).filter(x=>filterFunc(<hl.IHighLevelNode> x)),new HLRenderer(opener));\n\t//\n\t//     v.viewer.setBasicLabelFunction(x=>x ? x.name() : '');\n\t//     v.viewer.setKeyProvider({\n\t//         key:(p:hl.IParseResult):string=>{\n\t//             return \"\"+p.lowLevel().start();\n\t//         }\n\t//\n\t//     });\n\t//     v.viewer.addSelectionListener(l)\n\t//     return v;\n\t// }\n\tvar HLNodeType;\n\t(function (HLNodeType) {\n\t    HLNodeType[HLNodeType[\"Resource\"] = 0] = \"Resource\";\n\t    HLNodeType[HLNodeType[\"Schema\"] = 1] = \"Schema\";\n\t    HLNodeType[HLNodeType[\"Type\"] = 2] = \"Type\";\n\t    HLNodeType[HLNodeType[\"Trait\"] = 3] = \"Trait\";\n\t    HLNodeType[HLNodeType[\"Unknown\"] = 4] = \"Unknown\";\n\t})(HLNodeType || (HLNodeType = {}));\n\tfunction getNodeType(node) {\n\t    if (outlineCommon.isResource(node))\n\t        return HLNodeType.Resource;\n\t    else if (outlineCommon.isOther(node))\n\t        return HLNodeType.Trait;\n\t    else if (outlineCommon.isResourceTypeOrTrait(node))\n\t        return HLNodeType.Type;\n\t    else if (outlineCommon.isSchemaOrType(node))\n\t        return HLNodeType.Schema;\n\t    else\n\t        return HLNodeType.Unknown;\n\t}\n\tfunction isApi(p) {\n\t    var pc = p.definition().key();\n\t    return pc === universes.Universe08.Api || pc === universes.Universe10.Api;\n\t}\n\tfunction isDocumentation(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem);\n\t}\n\tfunction fullStructurePath(model) {\n\t    if (!model)\n\t        return \"\";\n\t    var node = model.getSource();\n\t    return fullPath(node);\n\t}\n\tfunction fullPath(node) {\n\t    if (node == null)\n\t        return \"\";\n\t    else\n\t        return fullPath(node.parent()) + \"/\" + node.name();\n\t}\n\tfunction simpleTree(input, selectionListener, categoryName, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var viewer = UI.treeViewer(function (x) {\n\t        return x.children;\n\t    }, new HLRenderer(opener), fullStructurePath);\n\t    viewer.setBasicLabelFunction(function (x) { return x.text; });\n\t    viewer.setKeyProvider({ key: function (x) { return x.key; } });\n\t    viewer.addSelectionListener(selectionListener);\n\t    viewer.getBinding().set(input);\n\t    return viewer;\n\t}\n\tfunction createTree(p, selectionListener, opener) {\n\t    if (opener === void 0) { opener = null; }\n\t    var subTrees = ramlOutline.getStructureForAllCategories();\n\t    var resourcesModel = (p != null && subTrees != null) ? subTrees[outlineCommon.ResourcesCategory] : null;\n\t    var typesModel = (p != null && subTrees != null) ? subTrees[outlineCommon.SchemasAndTypesCategory] : null;\n\t    var traitsModel = (p != null && subTrees != null) ? subTrees[outlineCommon.ResourceTypesAndTraitsCategory] : null;\n\t    var otherModel = (p != null && subTrees != null) ? subTrees[outlineCommon.OtherCategory] : null;\n\t    // var resourcesModel = p!=null?ramlOutline.getStructure(outlineCommon.ResourcesCategory):null;\n\t    // var typesModel = p!=null?ramlOutline.getStructure(outlineCommon.SchemasAndTypesCategory):null;\n\t    // var traitsModel = p!=null?ramlOutline.getStructure(outlineCommon.ResourceTypesAndTraitsCategory):null;\n\t    // var otherModel = p!=null?ramlOutline.getStructure(outlineCommon.OtherCategory):null;\n\t    var outline = resourcesModel != null ? simpleTree(resourcesModel, { selectionChanged: selectionListener }, outlineCommon.ResourcesCategory, opener) : null;\n\t    var schemas = typesModel != null ? simpleTree(typesModel, { selectionChanged: selectionListener }, outlineCommon.SchemasAndTypesCategory, opener) : null;\n\t    var types = traitsModel != null ? simpleTree(traitsModel, { selectionChanged: selectionListener }, outlineCommon.ResourceTypesAndTraitsCategory, opener) : null;\n\t    var other = otherModel != null ? simpleTree(otherModel, { selectionChanged: selectionListener }, outlineCommon.OtherCategory, opener) : null;\n\t    var folder = new UI.TabFolder();\n\t    folder.add(outlineCommon.ResourcesCategory, UI.Icon.SEARCH, outline, 'raml-icon-custom');\n\t    folder.add(outlineCommon.SchemasAndTypesCategory, UI.Icon.SEARCH, schemas, 'raml-icon-custom');\n\t    folder.add(outlineCommon.ResourceTypesAndTraitsCategory, UI.Icon.SEARCH, types, 'raml-icon-custom');\n\t    folder.add(outlineCommon.OtherCategory, UI.Icon.SEARCH, other, 'raml-icon-custom');\n\t    folder.setSelectedIndex(0);\n\t    folder.setOnSelected(function () {\n\t        var selectedTab = folder.selectedComponent();\n\t        if (selectedTab) {\n\t            var selection = selectedTab.getSelection();\n\t            if (selection && selection.elements && selection.elements.length > 0) {\n\t                selectionListener(new UI.SelectionChangedEvent(selectedTab, null, selection));\n\t            }\n\t            selectedTab.customizePanel(true);\n\t        }\n\t    });\n\t    return folder;\n\t}\n\texports.createTree = createTree;\n\tvar HLRenderer = (function () {\n\t    function HLRenderer(opener) {\n\t        this.opener = opener;\n\t    }\n\t    HLRenderer.prototype.iconNameToIconEnum = function (iconName) {\n\t        if (!iconName)\n\t            return null;\n\t        return UI.Icon[iconName];\n\t    };\n\t    HLRenderer.prototype.textHighlightNameToTextClass = function (highlightName) {\n\t        if (!highlightName)\n\t            return null;\n\t        return UI.TextClasses[highlightName];\n\t    };\n\t    HLRenderer.prototype.render = function (model) {\n\t        try {\n\t            if (ramlOutline.isTypedStructureNode(model)\n\t                && model.type\n\t                && model.type == ramlOutline.NodeType.ATTRIBUTE) {\n\t                var attr = model.getSource();\n\t                //TODO check if we really need custom selection here, otherwise the whole \"is attribute\" condition is redundant\n\t                return UI.hc(UI.label(model.text), UI.a(\"\", function (x) {\n\t                    var p1 = editorTools.aquireManager().getCurrentEditor().\n\t                        getBuffer().positionForCharacterIndex(attr.lowLevel().start());\n\t                    var p2 = editorTools.aquireManager().getCurrentEditor().\n\t                        getBuffer().positionForCharacterIndex(attr.lowLevel().end());\n\t                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n\t                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t            }\n\t            var icon = UI.Icon.DASH;\n\t            var highLight = UI.TextClasses.NORMAL;\n\t            if (this.iconNameToIconEnum(model.icon)) {\n\t                icon = this.iconNameToIconEnum(model.icon);\n\t            }\n\t            if (this.textHighlightNameToTextClass(model.textStyle)) {\n\t                highLight = this.textHighlightNameToTextClass(model.textStyle);\n\t            }\n\t            var extraText = \"\";\n\t            var extraClass = UI.TextClasses.NORMAL;\n\t            var hc = UI.hc(UI.label(model.text, icon, highLight));\n\t            if (model.typeText) {\n\t                hc.addChild(UI.label(model.typeText, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n\t            }\n\t            if (model.getSource().lowLevel().unit() != model.getSource().root().lowLevel().unit()) {\n\t                highLight = UI.TextClasses.SUBTLE;\n\t                hc.addChild(UI.label(\"(\" + model.getSource().lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n\t            }\n\t            hc.addClass(\"outline\");\n\t            return hc;\n\t        }\n\t        catch (e) {\n\t            console.log(e);\n\t            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t        }\n\t    };\n\t    return HLRenderer;\n\t}());\n\texports.HLRenderer = HLRenderer;\n\t\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar emissary = __webpack_require__(46);\n\tvar Subscriber = emissary.Subscriber;\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b)\n\t        if (b.hasOwnProperty(p))\n\t            d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar sp = __webpack_require__(25);\n\tvar $ = sp.$;\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b)\n\t        if (b.hasOwnProperty(p))\n\t            d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar View = (function (_super) {\n\t    __extends(View, _super);\n\t    function View(options) {\n\t        _super.call(this);\n\t        this.options = options;\n\t        this.init();\n\t    }\n\t    Object.defineProperty(View.prototype, \"$\", {\n\t        get: function () {\n\t            return this;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    View.content = function () {\n\t        throw new Error('Must override the base View static content member');\n\t    };\n\t    View.prototype.init = function () { };\n\t    return View;\n\t})(sp.View);\n\tvar ScrollView = (function (_super) {\n\t    __extends(ScrollView, _super);\n\t    function ScrollView(options) {\n\t        _super.call(this);\n\t        this.options = options;\n\t        this.init();\n\t    }\n\t    Object.defineProperty(ScrollView.prototype, \"$\", {\n\t        get: function () {\n\t            return this;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    ScrollView.content = function () {\n\t        throw new Error('Must override the base View static content member');\n\t    };\n\t    ScrollView.prototype.init = function () { };\n\t    return ScrollView;\n\t})(sp.ScrollView);\n\tvar TooltipView = (function (_super) {\n\t    __extends(TooltipView, _super);\n\t    function TooltipView(rect) {\n\t        _super.call(this, rect);\n\t        this.rect = rect;\n\t        $(document.body).append(this.$);\n\t        this.updatePosition();\n\t    }\n\t    TooltipView.content = function () {\n\t        var _this = this;\n\t        return this.div({ class: 'atom-typescript-tooltip tooltip' }, function () {\n\t            _this.div({ class: 'tooltip-inner', outlet: 'inner' });\n\t        });\n\t    };\n\t    TooltipView.prototype.updateText = function (text) {\n\t        this.inner.html(text);\n\t        this.updatePosition();\n\t        this.$.fadeTo(300, 1);\n\t    };\n\t    TooltipView.prototype.updatePosition = function () {\n\t        var offset = 10;\n\t        var left = this.rect.right;\n\t        var top = this.rect.bottom;\n\t        var right = undefined;\n\t        if (left + this.$[0].offsetWidth >= $(document.body).width())\n\t            left = $(document.body).width() - this.$[0].offsetWidth - offset;\n\t        //this.$.css({ 'max-width': '500px'})\n\t        if (left < 0) {\n\t            this.$.css({ 'white-space': 'pre-wrap' });\n\t            left = offset;\n\t            right = offset;\n\t        }\n\t        if (top + this.$[0].offsetHeight >= $(document.body).height()) {\n\t            top = this.rect.top - this.$[0].offsetHeight;\n\t        }\n\t        this.$.css({ left: left, top: top });\n\t    };\n\t    return TooltipView;\n\t})(View);\n\tfunction getFromShadowDom(element, selector) {\n\t    var el = element[0];\n\t    var found = el.rootElement.querySelectorAll(selector);\n\t    return sp.$(found[0]);\n\t}\n\texports.getFromShadowDom = getFromShadowDom;\n\tfunction getEditorPositionForBufferPosition(editor, bufferPos) {\n\t    var buffer = editor.getBuffer();\n\t    return buffer.characterIndexForPosition(bufferPos);\n\t}\n\tfunction isAllowedExtension(ext) {\n\t    return (ext == '.raml' || ext == '.yaml');\n\t}\n\texports.isAllowedExtension = isAllowedExtension;\n\tfunction attach(editorView, editor) {\n\t    //console.log(\"Attach\")\n\t    //console.log(editorView)\n\t    //var rawView = editorView;\n\t    //var filePath = editor.getPath();\n\t    //var filename = path.basename(filePath);\n\t    //var ext = path.extname(filename);\n\t    //if (!isAllowedExtension(ext))\n\t    //    return;\n\t    //if (!fs.existsSync(filePath)) {\n\t    //    return;\n\t    //}\n\t    //var scroll = getFromShadowDom([editorView], '.scroll-view');\n\t    //var subscriber = new Subscriber();\n\t    //var exprTypeTimeout = null;\n\t    //var exprTypeTooltip = null;\n\t    //var lastExprTypeBufferPt;\n\t    //subscriber.subscribe(scroll, 'mousemove', function (e) {\n\t    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n\t    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n\t    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n\t    //    if (lastExprTypeBufferPt && lastExprTypeBufferPt.isEqual(bufferPt) && exprTypeTooltip)\n\t    //        return;\n\t    //    lastExprTypeBufferPt = bufferPt;\n\t    //    clearExprTypeTimeout();\n\t    //    exprTypeTimeout = setTimeout(function () { return showExpressionType(e); }, 1000);\n\t    //});\n\t    //subscriber.subscribe(scroll, 'mouseout', function (e) { return clearExprTypeTimeout(); });\n\t    //subscriber.subscribe(scroll, 'keydown', function (e) { return clearExprTypeTimeout(); });\n\t    //editor.onDidDestroy(function () { return deactivate(); });\n\t    //function showExpressionType(e) {\n\t    //    if (exprTypeTooltip)\n\t    //        return;\n\t    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n\t    //    pixelPt.top += editor.displayBuffer.getScrollTop();\n\t    //    pixelPt.left += editor.displayBuffer.getScrollLeft();\n\t    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n\t    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n\t    //    var curCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column]);\n\t    //    var nextCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column + 1]);\n\t    //    if (curCharPixelPt.left >= nextCharPixelPt.left)\n\t    //        return;\n\t    //    var offset = editor.getLineHeightInPixels() * 0.7;\n\t    //    var tooltipRect = {\n\t    //        left: e.clientX,\n\t    //        right: e.clientX,\n\t    //        top: e.clientY - offset,\n\t    //        bottom: e.clientY + offset\n\t    //    };\n\t    //    exprTypeTooltip = new TooltipView(tooltipRect);\n\t    //    // var position = getEditorPositionForBufferPosition(editor, bufferPt);\n\t    //    var node=provider.getAstNode({\n\t    //        editor:editor,\n\t    //        bufferPosition:bufferPt\n\t    //    },false);\n\t    //    if (node) {\n\t    //        var hl=<hl.IHighLevelNode>node;\n\t    //        var pos=getEditorPositionForBufferPosition(editor,bufferPt);\n\t    //        var doc=docHelper.getDocumentation(hl,pos);\n\t    //        if (doc){\n\t    //            exprTypeTooltip.updateText(doc);\n\t    //        }\n\t    //    }\n\t    //\n\t    //}\n\t    //function deactivate() {\n\t    //    subscriber.unsubscribe();\n\t    //    clearExprTypeTimeout();\n\t    //}\n\t    //function clearExprTypeTimeout() {\n\t    //    if (exprTypeTimeout) {\n\t    //        clearTimeout(exprTypeTimeout);\n\t    //        exprTypeTimeout = null;\n\t    //    }\n\t    //    hideExpressionType();\n\t    //}\n\t    //function hideExpressionType() {\n\t    //    if (!exprTypeTooltip)\n\t    //        return;\n\t    //    exprTypeTooltip.$.remove();\n\t    //    exprTypeTooltip = null;\n\t    //}\n\t}\n\texports.attach = attach;\n\tfunction pixelPositionFromMouseEvent(editorView, event) {\n\t    var clientX = event.clientX, clientY = event.clientY;\n\t    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n\t    var top = clientY - linesClientRect.top;\n\t    var left = clientX - linesClientRect.left;\n\t    return { top: top, left: left };\n\t}\n\tfunction screenPositionFromMouseEvent(editorView, event) {\n\t    return editorView.getModel().screenPositionForPixelPosition(pixelPositionFromMouseEvent(editorView, event));\n\t}\n\texports.screenPositionFromMouseEvent = screenPositionFromMouseEvent;\n\tfunction screenPositionFromMouse(editor, event) {\n\t    var editorView = sp.$(atom.views)[0].getView(editor);\n\t    var pos = pixelPositionFromMouseEvent(editorView, event);\n\t    pos.top -= editor.displayBuffer.getScrollTop();\n\t    pos.left -= editor.displayBuffer.getScrollLeft();\n\t    var clientRect = editorView.getBoundingClientRect();\n\t    pos.top += clientRect.top;\n\t    pos.left += clientRect.left;\n\t    return pos;\n\t}\n\texports.screenPositionFromMouse = screenPositionFromMouse;\n\t//export function turnOn()\n\t//{\n\t//    (<any>atom.workspace).observeTextEditors(editor=> {\n\t//        var editorView = (<any>sp.$((<any>atom).views))[0].getView(editor);\n\t//        attach(editorView, editor);\n\t//    });\n\t//}\n\t\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar commandManager = __webpack_require__(12);\n\tvar contextActions = __webpack_require__(24);\n\tfunction initializeActionSupport() {\n\t    contextActions.intializeStandardActions();\n\t    contextActions.initializeActionBasedMenu('atom-text-editor[data-grammar=\"source raml\"],.raml-outline');\n\t    var editorCommandContributor = {\n\t        id: \"editorContextActionContributor\",\n\t        calculateItems: function () {\n\t            var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t            if (!currentActions)\n\t                return [];\n\t            var result = [];\n\t            currentActions.forEach(function (action) {\n\t                result.push({\n\t                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n\t                    id: action.label ? action.label : action.name,\n\t                    callBack: action.onClick\n\t                });\n\t            });\n\t            return result;\n\t        }\n\t    };\n\t    commandManager.registerContributor(editorCommandContributor);\n\t}\n\tfunction initialize(editorProvider, astProvider, astModifier) {\n\t    contextActions.setEditorProvider(editorProvider);\n\t    contextActions.setASTProvider(astProvider);\n\t    contextActions.setASTModifier(astModifier);\n\t    initializeActionSupport();\n\t}\n\texports.initialize = initialize;\n\t\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar ramlOutline = __webpack_require__(47);\n\tvar rp = __webpack_require__(23);\n\tvar universes = rp.universes;\n\tvar outlineCommon = __webpack_require__(54);\n\tvar UI = __webpack_require__(19);\n\tfunction initialize(editorProvider, astProvider) {\n\t    ramlOutline.setASTProvider(astProvider);\n\t    ramlOutline.initialize();\n\t    ramlOutline.setKeyProvider(outlineCommon.keyProvider);\n\t    createCategories();\n\t    createDecorations();\n\t}\n\texports.initialize = initialize;\n\tfunction createCategories() {\n\t    ramlOutline.addCategoryFilter(outlineCommon.ResourcesCategory, outlineCommon.isResource);\n\t    ramlOutline.addCategoryFilter(outlineCommon.SchemasAndTypesCategory, outlineCommon.isSchemaOrType);\n\t    ramlOutline.addCategoryFilter(outlineCommon.ResourceTypesAndTraitsCategory, outlineCommon.isResourceTypeOrTrait);\n\t    ramlOutline.addCategoryFilter(outlineCommon.OtherCategory, outlineCommon.isOther);\n\t}\n\tfunction createDecorations() {\n\t    ramlOutline.addDecoration(ramlOutline.NodeType.ATTRIBUTE, {\n\t        icon: UI.Icon[UI.Icon.ARROW_SMALL_LEFT],\n\t        textStyle: UI.TextClasses[UI.TextClasses.NORMAL]\n\t    });\n\t    ramlOutline.addDecoration(ramlOutline.NodeType.RESOURCE, {\n\t        icon: UI.Icon[UI.Icon.PRIMITIVE_SQUARE],\n\t        textStyle: UI.TextClasses[UI.TextClasses.HIGHLIGHT]\n\t    });\n\t    ramlOutline.addDecoration(ramlOutline.NodeType.METHOD, {\n\t        icon: UI.Icon[UI.Icon.PRIMITIVE_DOT],\n\t        textStyle: UI.TextClasses[UI.TextClasses.WARNING]\n\t    });\n\t    ramlOutline.addDecoration(ramlOutline.NodeType.SECURITY_SCHEME, {\n\t        icon: UI.Icon[UI.Icon.FILE_SUBMODULE],\n\t        textStyle: UI.TextClasses[UI.TextClasses.NORMAL]\n\t    });\n\t    ramlOutline.addDecoration(ramlOutline.NodeType.ANNOTATION_DECLARATION, {\n\t        icon: UI.Icon[UI.Icon.TAG],\n\t        textStyle: UI.TextClasses[UI.TextClasses.HIGHLIGHT]\n\t    });\n\t    ramlOutline.addDecoration(ramlOutline.NodeType.TYPE_DECLARATION, {\n\t        icon: UI.Icon[UI.Icon.FILE_BINARY],\n\t        textStyle: UI.TextClasses[UI.TextClasses.SUCCESS]\n\t    });\n\t    ramlOutline.addDecoration(ramlOutline.NodeType.DOCUMENTATION_ITEM, {\n\t        icon: UI.Icon[UI.Icon.BOOK],\n\t        textStyle: UI.TextClasses[UI.TextClasses.NORMAL]\n\t    });\n\t}\n\t\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\n\t * Returns whether the current text matches RAML unit.\n\t * @param contents\n\t * @returns {RegExpMatchArray}\n\t */\n\tfunction isRAMLUnit(contents) {\n\t    return contents.match(/^\\s*#%RAML\\s+(\\d\\.\\d)\\s*(\\w*)\\s*$/m);\n\t}\n\texports.isRAMLUnit = isRAMLUnit;\n\t\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by kor on 24/07/15.\n\t */\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar path = __webpack_require__(17);\n\tvar editorTools = __webpack_require__(5);\n\tvar rp = __webpack_require__(23);\n\tvar project = rp.project;\n\tfunction ast(editor) {\n\t    var man = editorTools.aquireManager();\n\t    if (editorTools.aquireManager()) {\n\t        if (man.getCurrentEditor() == editor) {\n\t            return man.ast;\n\t        }\n\t    }\n\t    var p = editor.getPath();\n\t    var prj = project.createProject(path.dirname(p));\n\t    var unit = prj.unit(path.basename(p));\n\t    var text = editor.getBuffer().getText();\n\t    if (!unit) {\n\t        return null;\n\t    }\n\t    unit.updateContent(text);\n\t    var ast = unit.highLevel();\n\t    return ast;\n\t}\n\texports.ast = ast;\n\t\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(18);\n\tvar path = __webpack_require__(17);\n\tvar rp = __webpack_require__(23);\n\tvar stubs = rp.stubs;\n\tvar _ = __webpack_require__(26);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(19);\n\tvar editorTools = __webpack_require__(5);\n\tvar def = rp.ds;\n\tvar assist = __webpack_require__(9);\n\tvar yaml = __webpack_require__(49);\n\tvar universeHelpers = rp.universeHelpers;\n\tvar universeModule = rp.universes;\n\tvar search = rp.search;\n\tvar universes = rp.universes;\n\tvar util = __webpack_require__(55);\n\tvar ExtractTypesAndTraitsDialog = (function () {\n\t    function ExtractTypesAndTraitsDialog(node, name, _resourceType) {\n\t        this.node = node;\n\t        this.name = name;\n\t        this._resourceType = _resourceType;\n\t        this.filters = new NodeFilters();\n\t    }\n\t    ExtractTypesAndTraitsDialog.prototype.getActiveEditor = function () {\n\t        return assist.getActiveEditor();\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Extract \" + this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        vc.addChild(UI.label(\"Extracted element name:\").pad(5, 0));\n\t        var errorLabel = UI.label(\"Please type valid name for \" + this.name, UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        var tf = UI.texfField(\"\", \"\", function (x) {\n\t            if (!okButton) {\n\t                return;\n\t            }\n\t            var isErr = tf.getBinding().get().trim().length == 0;\n\t            okButton.setDisabled(isErr);\n\t            errorLabel.setDisplay(isErr);\n\t            stub.attr(\"name\").setValue(tf.getBinding().get());\n\t        });\n\t        vc.addChild(tf);\n\t        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n\t        var el = UI.hc();\n\t        vc.setPercentWidth(100);\n\t        el.setPercentWidth(100);\n\t        var filterFunc = function (x) {\n\t            if (_this._resourceType) {\n\t                if (universeHelpers.isResourceType(x.definition())) {\n\t                    return false;\n\t                }\n\t            }\n\t            if (_.find(_this.filters.removals, function (y) { return x == y; })) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t        var stub = this.createNodeStub(node);\n\t        var v = createSmallSelectionPanel(node, filterFunc, \"400px\", \"47%\");\n\t        var v1 = createSmallSelectionPanel(stub, function (x) { return true; }, \"400px\", \"47%\", \"right\");\n\t        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = v.getSelection().elements;\n\t            _this.moveRight(z, stub, node, v, v1);\n\t        });\n\t        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = v1.getSelection().elements;\n\t            _this.moveLeft(z, stub, node, v, v1);\n\t        });\n\t        var allRight = UI.button(\">>\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = node.elements().filter(function (x) { return filterFunc(x); });\n\t            _this.moveRight(z, stub, node, v, v1);\n\t        });\n\t        var allLeft = UI.button(\"<<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = stub.elements();\n\t            _this.moveLeft(z, stub, node, v, v1);\n\t        });\n\t        el.addChild(UI.vc(moveRight, moveLeft, allRight, allLeft));\n\t        el.addChild(v);\n\t        el.addChild(v1);\n\t        vc.addChild(el);\n\t        v.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                var m = (_.find(rs, function (x) { return x.parent() != node; }) != undefined);\n\t                moveRight.setDisabled(m || (rs.length == 0));\n\t            }\n\t        });\n\t        v1.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var nodesToMove = ev.selection.elements;\n\t                var unregisteredNode = _.find(nodesToMove, function (nodeToMove) {\n\t                    var registeredNode = _.find(_this.filters.removals, function (movedNode) { return nodeToMove.id() == movedNode.id(); });\n\t                    return registeredNode == undefined;\n\t                }) != undefined;\n\t                //var m=(_.find(rs, x=>x.parent() != stub)!=undefined )\n\t                moveLeft.setDisabled(unregisteredNode || (nodesToMove.length == 0));\n\t            }\n\t        });\n\t        moveLeft.setDisabled(true);\n\t        moveRight.setDisabled(true);\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.apply(node, stub, tf.getBinding().get());\n\t            //this.onOk(zz);\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.apply = function (node, stub, newTypeName) {\n\t        this.filters.removals.forEach(function (x) { return node.remove(x); });\n\t        var stub2 = this.createNodeStub(node);\n\t        stub.elements().forEach(function (child) { return stub2.add(child); });\n\t        stub2.attr(\"name\").setValue(newTypeName);\n\t        var typeOrTraitValueToReplace = \"_________TEMPORARY_TYPE_OR_TRAIT_VALUE_________\";\n\t        var replacements = [];\n\t        var superAttributeName = this._resourceType ?\n\t            universeModule.Universe10.ResourceType.properties.type.name :\n\t            universeModule.Universe10.Trait.properties.is.name;\n\t        var superAttributes = node.attributes(superAttributeName);\n\t        var superAttrProperty = stub2.definition().property(superAttributeName);\n\t        if (superAttributes && superAttributes.length > 0) {\n\t            for (var i = 0; i < superAttributes.length; i++) {\n\t                var superAttribute = superAttributes[i];\n\t                var superAttributeLL = superAttribute.lowLevel();\n\t                var start = superAttributeLL.valueStart();\n\t                var end = superAttributeLL.valueEnd();\n\t                if (start <= 0) {\n\t                    start = superAttributeLL.start();\n\t                    end = superAttributeLL.end();\n\t                }\n\t                var typeOrTraitValueToReplaceWith = superAttributeLL.unit().contents().substr(start, end - start);\n\t                replacements.push(typeOrTraitValueToReplaceWith);\n\t            }\n\t            for (var i = 0; i < superAttributes.length; i++) {\n\t                var superAttribute = superAttributes[i];\n\t                node.remove(superAttribute);\n\t            }\n\t            var stubAttributeValue = typeOrTraitValueToReplace;\n\t            if (superAttributes.length > 1) {\n\t                stubAttributeValue = \"[\" + stubAttributeValue + \"]\";\n\t            }\n\t            var stubSuperAttribute = stubs.createAttr(superAttrProperty, stubAttributeValue);\n\t            stub2.add(stubSuperAttribute);\n\t            node.resetChildren();\n\t            stub2.resetChildren();\n\t        }\n\t        if (this._resourceType) {\n\t            node.add(stubs.createAttr(node.definition().property(superAttributeName), stub.name()));\n\t        }\n\t        else {\n\t            node.add(stubs.createAttr(node.definition().property(superAttributeName), \"[\" + stub.name() + \"]\"));\n\t        }\n\t        node.root().add(stub2);\n\t        var cl = node.lowLevel().unit().contents();\n\t        if (replacements.length == 1) {\n\t            var totalRepalcement = replacements[0];\n\t            if (superAttrProperty.isMultiValue()) {\n\t                totalRepalcement = \"[\" + totalRepalcement + \"]\";\n\t            }\n\t            cl = cl.replace(typeOrTraitValueToReplace, totalRepalcement);\n\t        }\n\t        else if (replacements.length > 1) {\n\t            var totalReplacement = \"\";\n\t            for (var i = 0; i < replacements.length - 1; i++) {\n\t                totalReplacement += replacements[i] + \", \";\n\t            }\n\t            totalReplacement += replacements[replacements.length - 1];\n\t            cl = cl.replace(typeOrTraitValueToReplace, totalReplacement);\n\t        }\n\t        this.getActiveEditor().setText(assist.cleanEmptyLines(cl));\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.createNodeStub = function (node) {\n\t        var universe = node.definition().universe();\n\t        var rtypes = node.root().definition().property(\"resourceTypes\");\n\t        var traits = node.root().definition().property(\"traits\");\n\t        var stub = stubs.createStubNode(universe.type(\"ResourceType\"), rtypes);\n\t        if (!this._resourceType) {\n\t            stub = stubs.createStubNode(universe.type(\"Trait\"), traits);\n\t        }\n\t        return stub;\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.moveLeft = function (z, stub, node, v, v1) {\n\t        var _this = this;\n\t        if (z.length > 0) {\n\t            z.forEach(function (x) { return _this.filters.removals = _this.filters.removals.filter(function (y) { return y.id() != x.id(); }); });\n\t            z.forEach(function (x) {\n\t                stub.remove(x);\n\t                var k = 0;\n\t                k++;\n\t            });\n\t        }\n\t        stub.resetChildren();\n\t        v.setInput(node);\n\t        v1.setInput(stub);\n\t    };\n\t    ExtractTypesAndTraitsDialog.prototype.moveRight = function (z, stub, node, v, v1) {\n\t        if (z.length > 0) {\n\t            this.filters.removals = this.filters.removals.concat(z);\n\t        }\n\t        z.forEach(function (x) { return stub.add(x.copy()); });\n\t        stub.resetChildren();\n\t        v.setInput(node);\n\t        v1.setInput(stub);\n\t    };\n\t    return ExtractTypesAndTraitsDialog;\n\t}());\n\texports.ExtractTypesAndTraitsDialog = ExtractTypesAndTraitsDialog;\n\tvar NodeFilters = (function () {\n\t    function NodeFilters() {\n\t        this.removals = [];\n\t    }\n\t    return NodeFilters;\n\t}());\n\tfunction createSmallSelectionPanel(node, filter, height, width, float) {\n\t    if (float === void 0) { float = \"left\"; }\n\t    var v = createVIewer(node, filter);\n\t    v.setTagName(\"atom-panel\");\n\t    v.setStyle(\"width\", width);\n\t    v.setStyle(\"border\", \"solid\");\n\t    v.setStyle(\"border-width\", \"1px\");\n\t    v.setStyle(\"height\", height);\n\t    v.setStyle(\"overflow\", \"scroll\");\n\t    if (float) {\n\t        v.setStyle(\"float\", float);\n\t    }\n\t    v.margin(3, 3, 3, 3);\n\t    return v;\n\t}\n\texports.createSmallSelectionPanel = createSmallSelectionPanel;\n\tvar HLRenderer = (function () {\n\t    function HLRenderer(opener) {\n\t        this.opener = opener;\n\t    }\n\t    HLRenderer.prototype.render = function (model) {\n\t        try {\n\t            if (model.isAttr()) {\n\t                var attr = model;\n\t                return UI.hc(UI.label(attr.name() + \":\" + attr.value()), UI.a(\"\", function (x) {\n\t                    var p1 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().start());\n\t                    var p2 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().end());\n\t                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n\t                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t            }\n\t            if (model.isUnknown()) {\n\t                return UI.label(\"unknown\");\n\t            }\n\t            var icon = UI.Icon.DASH;\n\t            var highLight = UI.TextClasses.NORMAL;\n\t            var node = model;\n\t            var pc = node.definition().key();\n\t            if (pc === universes.Universe08.Resource || pc === universes.Universe10.Resource) {\n\t                icon = UI.Icon.PRIMITIVE_SQUARE;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (pc === universes.Universe08.Method || pc === universes.Universe10.Method) {\n\t                icon = UI.Icon.PRIMITIVE_DOT;\n\t                highLight = UI.TextClasses.WARNING;\n\t            }\n\t            if (pc === universes.Universe08.AbstractSecurityScheme || pc === universes.Universe10.AbstractSecurityScheme) {\n\t                icon = UI.Icon.LOCK;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (pc === universes.Universe08.AbstractSecurityScheme || pc == universes.Universe10.AbstractSecurityScheme) {\n\t                icon = UI.Icon.FILE_SUBMODULE;\n\t                highLight = UI.TextClasses.NORMAL;\n\t            }\n\t            if (pc == universes.Universe10.TypeDeclaration && universeHelpers.isAnnotationTypesProperty(node.property())) {\n\t                icon = UI.Icon.TAG;\n\t                highLight = UI.TextClasses.HIGHLIGHT;\n\t            }\n\t            if (node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name) ||\n\t                node.definition().isAssignableFrom(universes.Universe08.Parameter.name)) {\n\t                if (node.property() && node.property().nameId() == universes.Universe10.ObjectTypeDeclaration.properties.properties.name) {\n\t                    icon = UI.Icon.FILE_BINARY;\n\t                    highLight = UI.TextClasses.SUCCESS;\n\t                }\n\t                else {\n\t                    icon = UI.Icon.FILE_BINARY;\n\t                    highLight = UI.TextClasses.SUCCESS;\n\t                }\n\t            }\n\t            var nm = model.name();\n\t            var hnode = model;\n\t            if (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem) {\n\t                icon = UI.Icon.BOOK;\n\t                var a = hnode.attr(\"title\");\n\t                if (a) {\n\t                    nm = a.value();\n\t                }\n\t            }\n\t            var extraText = \"\";\n\t            var extraClass = UI.TextClasses.NORMAL;\n\t            var hc = UI.hc(UI.label(nm, icon, highLight));\n\t            var tp = node.attr(\"type\");\n\t            if (tp) {\n\t                var vl = tp.value();\n\t                if (vl == null) {\n\t                    vl = \"\";\n\t                }\n\t                var sv = \"\";\n\t                if (typeof vl === \"object\") {\n\t                    sv = \":\" + vl.valueName();\n\t                }\n\t                else {\n\t                    sv = \":\" + vl;\n\t                }\n\t                hc.addChild(UI.label(sv, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n\t            }\n\t            if (node.lowLevel().unit() != node.root().lowLevel().unit()) {\n\t                highLight = UI.TextClasses.SUBTLE;\n\t                hc.addChild(UI.label(\"(\" + node.lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n\t            }\n\t            hc.addClass(\"outline\");\n\t            return hc;\n\t        }\n\t        catch (e) {\n\t            console.log(e);\n\t            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n\t        }\n\t    };\n\t    return HLRenderer;\n\t}());\n\texports.HLRenderer = HLRenderer;\n\tfunction createVIewer(h, filter) {\n\t    var v = UI.treeViewer(function (x) {\n\t        return x.elements().filter(function (x) { return filter(x); });\n\t    }, new HLRenderer(function (model) {\n\t    }));\n\t    v.setInput(h);\n\t    return v;\n\t}\n\texports.createVIewer = createVIewer;\n\tvar AbstractlMoveElementsDialog = (function () {\n\t    function AbstractlMoveElementsDialog(parentNode, name) {\n\t        this.parentNode = parentNode;\n\t        this.name = name;\n\t        /**\n\t         * A list of moved nodes.\n\t         */\n\t        this.movedNodes = [];\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.checkNode = function (nodeToFilter) {\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.validate = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t    };\n\t    /**\n\t     * Call this to display the dialog.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.show = function () {\n\t        console.log(\"Original file tree:\");\n\t        if (this.getParentNode())\n\t            console.log(this.getParentNode().printDetails());\n\t        if (!this.getParentNode()) {\n\t            return;\n\t        }\n\t        var extractSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n\t        this.stubRoot = this.createStub(this.getParentNode());\n\t        this.createValidationIndicator(extractSection);\n\t        this.createHeader(extractSection);\n\t        this.createPanels(extractSection);\n\t        this.createButtonBar(extractSection);\n\t        extractSection.setPercentWidth(100);\n\t        var html = extractSection.renderUI();\n\t        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t        this.performValidation();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.performValidation = function () {\n\t        var validationMessage = this.validate();\n\t        if (this.okButton) {\n\t            if (validationMessage)\n\t                this.okButton.setDisabled(true);\n\t            else\n\t                this.okButton.setDisabled(false);\n\t        }\n\t        if (this.errorLabel) {\n\t            if (validationMessage) {\n\t                this.errorLabel.setDisplay(true);\n\t                this.errorLabel.setText(validationMessage);\n\t            }\n\t            else {\n\t                this.errorLabel.setDisplay(false);\n\t                this.errorLabel.setText(\"\");\n\t            }\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createValidationIndicator = function (vc) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(this.errorLabel));\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getNodeId = function (node) {\n\t        if (node.parent()) {\n\t            var parentId = this.getNodeId(node.parent());\n\t            parentId += \".\" + node.name();\n\t            var sameName = (node.parent()).asElement().directChildren().filter(function (x) { return x.name() == node.name(); });\n\t            if (sameName.length > 1) {\n\t                var ind = sameName.indexOf(node);\n\t                parentId += \"[\" + ind + \"]\";\n\t            }\n\t            return parentId;\n\t        }\n\t        else if (node.name()) {\n\t            if (node.definition && node.definition() && universeHelpers.isApiType(node.definition())) {\n\t                //no other way to get rid of a fake Api \"key\"\n\t                return \"\";\n\t            }\n\t            return \".\" + node.name();\n\t        }\n\t        return \"\";\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.nodesEqualById = function (node1, node2) {\n\t        return this.getNodeId(node1) == this.getNodeId(node2);\n\t    };\n\t    /**\n\t     * The root of the tree, which is being dynamically build from the moved nodes.\n\t     * The parents of the moved nodes are being copied to the tree, so the temp AST\n\t     * is complete. The root itself is always a stub (not copy) of the root node provided at the dialog open.\n\t     */\n\t    AbstractlMoveElementsDialog.prototype.createMovedNodesTree = function () {\n\t        //cleaning the current tree by removing all the children of the root\n\t        //this.stubRoot.children().forEach(x=>(<any>this.stubRoot).remove(x))\n\t        var _this = this;\n\t        //instead just re-creating parent stub node\n\t        this.stubRoot = this.createStub(this.getParentNode());\n\t        this.movedNodes.forEach(function (movedNode) {\n\t            //collecting node parents till we meet the dialog root\n\t            var parents = [];\n\t            var currentParent = movedNode.parent();\n\t            while (currentParent) {\n\t                if (currentParent == _this.getParentNode())\n\t                    break;\n\t                parents.push(currentParent);\n\t                currentParent = currentParent.parent();\n\t            }\n\t            parents.reverse();\n\t            //now creating copies of parents\n\t            var currentStubPointer = _this.stubRoot;\n\t            parents.forEach(function (currentParent) {\n\t                var stubAnalogueOfParent = _.find(currentStubPointer.children(), function (currentStubElement) {\n\t                    return _this.nodesEqualById(currentStubElement, currentParent);\n\t                });\n\t                if (!stubAnalogueOfParent) {\n\t                    //we did not find an analogue, so we should create one\n\t                    stubAnalogueOfParent = _this.createStub(currentParent);\n\t                    //lets add the new parent to the stub hierarchy\n\t                    currentStubPointer.add(stubAnalogueOfParent);\n\t                    stubAnalogueOfParent.setParent(currentStubPointer);\n\t                }\n\t                currentStubPointer = stubAnalogueOfParent;\n\t            });\n\t            //okay, we found or created all parents of the new moved node, lets create the node itself\n\t            var newNode = _this.createMovedNode(movedNode);\n\t            /*(<hl.IHighLevelNode>movedNode)*/\n\t            currentStubPointer.add(newNode);\n\t            newNode.setParent(currentStubPointer);\n\t        });\n\t        console.log(\"New tree moved:\");\n\t        console.log(this.stubRoot.printDetails());\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createMovedNode = function (originalNode) {\n\t        return originalNode.copy();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.saveUnit = function (unit) {\n\t        provider.saveUnit(unit);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createStub = function (node) {\n\t        var stub = stubs.createStubNode(node.definition(), node.property(), node.lowLevel().key());\n\t        //if (node.parent() == null && node.lowLevel().key() == null){\n\t        //    //cleaning out the fake key\n\t        //    stub.children().forEach(x=>(<any>stub).remove(x))\n\t        //}\n\t        return stub;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createStubRoot = function (node, type) {\n\t        var lowLevel = stubs.createMap();\n\t        var result = stubs.createASTNodeImpl(lowLevel, null, type, null);\n\t        result.children();\n\t        return result;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createPanels = function (vc) {\n\t        var _this = this;\n\t        var el = UI.hc();\n\t        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n\t        var leftDisplayFilter = function (nodeToCheck) {\n\t            if (!_this.checkNode(nodeToCheck).display)\n\t                return false;\n\t            if (_.find(_this.movedNodes, function (movedNode) {\n\t                return movedNode == nodeToCheck; /*|| this.isParentOf(nodeToCheck, movedNode)*/\n\t            }))\n\t                return false;\n\t            return true;\n\t        };\n\t        this.leftPanel = createSmallSelectionPanel(this.getParentNode(), leftDisplayFilter, \"400px\", \"47%\");\n\t        var rightDisplayFilter = function (nodeToCheck) {\n\t            if (!_this.checkNode(nodeToCheck).display)\n\t                return false;\n\t            //if (_.find(this.movedNodes, movedNode => movedNode == nodeToCheck)) return false\n\t            return true;\n\t        };\n\t        this.rightPanel = createSmallSelectionPanel(this.stubRoot, rightDisplayFilter, \"400px\", \"47%\", \"right\");\n\t        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = _this.leftPanel.getSelection().elements;\n\t            _this.moveRight(z);\n\t        });\n\t        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n\t            var z = _this.rightPanel.getSelection().elements;\n\t            _this.moveLeft(z);\n\t        });\n\t        //var allRight=UI.button(\">>\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n\t        //    var z=this.parentNode.elements().filter(x=>leftFilter(x));\n\t        //    this.moveRight(z);\n\t        //});\n\t        //\n\t        //var allLeft=UI.button(\"<<\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n\t        //    var z=stub.elements();\n\t        //    this.moveLeft(z);\n\t        //\n\t        //});\n\t        el.addChild(UI.vc(moveRight, moveLeft /*,allRight,allLeft*/));\n\t        el.addChild(this.leftPanel);\n\t        el.addChild(this.rightPanel);\n\t        vc.addChild(el);\n\t        this.leftPanel.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                //var m=(_.find(rs, x=>x.parent() != this.getParentNode())!=undefined )\n\t                moveRight.setDisabled((rs.length == 0));\n\t            }\n\t        });\n\t        this.rightPanel.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                var rs = ev.selection.elements;\n\t                //var m=(_.find(rs, x=>x.parent() != this.stubRoot)!=undefined )\n\t                moveLeft.setDisabled(rs.length == 0);\n\t            }\n\t        });\n\t        moveLeft.setDisabled(true);\n\t        moveRight.setDisabled(true);\n\t        el.setPercentWidth(100);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.createButtonBar = function (parentPanel) {\n\t        var _this = this;\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { _this.rootAtomPanel.destroy(); }).margin(10, 10));\n\t        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            _this.performOk(_this.movedNodes, _this.stubRoot);\n\t            _this.rootAtomPanel.destroy();\n\t        });\n\t        this.okButton.setDisabled(true);\n\t        buttonBar.addChild(this.okButton);\n\t        parentPanel.addChild(buttonBar);\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getParentNode = function () {\n\t        return this.parentNode;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.isParentOf = function (potentialParent, potentialChild) {\n\t        var current = potentialChild.parent();\n\t        while (current != null) {\n\t            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n\t                return true;\n\t            }\n\t            current = current.parent();\n\t        }\n\t        return false;\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.mergeTrees = function (sourceTreeRoot, targetTreeRoot, mergeProperties) {\n\t        var _this = this;\n\t        if (mergeProperties === void 0) { mergeProperties = false; }\n\t        if (sourceTreeRoot.directChildren()) {\n\t            sourceTreeRoot.directChildren().forEach(function (child) {\n\t                _this.mergeNode(child, targetTreeRoot);\n\t            });\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.getActiveEditor = function () {\n\t        return assist.getActiveEditor();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.mergeNode = function (sourceNode, targetParent, mergeProperties) {\n\t        var _this = this;\n\t        if (mergeProperties === void 0) { mergeProperties = false; }\n\t        if (!mergeProperties && !(sourceNode.isElement())) {\n\t            return;\n\t        }\n\t        var targetChildren = targetParent.directChildren();\n\t        if (!targetChildren) {\n\t            targetParent.add(sourceNode);\n\t            sourceNode.setParent(targetParent);\n\t            return;\n\t        }\n\t        var analogueChild = _.find(targetChildren, function (child) {\n\t            return _this.nodesEqualById(child, sourceNode);\n\t        });\n\t        if (!analogueChild) {\n\t            targetParent.add(sourceNode);\n\t            sourceNode.setParent(targetParent);\n\t            return;\n\t        }\n\t        if (sourceNode.directChildren()) {\n\t            sourceNode.directChildren().forEach(function (sourceChild) {\n\t                return _this.mergeNode(sourceChild, analogueChild);\n\t            });\n\t        }\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.moveLeft = function (nodesToMove) {\n\t        var _this = this;\n\t        if (nodesToMove.length > 0) {\n\t            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n\t                if (_.find(nodesToMove, function (nodeToMove) {\n\t                    //removing the node itself and all of its children subsequently\n\t                    return _this.nodesEqualById(nodeToMove, currentNode)\n\t                        || _this.isParentOf(nodeToMove, currentNode);\n\t                }))\n\t                    return false;\n\t                return true;\n\t            });\n\t            this.createMovedNodesTree();\n\t        }\n\t        this.leftPanel.setInput(this.getParentNode());\n\t        this.stubRoot.resetChildren();\n\t        this.rightPanel.setInput(this.stubRoot);\n\t        this.performValidation();\n\t    };\n\t    AbstractlMoveElementsDialog.prototype.moveRight = function (nodesToMove) {\n\t        var _this = this;\n\t        if (nodesToMove.length > 0) {\n\t            //removing from already moved nodes any children of the nodes to move\n\t            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n\t                if (_.find(nodesToMove, function (nodeToMove) { return _this.isParentOf(nodeToMove, currentNode); }))\n\t                    return false;\n\t                return true;\n\t            });\n\t            nodesToMove.forEach(function (x) { return _this.movedNodes.push(x); });\n\t            //this.movedNodes = this.movedNodes.concat(nodesToMove)\n\t            this.createMovedNodesTree();\n\t        }\n\t        this.leftPanel.setInput(this.getParentNode());\n\t        this.stubRoot.resetChildren();\n\t        this.rightPanel.setInput(this.stubRoot);\n\t        this.performValidation();\n\t    };\n\t    return AbstractlMoveElementsDialog;\n\t}());\n\texports.AbstractlMoveElementsDialog = AbstractlMoveElementsDialog;\n\tvar ExtractLibraryDialog = (function (_super) {\n\t    __extends(ExtractLibraryDialog, _super);\n\t    function ExtractLibraryDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ExtractLibraryDialog.prototype.checkNode = function (nodeToFilter) {\n\t        var range = null;\n\t        if (nodeToFilter.property() && nodeToFilter.property().range()) {\n\t            range = nodeToFilter.property().range();\n\t        }\n\t        var prrr = nodeToFilter.property();\n\t        var blah = universeHelpers.isTypesProperty(prrr);\n\t        var isTp = universeHelpers.isTypeDeclarationType(range)\n\t            && blah;\n\t        if (range &&\n\t            (universeHelpers.isResourceTypeType(range) ||\n\t                universeHelpers.isTraitType(range) ||\n\t                universeHelpers.isGlobalSchemaType(range) ||\n\t                universeHelpers.isSecuritySchemaType(range) ||\n\t                isTp)) {\n\t            return {\n\t                visitChildren: false,\n\t                display: true,\n\t                canBeMoved: true\n\t            };\n\t        }\n\t        return {\n\t            visitChildren: false,\n\t            display: false,\n\t            canBeMoved: false\n\t        };\n\t    };\n\t    ExtractLibraryDialog.prototype.createStub = function (node) {\n\t        if (node.definition().key() == universeModule.Universe10.Api ||\n\t            node.definition().key() == universeModule.Universe08.Api) {\n\t            var universe = rp.ds.getUniverse(\"RAML10\");\n\t            var nodeClass = universe.type(universeModule.Universe10.Library.name);\n\t            var stub = this.createStubRoot(node, nodeClass);\n\t            return stub;\n\t        }\n\t        return _super.prototype.createStub.call(this, node);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractLibraryDialog.prototype.validate = function () {\n\t        if (!this.libraryPath)\n\t            return null;\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        if (!this.libraryNamespace)\n\t            return null;\n\t        if (!this.getLibraryQualifier()) {\n\t            return \"Enter library namespace\";\n\t        }\n\t        if (this.getLibraryQualifier().trim().length == 0) {\n\t            return \"Enter library namespace\";\n\t        }\n\t        var originalValue = this.libraryPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return \"Empty library path\";\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return \"Library path should be a RAML file\";\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return \"Library path directory does not exist\";\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return \"Library path parent is not a directory\";\n\t        }\n\t        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t        if (fs.existsSync(absolutePath)) {\n\t            return \"Destination library already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractLibraryDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Library namespace:\").pad(5, 0));\n\t        this.libraryNamespace = UI.texfField(\"\", this.getDefaultLibraryNamespace(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.libraryNamespace);\n\t        parentPanel.addChild(UI.label(\"Library path:\").pad(5, 0));\n\t        this.libraryPath = UI.texfField(\"\", this.generateDefaultLibraryPath(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.libraryPath);\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ExtractLibraryDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var _this = this;\n\t        var project = this.createProject();\n\t        var libraryUnit = this.createLibraryUnit(project);\n\t        var libraries = search.globalDeclarations(this.getParentNode()).filter(function (found) { return found && found.definition && found.definition().nameId() === universeModule.Universe10.Library.name; });\n\t        var universe = this.getParentNode().definition().universe();\n\t        var libraryClass = universe.type(universeModule.Universe10.Library.name);\n\t        movedNodes.forEach(function (movedNode) {\n\t            var librariesToExport = libraries.filter(function (library) {\n\t                return _.find(library.findReferences(), function (reference) { return _this.isParentOf(movedNode, reference); }) ? true : false;\n\t            });\n\t            librariesToExport.forEach(function (library) {\n\t                var currentPath = library.lowLevel()._node.value && library.lowLevel()._node.value.value;\n\t                if (!currentPath) {\n\t                    return;\n\t                }\n\t                var relativePath;\n\t                if (isWebPath(currentPath) || path.isAbsolute(currentPath)) {\n\t                    relativePath = currentPath;\n\t                }\n\t                else {\n\t                    var currentDirectory = path.dirname(_this.getParentNode().lowLevel().unit().absolutePath());\n\t                    var relativePath = path.relative(path.dirname(libraryUnit.absolutePath()), path.resolve(currentDirectory, currentPath));\n\t                }\n\t                var lowLevel = stubs.createMapping(library.lowLevel().key(), \"!include \" + relativePath);\n\t                var stubLibrary = stubs.createASTNodeImpl(lowLevel, null, libraryClass, null);\n\t                stubTreeRoot.wrapperNode().addToProp(stubLibrary.wrapperNode(), universeModule.Universe10.FragmentDeclaration.properties.uses.name);\n\t            });\n\t        });\n\t        this.updateLibraryUnit(libraryUnit, stubTreeRoot);\n\t        this.saveUnit(libraryUnit);\n\t        var modifiedUnits = [];\n\t        modifiedUnits.push(this.getParentNode().lowLevel().unit());\n\t        var libraryQualifier = this.getLibraryQualifier();\n\t        movedNodes.forEach(function (movedNode) {\n\t            //changing node references\n\t            var movedNodeReferences = movedNode.findReferences();\n\t            if (movedNodeReferences) {\n\t                movedNodeReferences.forEach(function (reference) {\n\t                    if (!(reference.isAttr())) {\n\t                        return;\n\t                    }\n\t                    if (_.find(movedNodes, function (movedNode) { return _this.isParentOf(movedNode, reference); })) {\n\t                        return;\n\t                    }\n\t                    var property = reference;\n\t                    var oldValue = property.value();\n\t                    if (typeof oldValue != \"string\") {\n\t                        return;\n\t                    }\n\t                    var oldStringValue = oldValue;\n\t                    var textToReplace = movedNode.name();\n\t                    var textToReplanceWith = libraryQualifier + \".\" + textToReplace;\n\t                    var newStringValue = oldStringValue.replace(textToReplace, textToReplanceWith);\n\t                    property.setValue(newStringValue);\n\t                    var modifiedPropertyUnit = property.lowLevel().unit();\n\t                    if (_.find(modifiedUnits, function (modifiedUnit) { return modifiedUnit == modifiedPropertyUnit; })) {\n\t                        modifiedUnits.push(modifiedPropertyUnit);\n\t                    }\n\t                });\n\t            }\n\t            //deleting the node itself\n\t            movedNode.parent().remove(movedNode);\n\t        });\n\t        modifiedUnits.forEach(function (modifiedUnit) { return _this.saveUnit(modifiedUnit); });\n\t        this.addUsesNode(libraryQualifier, this.getLibraryPath());\n\t    };\n\t    ExtractLibraryDialog.prototype.generateDefaultLibraryPath = function () {\n\t        var node = this.getParentNode();\n\t        var currentFilePath = node.lowLevel().unit().absolutePath();\n\t        var parent = path.dirname(currentFilePath);\n\t        return path.resolve(parent, \"NewLibrary.raml\");\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryName = function () {\n\t        return this.libraryNamespace.getBinding().get();\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryQualifier = function () {\n\t        return this.libraryNamespace.getBinding().get();\n\t    };\n\t    ExtractLibraryDialog.prototype.getDefaultLibraryNamespace = function () {\n\t        return \"NewLibrary\";\n\t    };\n\t    ExtractLibraryDialog.prototype.getLibraryPath = function () {\n\t        var originalValue = this.libraryPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return null;\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return null;\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return null;\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return null;\n\t        }\n\t        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t    };\n\t    ExtractLibraryDialog.prototype.createProject = function () {\n\t        var targetLibraryPath = this.getLibraryPath();\n\t        return rp.project.createProject(path.dirname(targetLibraryPath));\n\t    };\n\t    ExtractLibraryDialog.prototype.createLibraryUnit = function (project) {\n\t        var targetLibraryPath = this.getLibraryPath();\n\t        fs.writeFileSync(targetLibraryPath, \"#%RAML 1.0 Library\\n\");\n\t        return project.unit(path.basename(targetLibraryPath));\n\t    };\n\t    ExtractLibraryDialog.prototype.updateLibraryUnit = function (libraryUnit, stubTreeRoot) {\n\t        var targetLibraryAst = libraryUnit.highLevel();\n\t        //adding top-level children from stub AST to the target library AST\n\t        stubTreeRoot.children().forEach(function (child) {\n\t            if (!child.getKind()) {\n\t                return;\n\t            }\n\t            targetLibraryAst.add(child);\n\t        });\n\t    };\n\t    ExtractLibraryDialog.prototype.addUsesNode = function (libraryQualifier, fileName) {\n\t        //TODO this must be done via AST manipulation, but it is impossible atm due to AST bugs\n\t        var relativePath = path.relative(path.dirname(this.getParentNode().lowLevel().unit().absolutePath()), fileName);\n\t        var existingFirstUsesNode = _.find(this.getParentNode().children(), function (child) {\n\t            var childAny = child;\n\t            return childAny.definition &&\n\t                universeHelpers.isLibraryType(childAny.definition()) &&\n\t                childAny.property() &&\n\t                universeHelpers.isUsesProperty(childAny.property());\n\t        });\n\t        var usesMapping = null;\n\t        var sequenceFound = false;\n\t        if (existingFirstUsesNode) {\n\t            var currentNode = existingFirstUsesNode.lowLevel();\n\t            while (currentNode != null) {\n\t                if (currentNode.kind() == yaml.Kind.MAPPING\n\t                    && currentNode.key() == universeModule.Universe10.FragmentDeclaration.properties.uses.name) {\n\t                    usesMapping = currentNode;\n\t                    break;\n\t                }\n\t                if (currentNode.kind() == yaml.Kind.SEQ) {\n\t                    sequenceFound = true;\n\t                }\n\t                currentNode = currentNode.parent();\n\t            }\n\t        }\n\t        if (usesMapping) {\n\t            //existing \"uses\" found, inserting there\n\t            var positionToInsert = usesMapping.keyEnd() + 1;\n\t            var text = \"\\n  \" + (sequenceFound ? \"- \" : \"\") + libraryQualifier + \": \" + relativePath;\n\t            this.insertTextToActiveEditor(positionToInsert, text);\n\t        }\n\t        else {\n\t            var titleNode = _.find(this.getParentNode().children(), function (child) {\n\t                var childAny = child;\n\t                return childAny.definition &&\n\t                    universeHelpers.isStringTypeType(childAny.definition()) &&\n\t                    childAny.property() &&\n\t                    universeHelpers.isTitleProperty(childAny.property());\n\t            });\n\t            if (titleNode) {\n\t                //title node found, inserting after it\n\t                var positionToInsert = titleNode.lowLevel().valueEnd();\n\t                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n\t                this.insertTextToActiveEditor(positionToInsert, text);\n\t            }\n\t            else {\n\t                //nothing happens, inserting in the end of the file\n\t                var positionToInsert = this.getParentNode().lowLevel().end();\n\t                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n\t                this.insertTextToActiveEditor(positionToInsert, text);\n\t            }\n\t        }\n\t    };\n\t    ExtractLibraryDialog.prototype.insertTextToActiveEditor = function (positionToInsert, text) {\n\t        var txt = this.getParentNode().lowLevel().unit().contents();\n\t        var endPart = txt.substring(positionToInsert);\n\t        var startPart = txt.substring(0, positionToInsert);\n\t        var vl = startPart + text + endPart;\n\t        this.getActiveEditor().setText(vl);\n\t    };\n\t    ExtractLibraryDialog.prototype.createUsesNode = function (libraryQualifier, fileName) {\n\t        var universe = this.getParentNode().definition().universe();\n\t        var usesProperty = this.getParentNode().root().definition().property(\"uses\");\n\t        var usesNode = stubs.createStubNode(universe.type(\"Library\"), usesProperty, libraryQualifier);\n\t        return usesNode;\n\t    };\n\t    return ExtractLibraryDialog;\n\t}(AbstractlMoveElementsDialog));\n\texports.ExtractLibraryDialog = ExtractLibraryDialog;\n\tvar ExtractOverlayDialog = (function (_super) {\n\t    __extends(ExtractOverlayDialog, _super);\n\t    function ExtractOverlayDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    ExtractOverlayDialog.prototype.createStub = function (node) {\n\t        if (node.definition().key() == universeModule.Universe10.Api ||\n\t            node.definition().key() == universeModule.Universe08.Api) {\n\t            var universe = rp.ds.getUniverse(\"RAML10\");\n\t            var nodeClass = universe.type(universeModule.Universe10.Overlay.name);\n\t            var stub = this.createStubRoot(node, nodeClass);\n\t            return stub;\n\t        }\n\t        return _super.prototype.createStub.call(this, node);\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ExtractOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n\t        //we can move everything\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ExtractOverlayDialog.prototype.validate = function () {\n\t        if (!this.overlayPath)\n\t            return null;\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        var originalValue = this.overlayPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return \"Empty overlay path\";\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return \"Overlay path should be a RAML file\";\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return \"Overlay path directory does not exist\";\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return \"Overlay path parent is not a directory\";\n\t        }\n\t        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t        if (fs.existsSync(absolutePath)) {\n\t            return \"Destination overlay already exists\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractOverlayDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Overlay path:\").pad(5, 0));\n\t        this.overlayPath = UI.texfField(\"\", this.generateDefaultOverlayPath(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.overlayPath);\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ExtractOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var project = this.createProject();\n\t        var overlayUnit = this.createOverlayUnit(project);\n\t        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n\t        var overlayPath = this.getOverlayPath();\n\t        var originalUnitPath = this.getParentNode().lowLevel().unit().absolutePath();\n\t        var relativePath = path.relative(path.dirname(overlayPath), originalUnitPath);\n\t        this.addMasterReference(overlayUnit, relativePath);\n\t        this.saveUnit(overlayUnit);\n\t    };\n\t    ExtractOverlayDialog.prototype.generateDefaultOverlayPath = function () {\n\t        var node = this.getParentNode();\n\t        var currentFilePath = node.lowLevel().unit().absolutePath();\n\t        var parent = path.dirname(currentFilePath);\n\t        return path.resolve(parent, \"NewOverlay.raml\");\n\t    };\n\t    ExtractOverlayDialog.prototype.createProject = function () {\n\t        var targetOverlayPath = this.getOverlayPath();\n\t        return rp.project.createProject(path.dirname(targetOverlayPath));\n\t    };\n\t    ExtractOverlayDialog.prototype.createOverlayUnit = function (project) {\n\t        var targetOverlayPath = this.getOverlayPath();\n\t        fs.writeFileSync(targetOverlayPath, \"#%RAML 1.0 Overlay\\ntitle: Extension\\n\");\n\t        return project.unit(path.basename(targetOverlayPath));\n\t    };\n\t    ExtractOverlayDialog.prototype.updateOverlayUnit = function (overlayUnit, stubTreeRoot) {\n\t        var targetOverlayAst = overlayUnit.highLevel();\n\t        //adding top-level children from stub AST to the target overlay AST\n\t        stubTreeRoot.children().forEach(function (child) {\n\t            if (!child.getKind()) {\n\t                return;\n\t            }\n\t            targetOverlayAst.add(child);\n\t        });\n\t    };\n\t    ExtractOverlayDialog.prototype.getOverlayPath = function () {\n\t        var originalValue = this.overlayPath.getBinding().get();\n\t        var trimmed = originalValue.trim();\n\t        if (trimmed.length == 0) {\n\t            return null;\n\t        }\n\t        if (path.extname(trimmed) != '.raml') {\n\t            return null;\n\t        }\n\t        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n\t        if (!fs.existsSync(dir)) {\n\t            return null;\n\t        }\n\t        var st = fs.statSync(dir);\n\t        if (!st.isDirectory()) {\n\t            return null;\n\t        }\n\t        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n\t    };\n\t    ExtractOverlayDialog.prototype.addMasterReference = function (overlayUnit, path) {\n\t        var targetLibraryAst = overlayUnit.highLevel();\n\t        var masterRefAttribute = targetLibraryAst.attrOrCreate(universeModule.Universe10.Overlay.properties.extends.name);\n\t        masterRefAttribute.setValue(path);\n\t    };\n\t    ExtractOverlayDialog.prototype.createMovedNode = function (originalNode) {\n\t        //we do not want to make a complete copy of the moved node.\n\t        //instead, we want an empty stub\n\t        return this.createStub(originalNode);\n\t    };\n\t    return ExtractOverlayDialog;\n\t}(AbstractlMoveElementsDialog));\n\texports.ExtractOverlayDialog = ExtractOverlayDialog;\n\tvar ModifyOverlayDialog = (function (_super) {\n\t    __extends(ModifyOverlayDialog, _super);\n\t    function ModifyOverlayDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.overlayASTRoot = parentNode;\n\t        console.log(\"Overlay AST root:\");\n\t        console.log(this.overlayASTRoot.printDetails());\n\t        this.masterASTRoot = this.createMasterAST();\n\t        this.overlayASTLeafNodes = [];\n\t        this.calculateLeafNodes(this.overlayASTRoot, this.overlayASTLeafNodes);\n\t    }\n\t    ModifyOverlayDialog.prototype.getParentNode = function () {\n\t        return this.masterASTRoot;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    ModifyOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n\t        var _this = this;\n\t        //we can move everything except leaf nodes already defined in out AST\n\t        if (_.find(this.overlayASTLeafNodes, function (currentNode) {\n\t            return currentNode == nodeToFilter || _this.nodesEqualById(currentNode, nodeToFilter);\n\t        })) {\n\t            return {\n\t                visitChildren: false,\n\t                display: false,\n\t                canBeMoved: false\n\t            };\n\t        }\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    ModifyOverlayDialog.prototype.validate = function () {\n\t        if (!this.stubRoot)\n\t            return null;\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ModifyOverlayDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    ModifyOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var overlayUnit = this.getOverlayUnit();\n\t        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n\t        this.saveUnit(overlayUnit);\n\t    };\n\t    ModifyOverlayDialog.prototype.createMasterAST = function () {\n\t        var masterAbsolutePath = this.findMasterAbsolutePath();\n\t        if (!masterAbsolutePath) {\n\t            return null;\n\t        }\n\t        var project = this.createProject(masterAbsolutePath);\n\t        var masterUnit = project.unit(path.basename(masterAbsolutePath));\n\t        return masterUnit.highLevel();\n\t    };\n\t    ModifyOverlayDialog.prototype.calculateLeafNodes = function (root, toReportTo) {\n\t        var _this = this;\n\t        if (!root)\n\t            return;\n\t        var children = root.directChildren() ? root.directChildren() : null;\n\t        if (root.isElement()) {\n\t            if (children) {\n\t                if (!_.find(children, function (child) { return child.isElement(); })) {\n\t                    toReportTo.push(root);\n\t                    return;\n\t                }\n\t            }\n\t            else {\n\t                toReportTo.push(root);\n\t                return;\n\t            }\n\t        }\n\t        if (children)\n\t            children.forEach(function (child) { return _this.calculateLeafNodes(child, toReportTo); });\n\t    };\n\t    ModifyOverlayDialog.prototype.findMasterAbsolutePath = function () {\n\t        try {\n\t            var masterRefAttribute = this.overlayASTRoot.attr(\"masterRef\");\n\t            if (!masterRefAttribute) {\n\t                return null;\n\t            }\n\t            var reference = masterRefAttribute.value();\n\t            if (!reference) {\n\t                return null;\n\t            }\n\t            var overlayAbsolutePath = this.getOverlayUnit().absolutePath();\n\t            var masterAbsolutePath = path.resolve(path.dirname(overlayAbsolutePath), reference);\n\t            //if (!fs.existsSync(masterAbsolutePath)) {\n\t            //    return null\n\t            //}\n\t            return masterAbsolutePath;\n\t        }\n\t        catch (Error) {\n\t            console.error(Error.message);\n\t            return null;\n\t        }\n\t    };\n\t    ModifyOverlayDialog.prototype.createProject = function (targetPath) {\n\t        return rp.project.createProject(path.dirname(targetPath));\n\t    };\n\t    ModifyOverlayDialog.prototype.getOverlayUnit = function () {\n\t        return this.overlayASTRoot.lowLevel().unit();\n\t    };\n\t    ModifyOverlayDialog.prototype.updateOverlayUnit = function (libraryUnit, stubTreeRoot) {\n\t        var targetLibraryAst = libraryUnit.highLevel();\n\t        //merging the new nodes into existing overlay tree\n\t        this.mergeTrees(stubTreeRoot, this.overlayASTRoot);\n\t    };\n\t    ModifyOverlayDialog.prototype.createMovedNode = function (originalNode) {\n\t        //we do not want to make a complete copy of the moved node.\n\t        //instead, we want an empty stub\n\t        return this.createStub(originalNode);\n\t    };\n\t    return ModifyOverlayDialog;\n\t}(AbstractlMoveElementsDialog));\n\texports.ModifyOverlayDialog = ModifyOverlayDialog;\n\t/**\n\t * Intended for subclassing, should not be instantiated.\n\t */\n\tvar AbstractMoveTypePropertiesDialog = (function (_super) {\n\t    __extends(AbstractMoveTypePropertiesDialog, _super);\n\t    function AbstractMoveTypePropertiesDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.sourceType = parentNode;\n\t    }\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.getTargetType = function () {\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Is called for each node to check whether to display it, whether the node can be moved,\n\t     * and whether node children needs to be checked.\n\t     *\n\t     * @param nodeToFilter\n\t     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.checkNode = function (nodeToFilter) {\n\t        //we can move everything inside the type\n\t        //and as the type is our root, we can move just everything\n\t        return {\n\t            visitChildren: true,\n\t            display: true,\n\t            canBeMoved: true\n\t        };\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Checks if everything is valid.\n\t     * This particular method should be called in a subclass before or after\n\t     * its own check, and the results should be joined.\n\t     * @returns {null} if validation passed ok, error message otherwise\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.validate = function () {\n\t        if (this.movedNodes.length == 0) {\n\t            return \"Add elements to move\";\n\t        }\n\t        return null;\n\t    };\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.createHeader = function (parentPanel) {\n\t    };\n\t    /**\n\t     * Is called when \"Ok\" is pressed.\n\t     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n\t     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n\t     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n\t     */\n\t    AbstractMoveTypePropertiesDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n\t        var sourceUnit = this.sourceType.lowLevel().unit();\n\t        var targetType = this.getTargetType();\n\t        if (!targetType) {\n\t            return;\n\t        }\n\t        var targetUnit = targetType.lowLevel().unit();\n\t        this.mergeTrees(stubTreeRoot, targetType);\n\t        this.movedNodes.forEach(function (movedNode) {\n\t            movedNode.parent().remove(movedNode);\n\t        });\n\t        this.postMerge();\n\t        this.saveUnit(sourceUnit);\n\t        if (targetUnit)\n\t            this.saveUnit(targetUnit);\n\t    };\n\t    AbstractMoveTypePropertiesDialog.prototype.postMerge = function () {\n\t    };\n\t    return AbstractMoveTypePropertiesDialog;\n\t}(AbstractlMoveElementsDialog));\n\texports.AbstractMoveTypePropertiesDialog = AbstractMoveTypePropertiesDialog;\n\tfunction findUserDefinedSupertypes(typeNode) {\n\t    var result = [];\n\t    var nodeType = typeNode.localType();\n\t    if (!nodeType || !nodeType.isUserDefined()) {\n\t        return result;\n\t    }\n\t    addUserDefinedSupertypes(nodeType, result);\n\t    return result;\n\t}\n\texports.findUserDefinedSupertypes = findUserDefinedSupertypes;\n\tfunction addUserDefinedSupertypes(type, typesToAddTo) {\n\t    if (!type.isUserDefined()) {\n\t        return;\n\t    }\n\t    var superTypes = (type).superTypes();\n\t    if (superTypes)\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.isUserDefined()) {\n\t                typesToAddTo.push(superType);\n\t            }\n\t            addUserDefinedSupertypes(superType, typesToAddTo);\n\t        });\n\t}\n\tvar PullUpDialog = (function (_super) {\n\t    __extends(PullUpDialog, _super);\n\t    function PullUpDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t        this.superTypeNames = [];\n\t        this.superTypeNames = this.findSuperTypeNames();\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    PullUpDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Select supertype:\").pad(5, 0));\n\t        var select = new UI.Select(\"\", function (selection) {\n\t            _this.selectedSuperType = select.getValue();\n\t        });\n\t        select.setOptions(this.superTypeNames);\n\t        select.setValue(this.superTypeNames[0]);\n\t        this.selectedSuperType = this.superTypeNames[0];\n\t        parentPanel.addChild(select);\n\t    };\n\t    PullUpDialog.prototype.show = function () {\n\t        //if no supertypes are found, we're not displaying anything\n\t        //Actually, state calculator should not allow action launching in this case\n\t        if (this.superTypeNames.length == 0) {\n\t            return;\n\t        }\n\t        _super.prototype.show.call(this);\n\t    };\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    PullUpDialog.prototype.getTargetType = function () {\n\t        var _this = this;\n\t        var foundSuperType = _.find(this.superTypes, function (superType) {\n\t            return superType.nameId() == _this.selectedSuperType;\n\t        });\n\t        if (!foundSuperType)\n\t            return null;\n\t        return foundSuperType.getAdapter(def.RAMLService).getDeclaringNode();\n\t    };\n\t    PullUpDialog.prototype.findSuperTypeNames = function () {\n\t        var result = [];\n\t        this.superTypes = findUserDefinedSupertypes(this.sourceType);\n\t        this.superTypes.forEach(function (superType) {\n\t            result.push(superType.nameId());\n\t        });\n\t        return result;\n\t    };\n\t    return PullUpDialog;\n\t}(AbstractMoveTypePropertiesDialog));\n\texports.PullUpDialog = PullUpDialog;\n\tvar ExtractSupertypeDialog = (function (_super) {\n\t    __extends(ExtractSupertypeDialog, _super);\n\t    function ExtractSupertypeDialog(parentNode, name) {\n\t        _super.call(this, parentNode, name);\n\t    }\n\t    /**\n\t     * Intended for overriding in subclass.\n\t     * Add any UI here to be displayed above the node moving panels.\n\t     * @param parentPanel\n\t     */\n\t    ExtractSupertypeDialog.prototype.createHeader = function (parentPanel) {\n\t        var _this = this;\n\t        parentPanel.addChild(UI.label(\"Supertype name:\").pad(5, 0));\n\t        this.superTypeName = UI.texfField(\"\", this.generateDefaultSupertypeName(), function (x) {\n\t            _this.performValidation();\n\t        });\n\t        parentPanel.addChild(this.superTypeName);\n\t    };\n\t    /**\n\t     * Intended for overriding, should return the target type.\n\t     * Will only be called during performOk() execution, so it is assumed that\n\t     * UI already have required user input before the calowLevel.\n\t     * @returns {null}\n\t     */\n\t    ExtractSupertypeDialog.prototype.getTargetType = function () {\n\t        var astRoot = this.sourceType.root();\n\t        var universe = astRoot.definition().universe();\n\t        var rtypes = astRoot.root().definition().property(universeModule.Universe10.LibraryBase.properties.types.name);\n\t        //var typeStub=(<def.NodeClass>universe.getType(\"ObjectField\")).createStubNode(rtypes, this.superTypeName.getBinding().get());\n\t        var typeWrapper = rp.parser.modify.createObjectTypeDeclaration(this.superTypeName.getBinding().get());\n\t        var typeStub = typeWrapper.highLevel();\n\t        this.typeWrapper = typeWrapper;\n\t        this.astRoot = astRoot;\n\t        //astRoot.add(typeStub);\n\t        //var unit = astRoot.lowLevel().unit();\n\t        //this.saveUnit(unit);\n\t        //\n\t        //var newAstRoot = <hl.IHighLevelNode>hl.fromUnit(unit);\n\t        //this.sourceType = <hl.IHighLevelNode> _.find(newAstRoot.children(), child=>{\n\t        //    return (<hl.IHighLevelNode>child).property\n\t        //    && (<hl.IHighLevelNode>child).property().range\n\t        //    && (<hl.IHighLevelNode>child).property().range().name() == \"DataElement\"\n\t        //    && (<hl.IHighLevelNode>child).property().name() == \"types\"\n\t        //    && (<hl.IHighLevelNode>child).name() == this.superTypeName.getBinding().get()\n\t        //})\n\t        return typeStub;\n\t    };\n\t    ExtractSupertypeDialog.prototype.validate = function () {\n\t        var superValidate = _super.prototype.validate.call(this);\n\t        if (superValidate) {\n\t            return superValidate;\n\t        }\n\t        if (!this.superTypeName.getBinding().get() ||\n\t            this.superTypeName.getBinding().get().trim().length == 0) {\n\t            return \"Enter supertype name\";\n\t        }\n\t        return null;\n\t    };\n\t    ExtractSupertypeDialog.prototype.postMerge = function () {\n\t        this.astRoot.wrapperNode().addToProp(this.typeWrapper, 'types');\n\t        this.sourceType.attrOrCreate(\"type\").setValue(this.typeWrapper.highLevel().name());\n\t        //var runtimeDef = this.typeWrapper.highLevel().definition().toRuntime()\n\t        //(<hlimpl.ASTNodeImpl>this.sourceType).patchType(runtimeDef)\n\t    };\n\t    ExtractSupertypeDialog.prototype.generateDefaultSupertypeName = function () {\n\t        return this.sourceType.name() + \"SuperType\";\n\t    };\n\t    return ExtractSupertypeDialog;\n\t}(AbstractMoveTypePropertiesDialog));\n\texports.ExtractSupertypeDialog = ExtractSupertypeDialog;\n\tfunction isWebPath(str) {\n\t    if (str == null)\n\t        return false;\n\t    return util.stringStartsWith(str, \"http://\") || util.stringStartsWith(str, \"https://\");\n\t}\n\t\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar hl = __webpack_require__(23);\n\tvar UI = __webpack_require__(19);\n\tvar editorTools = __webpack_require__(5);\n\tvar extract = __webpack_require__(40);\n\tvar assist = __webpack_require__(9);\n\tvar universes = hl.universes;\n\tvar MoveElementsDialog = (function () {\n\t    function MoveElementsDialog(node, name, _resourceType) {\n\t        this.node = node;\n\t        this.name = name;\n\t        this._resourceType = _resourceType;\n\t    }\n\t    MoveElementsDialog.prototype.getActiveEditor = function () {\n\t        var activeEditor = atom.workspace.getActiveTextEditor();\n\t        if (activeEditor) {\n\t            return activeEditor;\n\t        }\n\t        if (editorTools.aquireManager())\n\t            return editorTools.aquireManager().getCurrentEditor();\n\t        return null;\n\t    };\n\t    MoveElementsDialog.prototype.show = function () {\n\t        var _this = this;\n\t        var zz = null;\n\t        var node = this.node;\n\t        var vc = UI.section(\"Move resource \", UI.Icon.GIST_NEW, false, false);\n\t        var errorLabel = UI.label(\"please select destination resource\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n\t        vc.addChild(UI.vc(errorLabel));\n\t        vc.addChild(UI.label(\"Please select destination resource\"));\n\t        var el = UI.hc();\n\t        vc.setPercentWidth(100);\n\t        el.setPercentWidth(100);\n\t        var filterFunc = function (x) {\n\t            if (_this._resourceType) {\n\t                if (x.definition().key() != universes.Universe08.Resource &&\n\t                    x.definition().key() != universes.Universe10.Resource) {\n\t                    return false;\n\t                }\n\t                if (x == node || x == node.parent()) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        var universe = node.definition().universe();\n\t        var v = extract.createSmallSelectionPanel(node.root(), filterFunc, \"400px\", \"100%\");\n\t        el.addChild(v);\n\t        vc.addChild(el);\n\t        v.addSelectionListener({\n\t            selectionChanged: function (ev) {\n\t                errorLabel.setDisplay(ev.selection.isEmpty());\n\t                okButton.setDisabled(ev.selection.isEmpty());\n\t            }\n\t        });\n\t        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n\t        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n\t        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n\t        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n\t            var target = v.getSelection().elements[0];\n\t            node.parent().remove(node);\n\t            target.add(node);\n\t            var rs = node.lowLevel().unit().contents();\n\t            _this.getActiveEditor().setText(assist.cleanEmptyLines(rs));\n\t            zz.destroy();\n\t        });\n\t        okButton.setDisabled(true);\n\t        buttonBar.addChild(okButton);\n\t        vc.addChild(buttonBar);\n\t        var html = vc.renderUI();\n\t        zz = atom.workspace.addModalPanel({ item: html });\n\t        html.focus();\n\t    };\n\t    return MoveElementsDialog;\n\t}());\n\texports.MoveElementsDialog = MoveElementsDialog;\n\t\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar DomParser = __webpack_require__(48);\n\tfunction xmlToJson(xml) {\n\t    // Create the return object\n\t    var obj = {};\n\t    if (xml.nodeType == 1) {\n\t        // do attributes\n\t        if (xml.attributes.length > 0) {\n\t            for (var j = 0; j < xml.attributes.length; j++) {\n\t                var attribute = xml.attributes.item(j);\n\t                obj[\"@\" + attribute.nodeName] = attribute.nodeValue;\n\t            }\n\t        }\n\t    }\n\t    else if (xml.nodeType == 3) {\n\t        obj = xml.nodeValue;\n\t    }\n\t    // do children\n\t    if (xml.hasChildNodes()) {\n\t        for (var i = 0; i < xml.childNodes.length; i++) {\n\t            var item = xml.childNodes.item(i);\n\t            var nodeName = item.nodeName;\n\t            if (nodeName == undefined) {\n\t                continue;\n\t            }\n\t            if (typeof (obj[nodeName]) == \"undefined\") {\n\t                obj[nodeName] = xmlToJson(item);\n\t            }\n\t            else {\n\t                if (typeof (obj[nodeName].push) == \"undefined\") {\n\t                    var old = obj[nodeName];\n\t                    obj[nodeName] = [];\n\t                    obj[nodeName].push(old);\n\t                }\n\t                obj[nodeName].push(xmlToJson(item));\n\t            }\n\t        }\n\t    }\n\t    return obj;\n\t}\n\t;\n\tfunction cleanupText(j) {\n\t    for (var p in j) {\n\t        if (typeof (j[p]) == \"object\") {\n\t            for (var k in j[p]) {\n\t                if (k == '#text') {\n\t                    var txt = j[p]['#text'];\n\t                    if (typeof (txt) != 'string') {\n\t                        txt = txt.join(\"\");\n\t                    }\n\t                    txt = txt.trim();\n\t                    if (txt.length == 0) {\n\t                        delete j[p]['#text'];\n\t                    }\n\t                }\n\t            }\n\t            cleanupText(j[p]);\n\t        }\n\t    }\n\t    return j;\n\t}\n\tfunction cleanupJson(j) {\n\t    for (var p in j) {\n\t        if (typeof (j[p]) == \"object\") {\n\t            var keys = Object.keys(j[p]);\n\t            if (keys.length == 1) {\n\t                if (keys[0] == '#text') {\n\t                    j[p] = j[p]['#text'];\n\t                }\n\t            }\n\t            cleanupJson(j[p]);\n\t        }\n\t    }\n\t    return j;\n\t}\n\tfunction parseXML(value) {\n\t    var v = new DomParser.DOMParser();\n\t    if (!value || value.trim().indexOf(\"<<\") == 0)\n\t        return null;\n\t    var parsed = v.parseFromString(value);\n\t    return cleanupJson(cleanupText(xmlToJson(parsed)));\n\t}\n\tmodule.exports = parseXML;\n\t\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by Sviridov on 5/1/2015.\n\t */\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar JsonSchemaGenerator = (function () {\n\t    function JsonSchemaGenerator() {\n\t    }\n\t    JsonSchemaGenerator.prototype.generateSchema = function (obj) {\n\t        var sch = {};\n\t        sch['required'] = true;\n\t        sch['$schema'] = 'http://json-schema.org/draft-03/schema';\n\t        this.pass(obj, sch);\n\t        return sch;\n\t    };\n\t    JsonSchemaGenerator.prototype.pass = function (value, property) {\n\t        var valueType = this.detectType(value);\n\t        property['type'] = valueType;\n\t        if (!value || value == null) {\n\t        }\n\t        else if (Array.isArray(value)) {\n\t            this.passArray(value, property);\n\t        }\n\t        else if (value instanceof Object) {\n\t            this.passObject(value, property);\n\t        }\n\t    };\n\t    JsonSchemaGenerator.prototype.passObject = function (obj, sch) {\n\t        var _this = this;\n\t        Object.keys(obj).forEach(function (x) { return _this.registerProperty(x, obj[x], sch); });\n\t    };\n\t    JsonSchemaGenerator.prototype.registerProperty = function (propName, value, sch) {\n\t        var properties = sch['properties'];\n\t        if (!properties) {\n\t            properties = {};\n\t            sch['properties'] = properties;\n\t        }\n\t        var property = properties[propName];\n\t        if (!property) {\n\t            property = {};\n\t            properties[propName] = property;\n\t        }\n\t        property['required'] = false;\n\t        this.pass(value, property);\n\t    };\n\t    JsonSchemaGenerator.prototype.passArray = function (array, property) {\n\t        var _this = this;\n\t        var items = property['items'];\n\t        if (!items) {\n\t            items = [];\n\t            property['items'] = items;\n\t        }\n\t        var l = array.length;\n\t        var itemSet = [];\n\t        array.forEach(function (value) {\n\t            var item = {};\n\t            _this.pass(value, item);\n\t            itemSet.push(item);\n\t        });\n\t        items.push(itemSet[0]);\n\t    };\n\t    JsonSchemaGenerator.prototype.detectType = function (value) {\n\t        if (Array.isArray(value)) {\n\t            return 'array';\n\t        }\n\t        return typeof value;\n\t    };\n\t    return JsonSchemaGenerator;\n\t}());\n\texports.JsonSchemaGenerator = JsonSchemaGenerator;\n\tfunction generateSchema(text, mediaType) {\n\t    var generator = new JsonSchemaGenerator();\n\t    var obj = JSON.parse(text);\n\t    var schemaObject = generator.generateSchema(obj);\n\t    var schemaString = JSON.stringify(schemaObject, null, 2);\n\t    return schemaString;\n\t}\n\texports.generateSchema = generateSchema;\n\t\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(18);\n\tvar Atom = __webpack_require__(1);\n\tvar React = __webpack_require__(50);\n\tvar SpacePenViews = __webpack_require__(25);\n\tvar pathwatcher = __webpack_require__(56);\n\tvar extend = __webpack_require__(51);\n\tvar path = __webpack_require__(17);\n\tvar popsicle = __webpack_require__(52);\n\tvar AtomUtil = __webpack_require__(57);\n\tvar rp = __webpack_require__(23);\n\tvar Render = __webpack_require__(58);\n\tvar CompositeDisposable = Atom.CompositeDisposable;\n\tfunction template(str, replace, defaults) {\n\t    return str.replace(/\\{([^{}]+)\\}/g, function (match, key) {\n\t        if (replace && replace[key] != null) {\n\t            return replace[key];\n\t        }\n\t        if (defaults && defaults[key] != null) {\n\t            return defaults[key];\n\t        }\n\t        return '';\n\t    });\n\t}\n\t/**\n\t * Export the console view instance which provides rendering and live-updating.\n\t */\n\tvar RAMLConsoleView = (function (_super) {\n\t    __extends(RAMLConsoleView, _super);\n\t    function RAMLConsoleView(options) {\n\t        var _this = this;\n\t        _super.call(this);\n\t        this.loaded = false;\n\t        this.isAttached = false;\n\t        this.isParsing = false;\n\t        this.disposables = new CompositeDisposable();\n\t        this.pageState = {};\n\t        // Track files and editor watchers.\n\t        this.paths = {};\n\t        this.editors = {};\n\t        this.resolver = new ConsoleResolver(function (path) { return _this.readFileSync(path); });\n\t        this.state = extend({\n\t            view: {},\n\t            parameters: {},\n\t            headers: {},\n\t            uriParameters: {},\n\t            baseUriParameters: {},\n\t            queryParameters: {},\n\t            bodies: {}\n\t        }, options.state);\n\t        this.filename = options.filename;\n\t        this.editorId = options.editorId;\n\t        // Handle manually passed in RAML wrapper.\n\t        if (options.raml) {\n\t            this.raml = rp.expander.expandTraitsAndResourceTypes(options.raml);\n\t            this.project = options.raml.highLevel().lowLevel().unit().project().cloneWithResolver(this.resolver);\n\t            this.loaded = true;\n\t        }\n\t    }\n\t    /**\n\t     * Atom uses the `content` as the wrapper element.\n\t     */\n\t    RAMLConsoleView.content = function () {\n\t        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n\t    };\n\t    RAMLConsoleView.getUriForFilename = function (path) {\n\t        return 'raml-console://file/' + path;\n\t    };\n\t    RAMLConsoleView.getUriForEditor = function (editor) {\n\t        return 'raml-console://editor/' + editor.id;\n\t    };\n\t    RAMLConsoleView.prototype.attached = function () {\n\t        var _this = this;\n\t        if (this.isAttached) {\n\t            return;\n\t        }\n\t        this.render();\n\t        this.isAttached = true;\n\t        if (this.editorId) {\n\t            this.resolveEditor(this.editorId);\n\t        }\n\t        else if (this.filename) {\n\t            this.resolveFilename(this.filename);\n\t        }\n\t        this.disposables.add(atom.workspace.observeTextEditors(function (editor) {\n\t            var path = editor.getPath();\n\t            // Upgrade from file watching to editor watching.\n\t            if (_this.paths[path]) {\n\t                _this.watchEditor(editor);\n\t                _this.stopWatchingPath(path);\n\t            }\n\t        }));\n\t    };\n\t    RAMLConsoleView.prototype.resolveEditor = function (editorId) {\n\t        var _this = this;\n\t        var resolve = function () {\n\t            _this.editor = AtomUtil.getEditorById(editorId);\n\t            if (_this.editor) {\n\t                _this.trigger('title-changed');\n\t                _this.loadRAML();\n\t                return;\n\t            }\n\t            var view = _this.parents('.pane').view();\n\t            return view && view.destroyItem(_this);\n\t        };\n\t        if (atom.workspace) {\n\t            resolve();\n\t        }\n\t        else {\n\t            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.resolveFilename = function (filename) {\n\t        var _this = this;\n\t        var resolve = function () {\n\t            _this.file = new pathwatcher.File(filename);\n\t            _this.trigger('title-changed');\n\t            _this.loadRAML();\n\t        };\n\t        if (atom.workspace) {\n\t            resolve();\n\t        }\n\t        else {\n\t            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.readFileSync = function (path) {\n\t        var editor = AtomUtil.getEditorByPath(path);\n\t        var contents;\n\t        if (editor) {\n\t            contents = editor.getText();\n\t            this.watchEditor(editor);\n\t        }\n\t        else {\n\t            try {\n\t                contents = fs.readFileSync(path, 'utf8');\n\t            }\n\t            catch (err) {\n\t                if (err.code === 'ENOENT') {\n\t                    this.watchForFile(path);\n\t                    return;\n\t                }\n\t                throw err;\n\t            }\n\t            this.watchFile(path);\n\t        }\n\t        return contents;\n\t    };\n\t    RAMLConsoleView.prototype.watchEditor = function (editor) {\n\t        var _this = this;\n\t        var path = editor.getPath();\n\t        if (this.editors[path]) {\n\t            return;\n\t        }\n\t        var disposables = new CompositeDisposable();\n\t        this.editors[path] = disposables;\n\t        // Changes can be as simple as updating the cache.\n\t        disposables.add(editor.onDidStopChanging(function () {\n\t            _this.updateUnit(path, editor.getText());\n\t        }));\n\t        // Callback to dispose of listeners and force an update. This happens\n\t        // because the updated path or file may not be used by the RAML parser.\n\t        var cb = function () {\n\t            _this.stopWatchingEditor(path);\n\t            _this.updateUnit(path, _this.readFileSync(path));\n\t        };\n\t        disposables.add(editor.onDidDestroy(cb));\n\t        disposables.add(editor.onDidChangePath(cb));\n\t    };\n\t    RAMLConsoleView.prototype.getActiveEditor = function () {\n\t        return atom.workspace.getActiveTextEditor();\n\t    };\n\t    RAMLConsoleView.prototype.stopWatchingPath = function (path) {\n\t        var watcher = this.paths[path];\n\t        if (watcher) {\n\t            watcher.close();\n\t            delete this.paths[path];\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.stopWatchingEditor = function (path) {\n\t        var disposables = this.editors[path];\n\t        if (disposables) {\n\t            disposables.dispose();\n\t            delete this.editors[path];\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.watchFile = function (path) {\n\t        var _this = this;\n\t        if (this.paths[path]) {\n\t            return;\n\t        }\n\t        var watcher = pathwatcher.watch(path, function (event) {\n\t            if (event === 'change') {\n\t                _this.updateUnit(path, _this.readFileSync(path));\n\t            }\n\t            else {\n\t                _this.stopWatchingPath(path);\n\t                _this.deleteUnit(path);\n\t            }\n\t        });\n\t        this.paths[path] = watcher;\n\t    };\n\t    RAMLConsoleView.prototype.watchForFile = function (filename) {\n\t        var _this = this;\n\t        this.watchForPath(filename, function () {\n\t            _this.updateUnit(filename, _this.readFileSync(filename));\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.watchForPath = function (filename, cb) {\n\t        var _this = this;\n\t        var parent = path.dirname(filename);\n\t        var watch = function () {\n\t            var watcher = pathwatcher.watch(parent, function (event, newFilename) {\n\t                if (event === 'change') {\n\t                    if (newFilename === filename) {\n\t                        _this.stopWatchingPath(parent);\n\t                        cb();\n\t                    }\n\t                }\n\t                else {\n\t                    _this.watchForPath(parent, watch);\n\t                    _this.stopWatchingPath(parent);\n\t                }\n\t            });\n\t            _this.paths[parent] = watcher;\n\t        };\n\t        try {\n\t            watch();\n\t        }\n\t        catch (e) {\n\t            this.watchForPath(parent, watch);\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.stopWatching = function () {\n\t        var _this = this;\n\t        Object.keys(this.paths).forEach(function (path) {\n\t            _this.stopWatchingPath(path);\n\t        });\n\t        Object.keys(this.editors).forEach(function (path) {\n\t            _this.stopWatchingEditor(path);\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.navigate = function (state) {\n\t        var view = typeof state === 'string' ? { id: state } : extend(this.state.view, state);\n\t        // Reset `pageState` before re-render.\n\t        this.pageState = {};\n\t        this.setState({ view: view }, function () {\n\t            // Scroll the view to the top, as if we'd just navigated.\n\t            document.getElementById('raml-console-view').scrollTop = 0;\n\t        });\n\t        this.abortRequest();\n\t    };\n\t    /**\n\t     * Render the UI with React.\n\t     */\n\t    RAMLConsoleView.prototype.render = function (cb) {\n\t        var _this = this;\n\t        var props = {\n\t            state: this.state,\n\t            raml: this.raml,\n\t            loaded: this.loaded,\n\t            errors: this.errors,\n\t            pageState: this.pageState,\n\t            setParameter: function (group, name, value) { return _this.setParameter(group, name, value); },\n\t            setState: function (state) { return _this.setState(state); },\n\t            navigate: function (view) { return _this.navigate(view); },\n\t            execRequest: function () { return _this.execRequest(); }\n\t        };\n\t        React.render(React.createElement(Render.Console, props), this.element, cb);\n\t    };\n\t    RAMLConsoleView.prototype.execRequest = function () {\n\t        var _this = this;\n\t        this.abortRequest();\n\t        var baseUri = this.raml.baseUri();\n\t        var node = this.raml.highLevel().findById(this.state.view.id).wrapperNode();\n\t        // Remove old request errors.\n\t        this.setPageState({ requestError: undefined });\n\t        if (baseUri == null) {\n\t            this.setPageState({ requestError: 'Unable to execute request, `baseUri` is missing' });\n\t            return;\n\t        }\n\t        var securityScheme = this.state.securityScheme ?\n\t            this.raml.securitySchemes().filter(function (x) { return x.name() === _this.state.securityScheme; })[0] : undefined;\n\t        var defaultBaseUriParameters = this.toDefaultParameters(this.raml.allBaseUriParameters());\n\t        var defaultUriParameters = this.toDefaultParameters(node.parent().allUriParameters());\n\t        var methodHeaders = node.headers();\n\t        var methodQuery = node.queryParameters();\n\t        var url = template(baseUri.value() || '', this.state.baseUriParameters, defaultBaseUriParameters).replace(/\\/$/, '');\n\t        var path = template(node.parent().completeRelativeUri(), this.state.uriParameters, defaultUriParameters);\n\t        if (securityScheme) {\n\t            methodQuery = methodQuery.concat(securityScheme.describedBy().queryParameters());\n\t            methodHeaders = methodHeaders.concat(securityScheme.describedBy().headers());\n\t        }\n\t        var requestOptions = {\n\t            url: url + path,\n\t            method: node.method(),\n\t            headers: extend({ 'User-Agent': 'API Workbench: Console' }, this.usedParameters(this.state.headers, methodHeaders)),\n\t            query: this.usedParameters(this.state.queryParameters, methodQuery),\n\t            body: this.state.bodies[this.state.body],\n\t            use: [\n\t                popsicle.plugins.headers(),\n\t                popsicle.plugins.unzip(),\n\t                popsicle.plugins.concatStream('string')\n\t            ]\n\t        };\n\t        if (this.state.body && requestOptions.headers && !requestOptions.headers['Content-Type']) {\n\t            requestOptions.headers['Content-Type'] = this.state.body;\n\t        }\n\t        this.request = popsicle.request(requestOptions);\n\t        this.request.progress(function () {\n\t            _this.setPageState({ requestProgress: _this.request.completed });\n\t        });\n\t        // Handle request completion.\n\t        this.request.then(function (response) {\n\t            _this.setPageState({ requestResponse: response.toJSON(), requestProgress: undefined });\n\t            _this.request = undefined;\n\t        }, function (error) {\n\t            _this.setPageState({ requestError: error.message, requestProgress: undefined });\n\t            _this.request = undefined;\n\t        });\n\t    };\n\t    RAMLConsoleView.prototype.toDefaultParameters = function (parameters) {\n\t        var params = {};\n\t        parameters.forEach(function (parameter) {\n\t            if (parameter.default()) {\n\t                params[parameter.name()] = parameter.default();\n\t            }\n\t        });\n\t        return params;\n\t    };\n\t    RAMLConsoleView.prototype.usedParameters = function (state, parameters) {\n\t        var params = {};\n\t        parameters.forEach(function (param) {\n\t            if (state[param.name()]) {\n\t                params[param.name()] = state[param.name()];\n\t            }\n\t        });\n\t        return params;\n\t    };\n\t    RAMLConsoleView.prototype.abortRequest = function () {\n\t        if (this.request) {\n\t            this.request.abort();\n\t            this.request = undefined;\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.updateRAML = function () {\n\t        this.isParsing = true;\n\t        try {\n\t            var baseUnit = this.getUnit(this.getFilename());\n\t            var errors = baseUnit.ast().errors();\n\t            this.errors = errors;\n\t            if (!errors.length) {\n\t                var originalRoot = baseUnit.highLevel().asElement().wrapperNode();\n\t                this.raml = rp.expander.expandTraitsAndResourceTypes(originalRoot);\n\t            }\n\t        }\n\t        catch (error) {\n\t            this.raml = undefined;\n\t            this.errors = [error];\n\t        }\n\t        finally {\n\t            this.loaded = true;\n\t            this.isParsing = false;\n\t            this.render();\n\t            this.trigger('title-changed');\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.loadRAML = function () {\n\t        // Reset all watchers, consider it a fresh parse.\n\t        this.stopWatching();\n\t        this.project = rp.project.createProject(path.dirname(this.getFilename()), this.resolver);\n\t        this.updateRAML();\n\t    };\n\t    RAMLConsoleView.prototype.serialize = function () {\n\t        return {\n\t            deserializer: 'RAMLConsoleView',\n\t            filename: this.getFilename(),\n\t            state: this.state\n\t        };\n\t    };\n\t    RAMLConsoleView.prototype.getFilename = function () {\n\t        if (this.file) {\n\t            return this.file.getPath();\n\t        }\n\t        if (this.editor) {\n\t            return this.editor.getPath();\n\t        }\n\t    };\n\t    RAMLConsoleView.prototype.getTitle = function () {\n\t        var name = 'RAML';\n\t        if (this.raml && this.raml.title() != null) {\n\t            name = this.raml.title();\n\t        }\n\t        else if (this.file) {\n\t            name = path.basename(this.getFilename());\n\t        }\n\t        else if (this.editor) {\n\t            name = this.editor.getTitle();\n\t        }\n\t        return name + ' Console';\n\t    };\n\t    RAMLConsoleView.prototype.destroy = function () {\n\t        this.stopWatching();\n\t        this.disposables.dispose();\n\t        React.unmountComponentAtNode(this.element);\n\t    };\n\t    RAMLConsoleView.prototype.setState = function (state, cb) {\n\t        this.state = extend(this.state, state);\n\t        this.render(cb);\n\t    };\n\t    RAMLConsoleView.prototype.setPageState = function (pageState, cb) {\n\t        this.pageState = extend(this.pageState, pageState);\n\t        this.render(cb);\n\t    };\n\t    RAMLConsoleView.prototype.setParameter = function (group, name, value) {\n\t        // TODO(blakeembrey): Use computed properties on TypeScript 1.5+.\n\t        var state = {};\n\t        var groupState = extend(this.state[group]);\n\t        // Remove falsy values from view.\n\t        if (value) {\n\t            groupState[name] = value;\n\t        }\n\t        else {\n\t            delete groupState[name];\n\t        }\n\t        state[group] = groupState;\n\t        this.setState(state);\n\t    };\n\t    RAMLConsoleView.prototype.getURI = function () {\n\t        return RAMLConsoleView.getUriForFilename(this.getFilename());\n\t    };\n\t    RAMLConsoleView.prototype.getUnit = function (path) {\n\t        return this.project.unit(path, true);\n\t    };\n\t    RAMLConsoleView.prototype.deleteUnit = function (path) {\n\t        this.project.deleteUnit(path);\n\t        this.updateRAML();\n\t    };\n\t    RAMLConsoleView.prototype.updateUnit = function (path, contents) {\n\t        this.getUnit(path).updateContent(this.readFileSync(path));\n\t        this.updateRAML();\n\t    };\n\t    return RAMLConsoleView;\n\t}(SpacePenViews.ScrollView));\n\texports.RAMLConsoleView = RAMLConsoleView;\n\tvar FSResolverImpl = (function () {\n\t    function FSResolverImpl() {\n\t    }\n\t    FSResolverImpl.prototype.content = function (path) {\n\t        if (!fs.existsSync(path)) {\n\t            return null;\n\t        }\n\t        try {\n\t            return fs.readFileSync(path).toString();\n\t        }\n\t        catch (e) {\n\t            return null;\n\t        }\n\t    };\n\t    FSResolverImpl.prototype.list = function (path) {\n\t        return fs.readdirSync(path);\n\t    };\n\t    FSResolverImpl.prototype.contentAsync = function (path) {\n\t        return new Promise(function (resolve, reject) {\n\t            fs.readFile(path, function (err, data) {\n\t                if (err != null) {\n\t                    return reject(err);\n\t                }\n\t                var content = data.toString();\n\t                resolve(content);\n\t            });\n\t        });\n\t    };\n\t    FSResolverImpl.prototype.listAsync = function (path) {\n\t        return new Promise(function (reject, resolve) {\n\t            fs.readdir(path, function (err, files) {\n\t                if (err != null) {\n\t                    return reject(err);\n\t                }\n\t                resolve(files);\n\t            });\n\t        });\n\t    };\n\t    return FSResolverImpl;\n\t}());\n\texports.FSResolverImpl = FSResolverImpl;\n\t/**\n\t * Create a console resolver class.\n\t */\n\tvar ConsoleResolver = (function (_super) {\n\t    __extends(ConsoleResolver, _super);\n\t    function ConsoleResolver(readFileSync) {\n\t        _super.call(this);\n\t        this.readFileSync = readFileSync;\n\t    }\n\t    ConsoleResolver.prototype.content = function (path) {\n\t        return this.readFileSync(path);\n\t    };\n\t    return ConsoleResolver;\n\t}(FSResolverImpl));\n\t\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(19);\n\tvar SC = __webpack_require__(30);\n\tvar path = __webpack_require__(17);\n\tvar CompositeDisposable = UI.CompositeDisposable;\n\tvar hl = __webpack_require__(23);\n\tvar details = __webpack_require__(60);\n\tvar schemaUI = __webpack_require__(61);\n\tvar editorTools = __webpack_require__(5);\n\tvar dialogs = __webpack_require__(53);\n\tvar fs = __webpack_require__(18);\n\tvar universeHelpers = hl.universeHelpers;\n\tvar RamlDetails = (function (_super) {\n\t    __extends(RamlDetails, _super);\n\t    function RamlDetails(allowStructureChanges) {\n\t        if (allowStructureChanges === void 0) { allowStructureChanges = true; }\n\t        _super.call(this);\n\t        this.allowStructureChanges = allowStructureChanges;\n\t        this.disposables = new CompositeDisposable();\n\t        this.addClass('raml-details');\n\t    }\n\t    RamlDetails.prototype.getTitle = function () {\n\t        return \"Details\";\n\t    };\n\t    RamlDetails.prototype.attached = function () {\n\t        try {\n\t            this.element.innerHTML = \"<div></div>\";\n\t            this._children = [];\n\t            this.container = UI.vc();\n\t            this.addChild(this.container);\n\t            this.ui().appendChild(this.container.ui());\n\t            _super.prototype.attached.call(this);\n\t        }\n\t        catch (e) {\n\t        }\n\t    };\n\t    RamlDetails.prototype.setSchema = function (node) {\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        var key = node.attr(\"key\"), value = node.attr(\"value\");\n\t        var ssto = 12;\n\t        if (value == null) {\n\t            this.container.clear();\n\t            var errLabel = UI.h3(\"Selected schema has incorrect node so cannot be displayed.\");\n\t            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n\t            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n\t            this.container.addChild(errLabel);\n\t            return;\n\t        }\n\t        //FIXME\n\t        setInterval(function () {\n\t            if (ssto++ != 12)\n\t                return;\n\t            if (value) {\n\t                value.setValue(schemaText);\n\t                schemaUI._updatePreview(treeView, schemaText);\n\t            }\n\t        }, 100);\n\t        var schemaText = value.value();\n\t        this.container.clear();\n\t        var textView = dialogs.smallEditor(function (e, v) {\n\t            if (value.lowLevel().includePath()) {\n\t                try {\n\t                    var sm = path.dirname(node.lowLevel().unit().absolutePath());\n\t                    var relative = path.resolve(sm, value.lowLevel().includePath());\n\t                    if (!value.lowLevel().includeReference()) {\n\t                        fs.writeFileSync(relative, v);\n\t                    }\n\t                }\n\t                catch (e) {\n\t                    console.log(e);\n\t                }\n\t            }\n\t            // if (v!=schemaText) textView.setText(schemaText); // read-only variant\n\t            schemaText = v;\n\t            ssto = 0;\n\t        });\n\t        dialogs._updateEditor(textView, schemaText);\n\t        var treeView = schemaUI._schemaPreview();\n\t        schemaUI._updatePreview(treeView, schemaText);\n\t        var schemaTab = new UI.TabFolder();\n\t        schemaTab.add(\"Tree view\", UI.Icon.GIT_MERGE, treeView);\n\t        schemaTab.add(\"Text view\", UI.Icon.FILE_TEXT, textView);\n\t        this.container.addChild(schemaTab);\n\t        window['detailsnode'] = node;\n\t        if (details.oldItem) {\n\t            details.oldItem.detach();\n\t            details.oldItem = null;\n\t        }\n\t        this.schemaView = textView;\n\t        this.wasSchema = true;\n\t    };\n\t    RamlDetails.prototype.setResource = function (node) {\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        this.wasSchema = false;\n\t        var hnode = node;\n\t        window[\"detailsnode\"] = hnode;\n\t        if (hnode == null || hnode.lowLevel() == null)\n\t            this.displayEmpty();\n\t        console.log(\"Displaying details for node \" + hnode.name());\n\t        details.updateDetailsPanel(hnode, this.container, true);\n\t    };\n\t    RamlDetails.prototype.update = function () {\n\t        if (window[\"detailsnode\"]) {\n\t            this.setResource(window[\"detailsnode\"]);\n\t        }\n\t    };\n\t    RamlDetails.prototype.displayEmpty = function () {\n\t        this.container.clear();\n\t        if (!editorTools.aquireManager().ast) {\n\t            this.container.addChild(UI.h3(\"Our API is fabulously empty\").margin(8, 8, 20, 8));\n\t            var create = new UI.Button(\"Create new API\", UI.ButtonSizes.LARGE, UI.ButtonHighlights.SUCCESS, UI.Icon.REPO_CLONE, function () { return dialogs.newApi(); });\n\t            create.margin(8, 8, 20, 0);\n\t            this.container.addChild(create);\n\t        }\n\t    };\n\t    RamlDetails.prototype.destroy = function () {\n\t        editorTools.aquireManager()._details = null;\n\t        this.disposables.dispose();\n\t        this._node = null;\n\t        this.container.dispose();\n\t        this.container = null;\n\t        window[\"detailsnode\"] = null;\n\t        this._children = [];\n\t        if (details.oldItem) {\n\t            details.oldItem.detach();\n\t        }\n\t        if (this.wasSchema) {\n\t            this.schemaView.dispose();\n\t            this.schemaView = null;\n\t        }\n\t        details.oldItem = null;\n\t    };\n\t    RamlDetails.prototype.show = function (node) {\n\t        if (this._node == node)\n\t            return;\n\t        this._node = node;\n\t        try {\n\t            if (isSchema(node))\n\t                this.setSchema(this._node);\n\t            else\n\t                this.setResource(node);\n\t        }\n\t        catch (e) { }\n\t    };\n\t    return RamlDetails;\n\t}(SC.Scrollable));\n\texports.RamlDetails = RamlDetails;\n\tfunction isSchema(p) {\n\t    if (!p) {\n\t        return false;\n\t    }\n\t    return universeHelpers.isGlobalSchemaType(p.definition());\n\t}\n\t\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"emissary\");\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"raml-outline\");\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xmldom\");\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"yaml-ast-parser\");\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react\");\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"xtend\");\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"popsicle\");\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar UI = __webpack_require__(19);\n\tvar khttp = __webpack_require__(63);\n\t/**\n\t * Created by kor on 13/05/15.\n\t */\n\tvar rp = __webpack_require__(23);\n\tvar path = __webpack_require__(17);\n\tvar defs = rp.ds;\n\tvar stubs = rp.stubs;\n\tvar services = defs;\n\tvar search = rp.search;\n\tvar fs = __webpack_require__(18);\n\tvar assistUtils = __webpack_require__(9);\n\tvar details2 = __webpack_require__(72);\n\tvar details = __webpack_require__(60);\n\tvar editorTools = __webpack_require__(5);\n\tvar schemaUI = __webpack_require__(61);\n\tvar pair = __webpack_require__(73);\n\tvar universeModule = rp.universes;\n\tvar universeHelpers = rp.universeHelpers;\n\tvar _dialogPanels = [];\n\tvar remote = __webpack_require__(64);\n\tvar dialog;\n\tfunction getDialog() {\n\t    if (!dialog) {\n\t        try {\n\t            dialog = remote.require(\"electron\").dialog;\n\t        }\n\t        catch (e) {\n\t            console.log(e.message);\n\t        }\n\t    }\n\t    return dialog;\n\t}\n\tdialog = getDialog();\n\tfunction showError(message, details) {\n\t    getDialog().showMessageBox(remote.getCurrentWindow(), { type: 'error', buttons: ['Okay'], title: 'Error', message: message, detail: details });\n\t}\n\texports.showError = showError;\n\tvar _methodDescriptions = null;\n\tfunction getMethodDescriptions() {\n\t    if (!_methodDescriptions) {\n\t        _methodDescriptions = Object.create(null);\n\t        var methodsProperty = editorTools.aquireManager().ast.definition().property(universeModule.Universe10.Api.properties.resources.name)\n\t            .range().property(universeModule.Universe10.ResourceBase.properties.methods.name);\n\t        var list = methodsProperty.enumOptions();\n\t        khttp.methods.filter(function (x) { return list.indexOf(x.method.toLowerCase()) > -1; }).forEach(function (method) {\n\t            var desc = method.description.trim().match(/^\\\"(.*)\\\"$/)[1];\n\t            _methodDescriptions[method.method.toLowerCase()] = desc ? desc : method.description;\n\t        });\n\t    }\n\t    return _methodDescriptions;\n\t}\n\tvar _statusCodeDescriptions = null;\n\tfunction getStatusCodeDescriptions() {\n\t    if (!_statusCodeDescriptions) {\n\t        _statusCodeDescriptions = Object.create(null);\n\t        khttp.statusCodes.forEach(function (code) {\n\t            var m, desc = code.description.trim();\n\t            if (m = desc.match(/^\\\"(.*)\\\"/))\n\t                desc = m[1];\n\t            _statusCodeDescriptions[code.code] = desc;\n\t        });\n\t        _statusCodeDescriptions['7xx'] = \"is for developer errors.\";\n\t    }\n\t    return _statusCodeDescriptions;\n\t}\n\texports.getStatusCodeDescriptions = getStatusCodeDescriptions;\n\tfunction newApi() {\n\t    var title = \"\", version = \"\", baseUri = \"\", sample = true, raml1 = true;\n\t    var tfTitle = new UI.TextField(\"API Title*\", title, function (e, v) { return title = v; });\n\t    var tfVersion = new UI.TextField(\"Version\", version, function (e, v) { return version = v; });\n\t    var tfBaseURI = new UI.TextField(\"Base URI\", baseUri, function (e, v) { return baseUri = v; });\n\t    tfTitle.setTabIndex(100);\n\t    tfTitle.margin(0, 0, 8, 0);\n\t    tfVersion.setTabIndex(101);\n\t    tfVersion.margin(0, 0, 8, 0);\n\t    tfBaseURI.setTabIndex(102);\n\t    tfBaseURI.margin(0, 0, 8, 0);\n\t    var cbSample = new UI.CheckBox(\"Create sample resource\", null, function (e, v) { return sample = v; });\n\t    cbSample.setValue(sample);\n\t    var cbRaml1 = new UI.CheckBox(\"Generate 1.0 model\", null, function (e, v) { return raml1 = v; });\n\t    cbRaml1.setValue(raml1);\n\t    var panel = UI.section(\"Create new API\", UI.Icon.DASHBOARD, false, false, tfTitle, tfVersion, tfBaseURI, UI.hc(cbSample, cbRaml1).margin(0, 0, 12, 12));\n\t    _dialog(panel, function () {\n\t        if (title == '') {\n\t            showError(\"Cannot create API\", \"Title must not be empty\");\n\t            return false;\n\t        }\n\t        editorTools.aquireManager().setText(assistUtils.createRAMLFile(title, version, baseUri, sample, raml1));\n\t        return true;\n\t    }, tfTitle)(this);\n\t    tfTitle.getActualField().ui().focus();\n\t}\n\texports.newApi = newApi;\n\tvar typeValues = function (parent) {\n\t    var isSchema = false;\n\t    var tp = parent.definition().universe().type(universeModule.Universe10.TypeDeclaration.name);\n\t    if (!tp) {\n\t        isSchema = true;\n\t        tp = parent.definition().universe().type(universeModule.Universe08.BodyLike.name);\n\t    }\n\t    var sh = tp.property(universeModule.Universe10.TypeDeclaration.properties.schema.name);\n\t    var types = [];\n\t    if (sh) {\n\t        types = search.enumValues(sh, parent);\n\t    }\n\t    return { isSchema: isSchema, types: types };\n\t};\n\tfunction newMethod(parent, method) {\n\t    var mdesc = getMethodDescriptions();\n\t    var cdesc = getStatusCodeDescriptions();\n\t    var NO_RESPONCE = \"No response\";\n\t    var NO_RESPONCE_BT = \"No response body type\";\n\t    var code = null, bodyType = null;\n\t    if (method == null)\n\t        method = \"get\";\n\t    var mdescLabel = new UI.LabelField();\n\t    var cdescLabel = new UI.LabelField();\n\t    [mdescLabel, cdescLabel].forEach(function (x) { return x.addClass('wizard-description'); });\n\t    mdescLabel.getActualField().margin(0, 0, 18, 8);\n\t    cdescLabel.getActualField().margin(0, 0, 8, 8);\n\t    var methodSelect = new UI.SelectField(\"Method:\", function (e, v) {\n\t        method = v;\n\t        mdescLabel.setText(\"Method \" + v + \" \" + mdesc[v]);\n\t    }, null);\n\t    methodSelect.getActualField().setOptions(Object.keys(mdesc));\n\t    methodSelect.getActualField().setValue(method, true);\n\t    var responseSelect = new UI.SelectField(\"Status code:\", function (e, v) {\n\t        if (v == NO_RESPONCE) {\n\t            v = null;\n\t            responseTypeSelect.getActualField().setValue(NO_RESPONCE_BT);\n\t        }\n\t        code = v;\n\t        responseTypeSelect.setDisabled(v == null);\n\t        cdescLabel.setText(v ? \"Status code \" + v + \" \" + cdesc[v] : '');\n\t    }, null);\n\t    responseSelect.getActualField().setOptions([NO_RESPONCE].concat(Object.keys(cdesc)));\n\t    var responseTypeSelect = new UI.SelectField(\"Generate default response with media type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT) {\n\t            v = null;\n\t            typeOfValue.setDisabled(true);\n\t        }\n\t        else\n\t            typeOfValue.setDisabled(false);\n\t        bodyType = v;\n\t    }, null);\n\t    responseTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n\t    responseTypeSelect.setDisabled(true);\n\t    responseTypeSelect.margin(0, 0, 0, 12);\n\t    var realBodyType = null;\n\t    var bodyTypeSelect = new UI.SelectField(\"Generate default body with media type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT) {\n\t            v = null;\n\t            bodyTypeOfValue.setDisabled(true);\n\t        }\n\t        else\n\t            bodyTypeOfValue.setDisabled(false);\n\t        realBodyType = v;\n\t    }, null);\n\t    bodyTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n\t    bodyTypeSelect.margin(0, 0, 0, 12);\n\t    var actualType = null;\n\t    var bodyTypeString = null;\n\t    var typeOfValue = new UI.SelectField(\"Generate default response body with type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT)\n\t            v = null;\n\t        actualType = v;\n\t    }, null);\n\t    typeOfValue.setDisabled(true);\n\t    typeOfValue.margin(0, 0, 0, 12);\n\t    var __ret = typeValues(parent);\n\t    var isSchema = __ret.isSchema;\n\t    var types = __ret.types;\n\t    if (types) {\n\t        types = [\"\"].concat(types);\n\t        typeOfValue.getActualField().setOptions(types);\n\t    }\n\t    var bodyTypeOfValue = new UI.SelectField(\"Generate default body with type:\", function (e, v) {\n\t        if (v == NO_RESPONCE_BT)\n\t            v = null;\n\t        bodyTypeString = v;\n\t    }, null);\n\t    bodyTypeOfValue.setDisabled(true);\n\t    bodyTypeOfValue.margin(0, 0, 0, 12);\n\t    var isSchema = __ret.isSchema;\n\t    var types = __ret.types;\n\t    if (types) {\n\t        types = [\"\"].concat(types);\n\t        bodyTypeOfValue.getActualField().setOptions(types);\n\t    }\n\t    var responseSection = UI.section(\"\");\n\t    responseSection.addChild(UI.h3(\"Body\"));\n\t    responseSection.addChild(bodyTypeSelect);\n\t    responseSection.addChild(bodyTypeOfValue);\n\t    responseSection.addChild(UI.h3(\"Response\"));\n\t    responseSection.addChild(responseSelect);\n\t    responseSection.addChild(cdescLabel);\n\t    responseSection.addChild(responseTypeSelect);\n\t    responseSection.addChild(typeOfValue);\n\t    responseSection.ui();\n\t    var panel = UI.section(\"Creating a new method\", UI.Icon.CODE, false, false, methodSelect, mdescLabel, responseSection);\n\t    var __ret = typeValues(parent);\n\t    //panel.addChild(typeOfValue)\n\t    _dialog(panel, function () {\n\t        var oldNode = parent.elementsOfKind('methods').filter(function (el) { return (el.attr('method').value() == method); })[0];\n\t        if (oldNode) {\n\t            showError(\"Method \" + method + \" already exists\", \"Node contents will be overwritten\");\n\t            parent.remove(oldNode);\n\t        }\n\t        var methodNode = stubs.createMethodStub(parent, method);\n\t        if (realBodyType) {\n\t            var bodyNode = stubs.createBodyStub(methodNode, realBodyType);\n\t            if (bodyTypeString) {\n\t                if (isSchema) {\n\t                    bodyNode.attrOrCreate(\"schema\").setValue(bodyTypeString);\n\t                }\n\t                else\n\t                    bodyNode.attrOrCreate(\"type\").setValue(bodyTypeString);\n\t            }\n\t            methodNode.add(bodyNode);\n\t        }\n\t        if (code) {\n\t            var codeNode = stubs.createResponseStub(methodNode, code);\n\t            methodNode.add(codeNode);\n\t            if (bodyType) {\n\t                var bodyNode = stubs.createBodyStub(codeNode, bodyType);\n\t                if (actualType) {\n\t                    if (isSchema) {\n\t                        bodyNode.attrOrCreate(\"schema\").setValue(actualType);\n\t                    }\n\t                    else\n\t                        bodyNode.attrOrCreate(\"type\").setValue(actualType);\n\t                }\n\t                codeNode.add(bodyNode);\n\t            }\n\t        }\n\t        parent.add(methodNode);\n\t        editorTools.updateAndSelect(methodNode);\n\t        return true;\n\t    })(this);\n\t}\n\texports.newMethod = newMethod;\n\tfunction getStringValue(x) {\n\t    if (typeof x === \"object\")\n\t        return x.valueName();\n\t    else\n\t        return x;\n\t}\n\texports.getStringValue = getStringValue;\n\tfunction typeEditDialog(name, value, node, onDone) {\n\t    var typePanel = UI.vc();\n\t    typePanel.margin(8, 8, 20, 8);\n\t    var typeProperty = node.definition().property(name);\n\t    var toPropagate = svMap(node, name);\n\t    var typeList = editorTools.aquireManager().ast.elementsOfKind(\"resourceType\").map(function (x) { return x.name(); });\n\t    var typeName = getStringValue(value);\n\t    var select = new UI.SelectField('Type: ', function (e, v) {\n\t        if (v == EMPTY_VALUE) {\n\t            value = \"\";\n\t            typePanel.clear();\n\t            typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n\t            return;\n\t        }\n\t        value = rp.utils.genStructuredValue(v, node, typeProperty);\n\t        var typeNode = ((typeof value) === \"object\") ? value.toHighLevel(editorTools.aquireManager().ast) : null;\n\t        propagateValues(typeNode, toPropagate);\n\t        details.updateDetailsPanel(typeNode, typePanel);\n\t        if (typeNode && typeNode.definition().allProperties().length == 0) {\n\t            value = v;\n\t        }\n\t    });\n\t    var EMPTY_VALUE = \"(no value)\";\n\t    select.getActualField().setOptions([EMPTY_VALUE].concat(typeList));\n\t    select.setPercentWidth(100);\n\t    if (typeList.indexOf(typeName) < 0) {\n\t        select.getActualField().setValue(EMPTY_VALUE);\n\t        if (typeName != \"\")\n\t            typePanel.addChild(UI.label(\"Type `\" + typeName + \"` does not exists\", null, UI.TextClasses.ERROR).setStyle(\"display\", \"block\"));\n\t        typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n\t    }\n\t    else\n\t        select.getActualField().setValue(typeName, true);\n\t    var panel = UI.section(\"Editing type value `\" + name + '`:', UI.Icon.CIRCUIT_BOARD, null, null, select, typePanel);\n\t    return _dialog(panel, function () { onDone(value); return true; });\n\t}\n\texports.typeEditDialog = typeEditDialog;\n\tfunction svMap(node, attr) {\n\t    try {\n\t        var map = new pair.Map();\n\t        var values = node.attributes(attr).map(function (x) { return x.value(); }).filter(function (x) { return typeof x === \"object\"; });\n\t        values.forEach(function (val) { return val.lowLevel().children().forEach(function (c) { return map.set(c.key(), c.value()); }); });\n\t        return map;\n\t    }\n\t    catch (e) {\n\t        return null;\n\t    }\n\t}\n\tfunction propagateValues(node, map) {\n\t    if (!node || !map)\n\t        return;\n\t    map.pairs().forEach(function (pair) {\n\t        if (node.definition().property(pair.key))\n\t            node.attrOrCreate(pair.key).setValue(pair.value);\n\t    });\n\t}\n\tfunction getResourceParent(node) {\n\t    if (!node || !node.property())\n\t        return null;\n\t    if (universeHelpers.isResourcesProperty(node.property()))\n\t        return node;\n\t    return getResourceParent(node.parent());\n\t}\n\texports.getResourceParent = getResourceParent;\n\tfunction enumEditDialog(name, value, onDone) {\n\t    var _cp = {\n\t        elements: function (model) { return model; },\n\t        init: function (viewer) { },\n\t        dispose: function () { }\n\t    };\n\t    var renderer = {\n\t        render: function (model) { return UI.hc(UI.label(model, UI.Icon.GIT_COMMIT), UI.a(\"\", function (e) {\n\t            value = value.filter(function (x) { return x != e.id(); });\n\t            list.remove(e.id());\n\t        }, UI.Icon.TRASHCAN).pad(8, 8).setId(model)).addClass(\"outline\"); }\n\t    };\n\t    var list = new UI.ListView(_cp, renderer);\n\t    list.setBasicLabelFunction(function (x) { return x; });\n\t    list.setInput(value, true);\n\t    var text = UI.texfField(\"\", \"\", function (x) { return x; }).margin(0, 0, 4, 4);\n\t    text.addKeyPressListener(function (i, e) {\n\t        if (e.keyCode != 13)\n\t            return;\n\t        var b = i.getBinding();\n\t        var newValue = b.get();\n\t        b.set(\"\");\n\t        value.push(newValue);\n\t        list.setInput(value, true);\n\t    });\n\t    var panel = UI.section(\"Editing enum value `\" + name + '`:', UI.Icon.LIST_UNORDERED, null, null, UI.h3(\"List of elements in enum:\").margin(0, 0, 20, 0), list.margin(20, 20), UI.h3(\"Add new element:\").margin(0, 0, 20, 0), text);\n\t    return _dialog(panel, function () { onDone(value); return true; }, text); //\n\t}\n\texports.enumEditDialog = enumEditDialog;\n\tfunction calculatesParentURIPath(resource) {\n\t    var result = resource.attrValue(\"relativeUri\");\n\t    if (!result)\n\t        return null;\n\t    var current = getResourceParent(resource.parent());\n\t    while (current) {\n\t        var segment = current.attrValue(\"relativeUri\");\n\t        if (!segment)\n\t            return null;\n\t        result = segment + result;\n\t        current = getResourceParent(current.parent());\n\t    }\n\t    return result;\n\t}\n\tfunction newResource(parent) {\n\t    var uri = \"/\";\n\t    var uriLable = \"\";\n\t    var resourceParent = getResourceParent(parent);\n\t    var parentsPath = null;\n\t    if (resourceParent) {\n\t        parentsPath = calculatesParentURIPath(resourceParent);\n\t        if (parentsPath) {\n\t            uriLable = parentsPath;\n\t        }\n\t    }\n\t    var uriTF = uriTF = new UI.TextField(uriLable, uri, function (e, v) {\n\t        uri = v;\n\t    });\n\t    uriTF.margin(0, 0, 6, 12);\n\t    var methods = {};\n\t    var methodsPanel = UI.vc().margin(0, 0, 0, 12);\n\t    Object.keys(getMethodDescriptions())\n\t        .forEach(function (val) {\n\t        var ch = new UI.CheckBox(val, null, function (x) {\n\t            if (methods[val]) {\n\t                delete methods[val];\n\t            }\n\t            else {\n\t                methods[val] = x;\n\t            }\n\t        }).addClass(\"checkbox-group\");\n\t        var hcp = UI.vc().margin(0, 0, 15, 0);\n\t        hcp.addChild(ch);\n\t        var desc = val + \":\" + getMethodDescriptions()[val];\n\t        methodsPanel.addChild(UI.vc(hcp));\n\t        var label = UI.label(desc, UI.Icon.NONE, UI.TextClasses.SUBTLE).margin(5, 10, -4, 0);\n\t        methodsPanel.addChild(label);\n\t    });\n\t    var node = stubs.createResourceStub(parent, uri);\n\t    var resourceTypeProp = UI.select(\"type\");\n\t    var sm = search.globalDeclarations(parent).filter(function (x) { return universeHelpers.isResourceTypeType(x.definition()) && !x.definition().getAdapter(services.RAMLService).isUserDefined(); });\n\t    var options = sm.map(function (x) { return rp.search.qName(x, parent); });\n\t    var options = [\"\"].concat(options);\n\t    resourceTypeProp.setOptions(options);\n\t    //var resourceTypeProp = details.property2(node, \"type\");\n\t    var panel = UI.section(\"Creating a new resource\", UI.Icon.BOOK, false, false);\n\t    panel.addChild(UI.label(\"New resource URI:\"));\n\t    panel.addChild(uriTF);\n\t    panel.addChild(UI.label(\"Type:\"));\n\t    panel.addChild(resourceTypeProp);\n\t    panel.addChild(UI.label(\"Add additional methods:\").margin(0, 0, 18, 6));\n\t    panel.addChild(methodsPanel);\n\t    _dialog(panel, function () {\n\t        if (uri.indexOf('/') != 0)\n\t            return false;\n\t        node.attrOrCreate(\"relativeUri\").setValue(uri);\n\t        Object.keys(methods).filter(function (x) { return methods[x]; }).forEach(function (method) {\n\t            var stub = stubs.createMethodStub(node, method);\n\t            stub.attrOrCreate(\"method\").setValue(method);\n\t            node.add(stub);\n\t        });\n\t        var vl = resourceTypeProp.getValue();\n\t        if (vl) {\n\t            node.attrOrCreate(\"type\").setValue(vl);\n\t        }\n\t        parent.add(node);\n\t        editorTools.updateAndSelect(node);\n\t        return true;\n\t    }, uriTF, true)(this);\n\t    uriTF.getActualField().ui().focus();\n\t    //(<UI.TextField>resourceTypeProp).hideLabel();\n\t    if (!parentsPath) {\n\t        uriTF.hideLabel();\n\t    }\n\t    else {\n\t        uriTF.makeLabelNextToField();\n\t    }\n\t}\n\texports.newResource = newResource;\n\tfunction newNode(parent, title, property, key) {\n\t    if (key === void 0) { key = \"key\"; }\n\t    var name = \"\", type = \"\";\n\t    if (parent == null) {\n\t        return;\n\t    }\n\t    if (property == \"body\") {\n\t        key = \"application/json\";\n\t    }\n\t    var stub = stubs.createStub(parent, property, key);\n\t    var item = details2.buildItem(stub, true);\n\t    item.setTitle(title);\n\t    var panel = item.render({ showDescription: true });\n\t    panel.margin(8, 8, 8, 8);\n\t    _dialog(panel, function () {\n\t        stub._parent = null;\n\t        stub.lowLevel()._unit = null;\n\t        parent.add(stub);\n\t        editorTools.updateAndSelect(stub);\n\t        return true;\n\t    }, null)(this);\n\t}\n\texports.newNode = newNode;\n\tfunction traitsEditDialog(name, values, node, onDone) {\n\t    var toPropagate = svMap(node, name);\n\t    var tabs = new UI.TabFolder();\n\t    var sel = UI.vc(UI.h3(\"Enabled traits: \")).margin(10, 10, 0, 0);\n\t    tabs.margin(0, 0, 20, 10);\n\t    tabs.add(\"Traits\", UI.Icon.FILE_SUBMODULE, sel);\n\t    var traitProperty = node.definition().property(name);\n\t    var ui = {};\n\t    var index = 0;\n\t    var returnv = node.root().elementsOfKind('traits').map(function (trait) {\n\t        var traitName = trait.name();\n\t        var traitValue = rp.utils.genStructuredValue(traitName, node, traitProperty);\n\t        var traitNode = (typeof traitValue === \"object\") ? traitValue.toHighLevel() : null;\n\t        if (traitNode && traitNode.definition().allProperties().length == 0)\n\t            traitValue = traitName;\n\t        var returnee = {\n\t            index: index,\n\t            name: traitName,\n\t            value: traitValue,\n\t            enabled: values.filter(function (x) { return getStringValue(x) == traitName; }).length > 0\n\t        };\n\t        propagateValues(traitNode, toPropagate);\n\t        var tcb = UI.checkBox(returnee.name, function (e) {\n\t            returnee.enabled = tcb.getValue();\n\t            tabs.toggle(1 + returnee.index, returnee.enabled);\n\t        });\n\t        tcb.margin(12, 12);\n\t        tcb.setValue(returnee.enabled);\n\t        sel.addChild(tcb);\n\t        var traitPanel = UI.vc();\n\t        traitPanel.margin(8, 8, 20, 8);\n\t        details.updateDetailsPanel(traitNode, traitPanel);\n\t        tabs.add(traitName, UI.Icon.CIRCUIT_BOARD, traitPanel);\n\t        tabs.toggle(1 + index, returnee.enabled);\n\t        index += 1;\n\t        return returnee;\n\t    });\n\t    var panel = UI.section(\"Editing trait value `\" + name + \"`:\", UI.Icon.CIRCUIT_BOARD, null, null, tabs);\n\t    return _dialog(panel, function () { onDone(returnv); return true; });\n\t}\n\texports.traitsEditDialog = traitsEditDialog;\n\tfunction getNewSchemaPath(schema) {\n\t    return path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath()) + '/' + (schema.length > 0 ? schema + '.raml' : \"\");\n\t}\n\tfunction schemaText(nameOrValue) {\n\t    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n\t    return schema ? schema.value().value() : \"\";\n\t}\n\tfunction schemaEditDialog(name, value, onDone) {\n\t    var NEW_SCHEMA = \"(New Schema)\";\n\t    var schemas = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }); // list of all available schema names\n\t    var refValue = schemas.indexOf(value) >= 0;\n\t    var text = refValue ? _schemaText(value) : value;\n\t    var sname = refValue ? value : \"\";\n\t    var timeout = 0;\n\t    var editor = smallEditor(function (e, v) { timeout = 0; });\n\t    var preview = schemaUI._schemaPreview();\n\t    var intervalId = setInterval(function () {\n\t        if (timeout++ < 5)\n\t            return;\n\t        timeout = 0;\n\t        schemaUI._updatePreview(preview, editor.getValue());\n\t    }, 100);\n\t    var select = new UI.SelectField('Select schema: ', function (e, v) {\n\t        sname = v;\n\t        text = schemaText(v);\n\t        _updateEditor(editor, text);\n\t    });\n\t    select.getActualField().setOptions([NEW_SCHEMA].concat(schemas));\n\t    select.setPercentWidth(100);\n\t    if (refValue)\n\t        select.getActualField().setValue(sname);\n\t    _updateEditor(editor, text);\n\t    var tabs = new UI.TabFolder();\n\t    tabs.add(\"Write\", UI.Icon.FILE_TEXT, editor);\n\t    tabs.add(\"Preview\", UI.Icon.GIT_MERGE, preview);\n\t    var panel = UI.section(\"Editing schema value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, select, tabs);\n\t    var NoSchema = function () {\n\t        showError(\"No schema entered\", \"Please enter a valid schema or select one from the list before proceeding.\");\n\t        return false;\n\t    };\n\t    var InvalidSchema = function () {\n\t        showError(\"Invalid schema\", \"Please fix the errors in the schema before saving it.\");\n\t        return false;\n\t    };\n\t    return _dialog2(panel, [\n\t        {\n\t            name: \"Save as reference\",\n\t            highlight: UI.ButtonHighlights.INFO,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                var isChanged = (text != newText);\n\t                if (!isChanged && sname == NEW_SCHEMA)\n\t                    return NoSchema();\n\t                else if (validateSchema(newText) == false)\n\t                    return InvalidSchema();\n\t                if (isChanged) {\n\t                    var res = saveSchema(sname, newText);\n\t                    if (res) {\n\t                        onDone(res);\n\t                        clearInterval(intervalId);\n\t                        return true;\n\t                    }\n\t                    else\n\t                        return false;\n\t                }\n\t                else {\n\t                    onDone(sname);\n\t                    clearInterval(intervalId);\n\t                    return true;\n\t                }\n\t            }\n\t        },\n\t        {\n\t            name: \"Save as text\",\n\t            highlight: UI.ButtonHighlights.WARNING,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                var isChanged = (text != newText);\n\t                if (newText == \"\")\n\t                    return NoSchema();\n\t                else if (validateSchema(newText) == false)\n\t                    return InvalidSchema();\n\t                select.getActualField().setValue(NEW_SCHEMA);\n\t                sname = \"Untitled\";\n\t                onDone(newText);\n\t                clearInterval(intervalId);\n\t                return true;\n\t            }\n\t        },\n\t        {\n\t            name: \"Cancel\",\n\t            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n\t            action: function () { clearInterval(intervalId); return true; }\n\t        }\n\t    ]);\n\t}\n\texports.schemaEditDialog = schemaEditDialog;\n\tfunction _updateEditor(editor, value) {\n\t    var schema = rp.schema.createSchema(value, null);\n\t    var schemaType = (schema == null || schema.getType == null) ? \"text/plain\" : schema.getType();\n\t    editor.setGrammar(schemaType);\n\t    editor.setText(value);\n\t}\n\texports._updateEditor = _updateEditor;\n\tfunction validateSchema(schema) {\n\t    return true;\n\t}\n\tfunction saveSchema(name, value) {\n\t    var schema = rp.schema.createSchema(value, null);\n\t    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n\t    var projectFolder = path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath());\n\t    var ext;\n\t    var filter;\n\t    switch (schema.getType()) {\n\t        case 'source.json':\n\t            filter = [filterJSON];\n\t            ext = \".json\";\n\t            break;\n\t        case 'text.xml':\n\t            filter = [filterXML];\n\t            ext = \".xsd\";\n\t            break;\n\t        default:\n\t            filter = [];\n\t    }\n\t    var result = getDialog().showSaveDialog(remote.getCurrentWindow(), {\n\t        title: 'Save schema',\n\t        defaultPath: path.resolve(projectFolder, \"schemas\", name + ext),\n\t        filters: filter\n\t    });\n\t    if (result == null)\n\t        return null;\n\t    var fname = path.basename(result);\n\t    var ename = path.extname(fname);\n\t    var sname = fname.substr(0, fname.indexOf(ename));\n\t    var rpath = path.relative(projectFolder, result);\n\t    if (editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }).indexOf(sname) == -1)\n\t        assistUtils.createGlobalSchemaFromNameAndContent(editorTools.aquireManager().ast.root(), sname, rpath, value, result);\n\t    return sname;\n\t}\n\tfunction markdown(name, values, onDone) {\n\t    var editor = new UI.AtomEditorElement(values.join('\\n'), function (e) { });\n\t    editor.margin(0, 0, 6, 12);\n\t    editor.setMini(false);\n\t    editor.setGrammar('source.gfm');\n\t    var panel = UI.section(\"Editing markdown value `\" + name + '`:', UI.Icon.FILE_TEXT, false, false, UI.h3(\"Please note that lines might be long enough so window would scroll.\").margin(0, 0, 20, 0), editor);\n\t    return _dialog(panel, function () { onDone(editor.getBinding().get()); return true; }, editor);\n\t}\n\texports.markdown = markdown;\n\tfunction exampleEditorDialog(name, rpath, value, onDone) {\n\t    var editor = smallEditor(function (e, v) {\n\t        if (v.indexOf('xml') > 0)\n\t            editor.setGrammar('text.xml');\n\t        else\n\t            editor.setGrammar('source.json');\n\t    });\n\t    editor.setText(value);\n\t    var projectPath = path.dirname(editorTools.aquireManager().getPath());\n\t    var refPath = new UI.TextField(\"Referenced from\", rpath, function (e, v) { return rpath = v; }, null, \"No reference path provided\");\n\t    refPath.addChild(new UI.Button(\"Browse\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.NO_HIGHLIGHT, null, function () {\n\t        var res = UI.fdUtils.openFileDialogModal(\"Open a reference\", path.resolve(projectPath, rpath), []);\n\t        if (!res)\n\t            return;\n\t        refPath.getActualField().setText(path.relative(projectPath, rpath = res[0]));\n\t        value = fs.readFileSync(res[0]).toString(\"UTF-8\");\n\t        editor.setText(value);\n\t    }).margin(4, 0));\n\t    var reui = refPath.getActualField().ui();\n\t    reui.onclick = function (e) {\n\t        reui.blur();\n\t        if (reui.nextSibling['onclick'])\n\t            reui.nextSibling['onclick'](e);\n\t    };\n\t    var refFrom = UI.vc(UI.h3(\"Referenced\"));\n\t    var panel = UI.section(\"Editing example value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, refPath.margin(12, 12, 20, 12), editor.margin(12, 12, 20, 12));\n\t    return _dialog2(panel, [\n\t        {\n\t            name: \"Save as reference\",\n\t            highlight: UI.ButtonHighlights.INFO,\n\t            action: function () {\n\t                var newText = editor.getValue();\n\t                if ((value != newText)) {\n\t                    var res = saveExample(path.resolve(projectPath, rpath), newText);\n\t                    if (res) {\n\t                        onDone(path.relative(projectPath, res));\n\t                        return true;\n\t                    }\n\t                    else\n\t                        return false;\n\t                }\n\t                else {\n\t                    onDone(rpath);\n\t                    return true;\n\t                }\n\t            }\n\t        },\n\t        {\n\t            name: \"Save as text\",\n\t            highlight: UI.ButtonHighlights.WARNING,\n\t            action: function () { return onDone(editor.getValue()) == undefined || true; }\n\t        },\n\t        {\n\t            name: \"Cancel\",\n\t            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n\t            action: function () { return true; }\n\t        }\n\t    ]);\n\t}\n\texports.exampleEditorDialog = exampleEditorDialog;\n\tvar mdp = null;\n\tfunction _closeDialog() {\n\t    _dialogPanels.pop();\n\t    if (_dialogPanels.length == 0)\n\t        mdp.destroy();\n\t    else\n\t        mdp = atom.workspace.addModalPanel({ item: _dialogPanels[_dialogPanels.length - 1].ui() });\n\t}\n\tfunction saveExample(filePath, value) {\n\t    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n\t    var ext = value.indexOf('xml') < 0 ? 'json' : 'xml';\n\t    var filename = UI.fdUtils.saveFileDialogModal('Save an example', filePath, [filterJSON, filterXML, filterAll]);\n\t    if (filename)\n\t        fs.writeFileSync(filename, value);\n\t    return filename;\n\t}\n\tfunction _dialog2(panel, actions, toFocus, stretch) {\n\t    if (stretch === void 0) { stretch = false; }\n\t    var buttonBar = UI.hc().setPercentWidth(100);\n\t    actions.reverse().forEach(function (a) {\n\t        var button = UI.button(a.name, UI.ButtonSizes.NORMAL, a.highlight, UI.Icon.NONE, function (x) { if (a.action())\n\t            _closeDialog(); });\n\t        if (a.isPrimary) {\n\t            var st = panel.getBinding().status();\n\t            if (st) {\n\t                if (st.code == UI.StatusCode.ERROR) {\n\t                    button.setDisabled(true);\n\t                }\n\t            }\n\t            panel.getBinding().addStatusListener(function (x) {\n\t                var st = panel.getBinding().status();\n\t                if (st) {\n\t                    if (st.code != UI.StatusCode.ERROR) {\n\t                        button.setDisabled(false);\n\t                    }\n\t                    else {\n\t                        button.setDisabled(true);\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        button.setStyle(\"float\", \"right\")\n\t            .margin(4, 10);\n\t        buttonBar.addChild(button);\n\t    });\n\t    panel.addChild(buttonBar);\n\t    var ui = panel.ui();\n\t    return function (e) {\n\t        _dialogPanels.push(panel);\n\t        var eventListener = function () {\n\t            if (!stretch) {\n\t                return;\n\t            }\n\t            var parent = ui.parentElement;\n\t            var height = document.body.clientHeight;\n\t            if (!parent) {\n\t                return;\n\t            }\n\t            var style = window.getComputedStyle(parent);\n\t            [\"paddingBottom\", \"paddingTop\", \"marginBottom\", \"marginTop\"].forEach(function (property) {\n\t                height -= parseFloat(style[property] || 0);\n\t            });\n\t            ui.style.height = height + \"px\";\n\t            ui.style.overflowY = \"scroll\";\n\t        };\n\t        window.addEventListener('resize', eventListener);\n\t        mdp = atom.workspace.addModalPanel({ item: ui });\n\t        mdp.onDidDestroy(function () {\n\t            window.removeEventListener('resize', eventListener);\n\t        });\n\t        eventListener();\n\t        if (toFocus)\n\t            toFocus.ui().focus();\n\t    };\n\t}\n\tfunction msg(m) {\n\t    showError(m, \"\");\n\t}\n\texports.msg = msg;\n\tfunction smallEditor(onChange) {\n\t    if (!onChange)\n\t        onChange = function (e, v) { };\n\t    var editor = new UI.AtomEditorElement(\"\", onChange);\n\t    editor.setMini(false);\n\t    editor.setStyle(\"height\", \"400px\");\n\t    editor.setStyle(\"border\", \"solid\");\n\t    editor.setStyle(\"border-width\", \"1px\");\n\t    return editor;\n\t}\n\texports.smallEditor = smallEditor;\n\tfunction _schemaText(nameOrValue) {\n\t    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n\t    return schema ? schema.value().value() : \"\";\n\t}\n\tfunction _dialog(panel, onDone, toFocus, stretch) {\n\t    if (stretch === void 0) { stretch = false; }\n\t    return _dialog2(panel, [\n\t        { name: \"Ok\", isPrimary: true, highlight: UI.ButtonHighlights.PRIMARY, action: onDone },\n\t        { name: \"Cancel\", highlight: UI.ButtonHighlights.NO_HIGHLIGHT, action: function () { return true; } }\n\t    ], toFocus, stretch);\n\t}\n\t\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar rp = __webpack_require__(23);\n\tvar universes = rp.universes;\n\texports.ResourcesCategory = \"Resources\";\n\texports.SchemasAndTypesCategory = \"Schemas & Types\";\n\texports.ResourceTypesAndTraitsCategory = \"Resource Types & Traits\";\n\texports.OtherCategory = \"Other\";\n\t/**\n\t * Generates node key\n\t * @param node\n\t * @returns {any}\n\t */\n\tfunction keyProvider(node) {\n\t    if (!node)\n\t        return null;\n\t    if (node && !node.parent())\n\t        return node.name();\n\t    else\n\t        return node.name() + \" :: \" + keyProvider(node.parent());\n\t}\n\texports.keyProvider = keyProvider;\n\tvar prohibit = {\n\t    resources: true,\n\t    schemas: true,\n\t    types: true,\n\t    resourceTypes: true,\n\t    traits: true\n\t};\n\tfunction isResource(p) {\n\t    return (p.definition().key() === universes.Universe08.Resource || p.definition().key() === universes.Universe10.Resource);\n\t}\n\texports.isResource = isResource;\n\tfunction isOther(p) {\n\t    if (p.property()) {\n\t        var nm = p.property().nameId();\n\t        if (prohibit[nm]) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\texports.isOther = isOther;\n\tfunction isResourceTypeOrTrait(p) {\n\t    var pc = p.definition().key();\n\t    return (pc === universes.Universe08.ResourceType\n\t        || pc === universes.Universe10.ResourceType ||\n\t        pc === universes.Universe08.Trait\n\t        ||\n\t            pc === universes.Universe10.Trait);\n\t}\n\texports.isResourceTypeOrTrait = isResourceTypeOrTrait;\n\tfunction isSchemaOrType(p) {\n\t    if (p.parent() && p.parent().parent() == null) {\n\t        var property = p.property();\n\t        return property.nameId() == universes.Universe10.LibraryBase.properties.types.name ||\n\t            property.nameId() == universes.Universe10.LibraryBase.properties.schemas.name ||\n\t            property.nameId() == universes.Universe08.Api.properties.schemas.name;\n\t    }\n\t    return false;\n\t}\n\texports.isSchemaOrType = isSchemaOrType;\n\t\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar _ = __webpack_require__(26);\n\tvar Opt = __webpack_require__(67);\n\texports.defined = function (x) { return (x !== null) && (x !== undefined); };\n\t/**\n\t * Arrays of Objects are common in RAML08.\n\t * @param x\n\t * @returns {{}}\n\t */\n\tfunction flattenArrayOfObjects(x) {\n\t    var res = {};\n\t    x.forEach(function (v) { return Object.keys(v).forEach(function (k) { return res[k] = v[k]; }); });\n\t    return res;\n\t}\n\texports.flattenArrayOfObjects = flattenArrayOfObjects;\n\tfunction find(xs, f) {\n\t    return new Opt(_.find(xs || [], f));\n\t}\n\texports.find = find;\n\texports.isInstance = function (v, C) { return (v instanceof C) ? [v] : []; };\n\texports.ifInstanceOf = function (v, C, f) { return (v instanceof C) ? f(v) : null; };\n\tfunction toTuples(map) {\n\t    return Object.keys(map).map(function (k) { return [k, map[k]]; });\n\t}\n\texports.toTuples = toTuples;\n\tfunction fromTuples(tuples) {\n\t    var obj = {};\n\t    tuples.forEach(function (x) { return obj[x[0]] = x[1]; });\n\t    return obj;\n\t}\n\texports.fromTuples = fromTuples;\n\texports.collectInstancesOf = function (xs, C) { return tap([], function (res) { return xs.forEach(function (v) { return exports.ifInstanceOf(v, C, function (x) { return res.push(x); }); }); }); };\n\texports.collectInstancesOfInMap = function (map, C) {\n\t    return Object.keys(map).map(function (k) { return [k, map[k]]; }).filter(function (x) { return x[1] instanceof C; }).map(function (x) { return x; });\n\t};\n\texports.asArray = function (v) { return exports.defined(v) ? ((v instanceof Array) ? v : [v]) : []; };\n\texports.shallowCopy = function (obj) { return tap({}, function (copy) { return Object.keys(obj).forEach(function (k) { return copy[k] = obj[k]; }); }); };\n\texports.flatMap = function (xs, f) { return exports.flatten(xs.map(f)); };\n\texports.flatten = function (xss) { return Array.prototype.concat.apply([], xss); };\n\texports.takeWhile = function (xs, f) { return tap([], function (res) {\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (!f(xs[i]))\n\t            break;\n\t        res.push(xs[i]);\n\t    }\n\t}); };\n\tfunction tap(v, f) {\n\t    f(v);\n\t    return v;\n\t}\n\texports.tap = tap;\n\tfunction kv(obj, iter) {\n\t    if (typeof obj === 'object')\n\t        Object.keys(obj).forEach(function (k) { return iter(k, obj[k]); });\n\t}\n\texports.kv = kv;\n\tfunction indexed(objects, key, delKey) {\n\t    if (delKey === void 0) { delKey = false; }\n\t    var obj = {};\n\t    objects.forEach(function (original) {\n\t        var copy = exports.shallowCopy(original);\n\t        if (delKey)\n\t            delete copy[key];\n\t        obj[original[key]] = copy;\n\t    });\n\t    return obj;\n\t}\n\texports.indexed = indexed;\n\tfunction stringEndsWith(str, search) {\n\t    var dif = str.length - search.length;\n\t    return dif >= 0 && str.lastIndexOf(search) === dif;\n\t}\n\texports.stringEndsWith = stringEndsWith;\n\tfunction stringStartsWith(str, search) {\n\t    return str.length - search.length >= 0 && str.substring(0, search.length) === search;\n\t}\n\texports.stringStartsWith = stringStartsWith;\n\tfunction lazypropkeyfilter(k) {\n\t    return k[k.length - 1] == \"_\"; // ends with underscore\n\t}\n\texports.lazypropkeyfilter = lazypropkeyfilter;\n\tfunction lazyprop(obj, key, func) {\n\t    var result, ready = false;\n\t    obj[key] = function () {\n\t        if (!ready) {\n\t            ready = true;\n\t            result = func.apply(obj);\n\t        }\n\t        return result;\n\t    };\n\t}\n\tfunction lazyprops(obj, keyfilter) {\n\t    if (keyfilter === void 0) { keyfilter = lazypropkeyfilter; }\n\t    for (var k in obj) {\n\t        if (keyfilter(k)) {\n\t            exports.ifInstanceOf(obj[k], Function, function (vf) { return (vf.length === 0) ? lazyprop(obj, k, vf) : null; });\n\t        }\n\t    }\n\t}\n\texports.lazyprops = lazyprops;\n\tfunction iff(v, f) {\n\t    if (v !== undefined)\n\t        f(v);\n\t}\n\texports.iff = iff;\n\tfunction isRAMLUrl(str) {\n\t    if (typeof str !== 'string' || str == '')\n\t        return false;\n\t    return stringEndsWith(str, \".raml\");\n\t}\n\texports.isRAMLUrl = isRAMLUrl;\n\tfunction getAllRequiredExternalModulesFromCode(code) {\n\t    var match;\n\t    var mods = [];\n\t    // both quoting styles\n\t    var r1 = new RegExp(\"require\\\\('([^']+)'\\\\)\", \"gi\");\n\t    while (match = r1.exec(code)) {\n\t        mods.push(match[1]);\n\t    }\n\t    var r2 = new RegExp('require\\\\(\"([^\"]+)\"\\\\)', \"gi\");\n\t    while (match = r2.exec(code)) {\n\t        mods.push(match[1]);\n\t    }\n\t    mods = _.unique(mods).filter(function (x) { return x != \"\"; });\n\t    mods.sort();\n\t    return mods;\n\t}\n\texports.getAllRequiredExternalModulesFromCode = getAllRequiredExternalModulesFromCode;\n\texports.serial = (function () { var i = 0; return function () { return i++; }; })();\n\tfunction isEssential(arg) {\n\t    return typeof arg !== 'undefined' && arg != null;\n\t}\n\texports.isEssential = isEssential;\n\tfunction firstToUpper(q) {\n\t    if (q.length == 0) {\n\t        return q;\n\t    }\n\t    return q.charAt(0).toUpperCase() + q.substr(1);\n\t}\n\texports.firstToUpper = firstToUpper;\n\tfunction updateObject(source, target, addNewFields) {\n\t    if (addNewFields === void 0) { addNewFields = false; }\n\t    var keySet = Object.keys(target);\n\t    if (addNewFields) {\n\t        var map = {};\n\t        keySet.forEach(function (x) { return map[x] = true; });\n\t        Object.keys(source).forEach(function (x) { return map[x] = true; });\n\t        keySet = Object.keys(map);\n\t    }\n\t    keySet.forEach(function (x) {\n\t        var value = source[x];\n\t        if (value instanceof Object) {\n\t            if (!target[x]) {\n\t                target[x] = {};\n\t            }\n\t            updateObject(value, target[x], true);\n\t        }\n\t        else if (value != undefined) {\n\t            target[x] = source[x];\n\t        }\n\t    });\n\t}\n\texports.updateObject = updateObject;\n\t;\n\t/**\n\t * In 'str' replace all occurences of 'map' keys to their values.\n\t */\n\tfunction replaceMap(str, map) {\n\t    Object.keys(map).forEach(function (x) { return str = replace(str, x, map[x]); });\n\t    return str;\n\t}\n\texports.replaceMap = replaceMap;\n\t/**\n\t * Replace all occurences of 'x' in 'str' to 'r' without thinking if 'x' can be passed without\n\t * escaping as argument to RegExp constructor\n\t */\n\tfunction replace(str, x, r) {\n\t    var result = '';\n\t    var prev = 0;\n\t    for (var i = str.indexOf(x); i < str.length && i >= 0; i = str.indexOf(x, prev)) {\n\t        result += str.substring(prev, i);\n\t        result += r;\n\t        prev = i + x.length;\n\t    }\n\t    result += str.substring(prev, str.length);\n\t    return result;\n\t}\n\texports.replace = replace;\n\t\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/// <reference path=\"../../typings/main.d.ts\" />\n\tvar File = (function () {\n\t    function File(path) {\n\t        this.path = path;\n\t    }\n\t    File.prototype.getPath = function () {\n\t        return this.path;\n\t    };\n\t    File.prototype.close = function () { };\n\t    return File;\n\t}());\n\texports.File = File;\n\tfunction watch(path, f) {\n\t    return { close: function () { } };\n\t}\n\texports.watch = watch;\n\t\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar mime = __webpack_require__(62);\n\tmime.define({\n\t    'text/xml': ['xml']\n\t});\n\tfunction getEditorById(editorId) {\n\t    var editors = atom.workspace.getTextEditors();\n\t    for (var i = 0; i < editors.length; i++) {\n\t        var editor = editors[i];\n\t        if (String(editor.id) === editorId) {\n\t            return editor;\n\t        }\n\t    }\n\t}\n\texports.getEditorById = getEditorById;\n\tfunction getEditorByPath(path) {\n\t    var editors = atom.workspace.getTextEditors();\n\t    for (var i = 0; i < editors.length; i++) {\n\t        var editor = editors[i];\n\t        if (editor.getPath() === path) {\n\t            return editor;\n\t        }\n\t    }\n\t}\n\texports.getEditorByPath = getEditorByPath;\n\tfunction getGrammerFromMime(mimeType) {\n\t    if (mimeType == null) {\n\t        return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n\t    }\n\t    var extension = mime.extension(mimeType);\n\t    var grammars = atom.grammars.getGrammars();\n\t    for (var i = 0; i < grammars.length; i++) {\n\t        var grammar = grammars[i];\n\t        if (grammar.fileTypes.indexOf(extension) > -1) {\n\t            return grammar;\n\t        }\n\t    }\n\t    return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n\t}\n\texports.getGrammerFromMime = getGrammerFromMime;\n\t/**\n\t * Create an Atom text editor instance for syntax highlighting.\n\t *\n\t * Source: https://github.com/atom/markdown-preview/blob/6d672aca4cff48420977708c31290018622bb166/lib/renderer.coffee#L102-L126\n\t */\n\tfunction codeToEditorElement(code, grammar) {\n\t    var editorElement = document.createElement('atom-text-editor');\n\t    editorElement.setAttributeNode(document.createAttribute('gutter-hidden'));\n\t    editorElement.removeAttribute('tabindex'); // Make read-only.\n\t    var editor = editorElement.getModel();\n\t    editor.getDecorations({ class: 'cursor-line', type: 'line' })[0].destroy();\n\t    editor.setText(code);\n\t    editor.setGrammar(grammar);\n\t    return editorElement;\n\t}\n\texports.codeToEditorElement = codeToEditorElement;\n\t\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar marked = __webpack_require__(68);\n\tvar React = __webpack_require__(50);\n\tvar extend = __webpack_require__(51);\n\tvar classnames = __webpack_require__(69);\n\tvar PureComponent = __webpack_require__(70);\n\tvar pretty = __webpack_require__(71);\n\tvar rp = __webpack_require__(23);\n\tvar highLevelAst = rp.hl;\n\tvar RamlWrapper1 = rp.api10;\n\tvar RamlWrapper08 = rp.api08;\n\tvar atomUtil = __webpack_require__(57);\n\tvar services = rp.ds;\n\tvar BULLET_TEXT = '\\u00b7';\n\tvar METHOD_CLASS_MAP = {\n\t    'get': 'btn-primary',\n\t    'get?': 'btn-primary',\n\t    'post': 'btn-success',\n\t    'post?': 'btn-success',\n\t    'delete': 'btn-error',\n\t    'delete?': 'btn-error',\n\t    'put': 'btn-warning',\n\t    'put?': 'btn-warning',\n\t    'patch': 'btn-info',\n\t    'patch?': 'btn-info'\n\t};\n\t//Methods moved to the parser as: 1) Custom type guards like isApi() for each node interface and 2) RAMLVersion() method for each node.\n\t//\n\t// /**\n\t//  * Returns whether the node is instance of interface by interface name.\n\t//  * DOES NOT CHECK SUPER INTERFACES!\n\t//  * @param node\n\t//  * @param interfaceShortName - interface name, does not include namespace.\n\t//  * @param ramlVersion - optionally also checks if node belongs to \"RAML10\" or \"RAML08\" RAML.\n\t//  * @returns {boolean}\n\t//  */\n\t// function nodeInstanceOf(node : core.BasicNode, interfaceShortName : string, ramlVersion? : string) : boolean {\n\t//   var nodeKind = node.kind();\n\t//\n\t//   if (nodeKind != interfaceShortName) return false;\n\t//\n\t//   if (ramlVersion) {\n\t//     if (ramlVersion != nodeRAMLVersion(node)) return false;\n\t//   }\n\t//\n\t//   return true;\n\t// }\n\t//\n\t// function nodeInstanceOf10(node : core.BasicNode, interfaceShortName : string) {\n\t//   return nodeInstanceOf(node, interfaceShortName, \"RAML10\");\n\t// }\n\t//\n\t// function nodeInstanceOf08(node : core.BasicNode, interfaceShortName : string) {\n\t//   return nodeInstanceOf(node, interfaceShortName, \"RAML08\");\n\t// }\n\t//\n\t// /**\n\t//  * Returns node version.\n\t//  * @param node\n\t//  * @returns {string} : \"RAML10\" for RAML 1.0 and \"RAML08\" for RAML 0.8\n\t//  */\n\t// function nodeRAMLVersion(node : core.BasicNode) : string {\n\t//   return node.highLevel().definition().universe().version();\n\t// }\n\t//\n\tfunction isRAML10(node) {\n\t    return node.RAMLVersion() == \"RAML10\";\n\t}\n\tfunction isRAML08(node) {\n\t    return node.RAMLVersion() == \"RAML08\";\n\t}\n\tvar Console = (function (_super) {\n\t    __extends(Console, _super);\n\t    function Console() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Console.prototype.isSupportedNode = function (node) {\n\t        return !(RamlWrapper1.isObjectTypeDeclaration(node) ||\n\t            RamlWrapper1.isResponse(node) ||\n\t            RamlWrapper1.isTypeDeclaration(node) ||\n\t            RamlWrapper1.isLibrary(node) ||\n\t            RamlWrapper1.isSecuritySchemePart(node) ||\n\t            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n\t            RamlWrapper08.isResponse(node) ||\n\t            RamlWrapper08.isSecuritySchemePart(node) ||\n\t            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth2SecurityScheme(node));\n\t    };\n\t    Console.prototype.renderNode = function (node) {\n\t        var props = extend(this.props, { node: node });\n\t        if (RamlWrapper1.isTrait(node) ||\n\t            RamlWrapper08.isTrait(node)) {\n\t            return React.createElement(Trait, props);\n\t        }\n\t        if (RamlWrapper1.isResourceType(node) ||\n\t            RamlWrapper08.isResourceType(node)) {\n\t            return React.createElement(ResourceType, props);\n\t        }\n\t        if (RamlWrapper1.isAbstractSecurityScheme(node) ||\n\t            RamlWrapper08.isAbstractSecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n\t            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n\t            RamlWrapper08.isOAuth2SecurityScheme(node)) {\n\t            return React.createElement(SecurityScheme, props);\n\t        }\n\t        if (RamlWrapper1.isResource(node) ||\n\t            RamlWrapper08.isResource(node)) {\n\t            return React.createElement(Resource, props);\n\t        }\n\t        if (RamlWrapper1.isDocumentationItem(node) ||\n\t            RamlWrapper08.isDocumentationItem(node)) {\n\t            return React.createElement(Documentation, props);\n\t        }\n\t        if (RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n\t            return React.createElement(Method, props);\n\t        }\n\t        if (RamlWrapper1.isApi(node) || RamlWrapper08.isApi(node) ||\n\t            RamlWrapper1.isExtension(node) || RamlWrapper1.isOverlay(node)) {\n\t            return React.createElement(Root, props);\n\t        }\n\t        // Psuedo \"404\" in case a view isn't implemented.\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: '404' }), React.createElement(Block, null, 'How did you get here? You shouldn\\'t be here! Please ', React.createElement('a', {\n\t            href: 'https://github.com/mulesoft/api-workbench/issues'\n\t        }, 'report me'), '.'), React.createElement(Block, null, React.createElement('strong', null, \"Reference: \" + node.wrapperClassName())));\n\t    };\n\t    Console.prototype.renderBreadcrumb = function (node, renderedNode) {\n\t        var _this = this;\n\t        var parts = [];\n\t        var nodes = [];\n\t        var currentNode = node;\n\t        // Render \"Errors\" as a breadcrumb.\n\t        if (this.props.errors.length) {\n\t            parts.push(React.createElement('span', { key: 'errors' }, 'Errors'));\n\t        }\n\t        else {\n\t            do {\n\t                nodes.unshift(currentNode);\n\t            } while (currentNode = currentNode.parent());\n\t            nodes.forEach(function (node, index) {\n\t                var lastNode = index === nodes.length - 1;\n\t                if (node.getKind() === highLevelAst.NodeKind.NODE &&\n\t                    _this.isSupportedNode(node.wrapperNode()) &&\n\t                    node.wrapperNode() !== renderedNode) {\n\t                    parts.push(React.createElement('a', {\n\t                        key: node.id(),\n\t                        onClick: function () { return _this.props.navigate(node.id()); }\n\t                    }, getNodeLabel(node)));\n\t                }\n\t                else {\n\t                    parts.push(React.createElement('span', { key: \"value\" + index }, getNodeLabel(node)));\n\t                }\n\t                if (!lastNode) {\n\t                    parts.push(React.createElement('span', { key: \"sep\" + index }, \" \" + BULLET_TEXT + \" \"));\n\t                }\n\t            });\n\t        }\n\t        return React.createElement(Block, { className: 'padded', style: { margin: 0, flex: '0 0 auto' } }, parts);\n\t    };\n\t    Console.prototype.getCurrentNode = function () {\n\t        var raml = this.props.raml;\n\t        var state = this.props.state;\n\t        if (!raml) {\n\t            return null;\n\t        }\n\t        if (state.view.id) {\n\t            var idNode = raml.highLevel().findById(state.view.id);\n\t            if (idNode) {\n\t                return idNode;\n\t            }\n\t        }\n\t        return raml.highLevel();\n\t    };\n\t    Console.prototype.wrapBody = function (element) {\n\t        return React.createElement(Block, {\n\t            id: 'raml-console-view',\n\t            className: 'padded',\n\t            style: {\n\t                overflow: 'auto',\n\t                height: '100%'\n\t            }\n\t        }, element);\n\t    };\n\t    Console.prototype.wrapContent = function (breadcrumb, element) {\n\t        return React.createElement(Block, { style: { height: '100%', display: 'flex', flexDirection: 'column' } }, breadcrumb, this.wrapBody(element));\n\t    };\n\t    Console.prototype.render = function () {\n\t        if (!this.props.loaded) {\n\t            return React.createElement(Loading);\n\t        }\n\t        var highLevelNode = this.getCurrentNode();\n\t        if (!highLevelNode) {\n\t            return React.createElement(Block, null, React.createElement(TitleText, { title: 'Unsupported fragment' }), React.createElement(Block, null, 'This type of fragment is not supported. Only APIs, Overlays and Extensions can be displayed.'));\n\t        }\n\t        var node;\n\t        if (this.props.errors.length) {\n\t            return this.wrapBody(React.createElement(Errors, { errors: this.props.errors }));\n\t        }\n\t        if (!highLevelNode.isElement()) {\n\t            var referencedNode = highLevelNode.findReferencedValue();\n\t            if (!referencedNode) {\n\t                return this.wrapContent(this.renderBreadcrumb(highLevelNode), React.createElement(MissingReference, extend(this.props, { highLevelNode: highLevelNode })));\n\t            }\n\t            node = referencedNode.wrapperNode();\n\t        }\n\t        else {\n\t            node = highLevelNode.wrapperNode();\n\t        }\n\t        // Traverse upwards to rendered nodes.\n\t        while (!this.isSupportedNode(node)) {\n\t            node = node.parent();\n\t        }\n\t        return this.wrapContent(this.renderBreadcrumb(highLevelNode, node), this.renderNode(node));\n\t    };\n\t    return Console;\n\t}(PureComponent));\n\texports.Console = Console;\n\tvar Errors = (function (_super) {\n\t    __extends(Errors, _super);\n\t    function Errors() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Errors.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Errors' }), React.createElement('ul', null, this.props.errors.map(function (error, index) {\n\t            // TODO(blakeembrey): Use `error.mark` to open text editor to issue.\n\t            return React.createElement('li', { key: index }, error.message);\n\t        })));\n\t    };\n\t    return Errors;\n\t}(PureComponent));\n\tvar Root = (function (_super) {\n\t    __extends(Root, _super);\n\t    function Root() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Root.prototype.render = function () {\n\t        var _this = this;\n\t        var raml = this.props.node;\n\t        return React.createElement('div', null, React.createElement(TitleText, { title: raml.title() }), React.createElement(ResourceTypesAndTraits, this.props), raml.documentation().length ? React.createElement(InsetPanel, null, React.createElement('h3', { style: { marginTop: 0 } }, 'Documentation'), React.createElement('ul', null, raml.documentation().map(function (documentation) {\n\t            var id = documentation.highLevel().id();\n\t            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, documentation.title()));\n\t        }))) : null, React.createElement(ResourceChildren, this.props));\n\t    };\n\t    return Root;\n\t}(PureComponent));\n\tvar MethodButton = (function (_super) {\n\t    __extends(MethodButton, _super);\n\t    function MethodButton() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MethodButton.prototype.render = function () {\n\t        var _this = this;\n\t        var verb = this.props.method.method();\n\t        return React.createElement('div', {\n\t            onClick: function () { return _this.props.navigate(_this.props.method.highLevel().id()); },\n\t            className: classnames('btn inline-block', METHOD_CLASS_MAP[verb])\n\t        }, verb.toUpperCase());\n\t    };\n\t    return MethodButton;\n\t}(PureComponent));\n\tvar MissingReference = (function (_super) {\n\t    __extends(MissingReference, _super);\n\t    function MissingReference() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MissingReference.prototype.render = function () {\n\t        var node = this.props.highLevelNode;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Missing Reference' }), 'Unable to resolve reference: ', React.createElement('strong', null, node.id()));\n\t    };\n\t    return MissingReference;\n\t}(PureComponent));\n\t// class GlobalSchema extends PureComponent<NodeProps<RamlWrapper1.GlobalSchema>, {}> {\n\t//\n\t//   render () {\n\t//     var node = this.props.node\n\t//\n\t//     return React.createElement(\n\t//       Block,\n\t//       null,\n\t//       React.createElement(TitleText, { node, title: node.key(), type: 'Schema' }),\n\t//       React.createElement(Markup, { content: node.value().value(), setState: this.props.setState, state: this.props.state })\n\t//     )\n\t//   }\n\t//\n\t// }\n\tvar Loading = (function (_super) {\n\t    __extends(Loading, _super);\n\t    function Loading() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Loading.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement('div', {\n\t            className: 'loading-spinner-medium inline-block'\n\t        }), React.createElement('span', {\n\t            className: 'inline-block'\n\t        }, 'Loading RAML\\u2026'));\n\t    };\n\t    return Loading;\n\t}(PureComponent));\n\tvar Trait = (function (_super) {\n\t    __extends(Trait, _super);\n\t    function Trait() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Trait.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Trait' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractMethod, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return Trait;\n\t}(PureComponent));\n\tvar TitleText = (function (_super) {\n\t    __extends(TitleText, _super);\n\t    function TitleText() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TitleText.prototype.render = function () {\n\t        var title = this.props.title;\n\t        return React.createElement('h1', { style: { marginTop: 0 } }, this.props.node ? React.createElement(OpenInEditor, { node: this.props.node }, title) : title, this.props.type ? React.createElement('small', null, \" (\" + this.props.type + \")\") : null);\n\t    };\n\t    return TitleText;\n\t}(PureComponent));\n\tvar SimpleText = (function (_super) {\n\t    __extends(SimpleText, _super);\n\t    function SimpleText() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SimpleText.prototype.render = function () {\n\t        var text = this.props.text;\n\t        if (!text) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, null, React.createElement('strong', null, this.props.title + \": \"), text);\n\t    };\n\t    return SimpleText;\n\t}(PureComponent));\n\tvar References = (function (_super) {\n\t    __extends(References, _super);\n\t    function References() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    References.prototype.formatNode = function (node) {\n\t        var parts = [];\n\t        do {\n\t            parts.unshift(getNodeLabel(node));\n\t        } while (node = node.parent());\n\t        return parts.join(\" \" + BULLET_TEXT + \" \");\n\t    };\n\t    References.prototype.render = function () {\n\t        var _this = this;\n\t        var references = this.props.references;\n\t        if (!references.length) {\n\t            return null;\n\t        }\n\t        return React.createElement(InsetPanel, null, React.createElement('h3', null, \"References (\" + references.length + \" Found)\"), React.createElement('ul', null, references.map(function (reference) {\n\t            var id = reference.id();\n\t            var parent = reference.parent();\n\t            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(parent.id()); } }, _this.formatNode(parent)));\n\t        })));\n\t    };\n\t    return References;\n\t}(PureComponent));\n\tvar AbstractResource = (function (_super) {\n\t    __extends(AbstractResource, _super);\n\t    function AbstractResource() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractResource.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        var methods = node.methods();\n\t        var uriParameters = node.uriParameters();\n\t        return React.createElement(Block, null, React.createElement(ResourceTypesAndTraits, this.props), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), methods.length ? React.createElement(Block, null, methods.map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })) : null, React.createElement(ParametersBlock, { parameters: uriParameters, title: 'URI Parameters', navigate: navigate }));\n\t    };\n\t    return AbstractResource;\n\t}(PureComponent));\n\tvar ResourceType = (function (_super) {\n\t    __extends(ResourceType, _super);\n\t    function ResourceType() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceType.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Resource Type' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractResource, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return ResourceType;\n\t}(PureComponent));\n\tvar SecurityScheme = (function (_super) {\n\t    __extends(SecurityScheme, _super);\n\t    function SecurityScheme() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SecurityScheme.prototype.render = function () {\n\t        var node = this.props.node;\n\t        var references = node.highLevel().findReferences();\n\t        // TODO(blakeembrey): Render `settings`.\n\t        var displayName = \"\";\n\t        if (isRAML08(node)) {\n\t            displayName = node.name();\n\t        }\n\t        else {\n\t            displayName = node.displayName();\n\t        }\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Security Scheme' }), React.createElement(SimpleText, { title: 'Type', text: node.type() }), React.createElement(SimpleText, { title: 'Display Name', text: displayName }), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), React.createElement(AbstractMethod, extend(this.props, { node: node.describedBy() })), React.createElement(References, { references: references, navigate: this.props.navigate }));\n\t    };\n\t    return SecurityScheme;\n\t}(PureComponent));\n\tvar Resource = (function (_super) {\n\t    __extends(Resource, _super);\n\t    function Resource() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Resource.prototype.render = function () {\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.relativeUri().value(), type: 'Resource' }), React.createElement(AbstractResource, this.props), React.createElement(ResourceChildren, this.props));\n\t    };\n\t    return Resource;\n\t}(PureComponent));\n\tvar ParameterInfo = (function (_super) {\n\t    __extends(ParameterInfo, _super);\n\t    function ParameterInfo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ParameterInfo.prototype.render = function () {\n\t        var node = this.props.node;\n\t        if (node == null) {\n\t            return null;\n\t        }\n\t        var nodeType = node.type();\n\t        if (!nodeType)\n\t            nodeType = \"string\";\n\t        return React.createElement(Block, null, React.createElement(Block, null, React.createElement('span', {\n\t            key: nodeType,\n\t            className: 'highlight',\n\t            style: { marginRight: 5 }\n\t        }, nodeType)));\n\t    };\n\t    return ParameterInfo;\n\t}(PureComponent));\n\tvar TypeInfo = (function (_super) {\n\t    __extends(TypeInfo, _super);\n\t    function TypeInfo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TypeInfo.prototype.hasNamedSuperTypes = function (type) {\n\t        var superTypes = type.superTypes();\n\t        if (!superTypes)\n\t            return false;\n\t        var namedTypeFound = false;\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.nameId() && superType.nameId().indexOf(\"application/\") != 0)\n\t                namedTypeFound = true;\n\t        });\n\t        return namedTypeFound;\n\t    };\n\t    TypeInfo.prototype.renderDefinition = function (definition, renderNameId) {\n\t        return React.createElement(Block, null, \n\t        // TODO(blakeembrey): Fix `renderNameId` check, currently hacky because\n\t        // the media type is being printed out sometimes.\n\t        renderNameId ? React.createElement(Block, null, React.createElement('span', {\n\t            className: 'highlight'\n\t        }, definition.nameId())) : null, this.hasNamedSuperTypes(definition) ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Super Types:')), definition.superTypes().map(function (x) {\n\t            return React.createElement('span', {\n\t                className: 'highlight',\n\t                style: { marginRight: 5 }\n\t            }, x.nameId());\n\t        })) : null, definition.allProperties().length ? React.createElement(Block, null, React.createElement('h5', null, 'Properties'), definition.allProperties().map(function (property) {\n\t            return React.createElement(Block, { key: property.nameId() }, React.createElement(Block, null, React.createElement('strong', null, property.nameId()), property.isRequired() ? ' (required)' : ''), React.createElement(Block, null, property.description()));\n\t        })) : null, definition.hasUnionInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Left: ')), this.renderDefinition(definition.unionInHierarchy().leftType(), true), React.createElement(Block, null, React.createElement('strong', null, 'Right: ')), this.renderDefinition(definition.unionInHierarchy().rightType(), true)) : null, definition.hasArrayInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Item: ')), this.renderDefinition(definition.arrayInHierarchy().componentType(), true)) : null);\n\t    };\n\t    TypeInfo.prototype.render = function () {\n\t        var node = this.props.node;\n\t        // Array items can be `null`.\n\t        if (node == null) {\n\t            return null;\n\t        }\n\t        var definition = node.runtimeDefinition();\n\t        if (definition && definition.hasGenuineUserDefinedTypeInHierarchy()\n\t            && !definition.isGenuineUserDefinedType()) {\n\t            definition = definition.genuineUserDefinedTypeInHierarchy();\n\t        }\n\t        return React.createElement(Block, null, typeof node.type === 'function' ? React.createElement(Block, null, (node.type() || []).map(function (type) {\n\t            return React.createElement('span', {\n\t                key: type,\n\t                className: 'highlight',\n\t                style: { marginRight: 5 }\n\t            }, type);\n\t        })) : null, this.renderDefinition(definition, false));\n\t    };\n\t    return TypeInfo;\n\t}(PureComponent));\n\tvar ParametersBlock = (function (_super) {\n\t    __extends(ParametersBlock, _super);\n\t    function ParametersBlock() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ParametersBlock.prototype.summary = function (param) {\n\t        var parts = [];\n\t        if (RamlWrapper1.isFileTypeDeclaration(param) /*param.wrapperClassName() === 'FileTypeDeclarationImpl'*/) {\n\t            if (param.fileTypes()) {\n\t                parts.push(\"fileTypes: \" + param.fileTypes());\n\t            }\n\t            if (param.minLength()) {\n\t                parts.push(\"minLength: \" + param.minLength());\n\t            }\n\t            if (param.maxLength()) {\n\t                parts.push(\"maxLength: \" + param.maxLength());\n\t            }\n\t        }\n\t        if (RamlWrapper1.isIntegerTypeDeclaration(param) /*param.wrapperClassName() === 'IntegerTypeDeclarationImpl'*/) {\n\t            if (param.minimum() != null) {\n\t                parts.push(\"minimum: \" + param.minimum());\n\t            }\n\t            if (param.maximum() != null) {\n\t                parts.push(\"maximum: \" + param.maximum());\n\t            }\n\t        }\n\t        if (param.required()) {\n\t            parts.push('required');\n\t        }\n\t        return parts.join(', ');\n\t    };\n\t    ParametersBlock.prototype.render = function () {\n\t        var _this = this;\n\t        if (!this.props.parameters.length) {\n\t            return null;\n\t        }\n\t        var navigate = this.props.navigate;\n\t        return React.createElement(Block, null, React.createElement('h3', null, this.props.title), this.props.parameters.map(function (parameter) {\n\t            return React.createElement(Block, { key: parameter.name() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: parameter }, parameter.name())), React.createElement(isRAML10(parameter) ? TypeInfo : ParameterInfo, { node: parameter }), React.createElement(Block, null, React.createElement('strong', null, _this.summary(parameter))), React.createElement(MarkdownBlock, { content: (parameter.description() ? parameter.description().value() : null) }));\n\t        }));\n\t    };\n\t    return ParametersBlock;\n\t}(PureComponent));\n\tvar ResourceChildren = (function (_super) {\n\t    __extends(ResourceChildren, _super);\n\t    function ResourceChildren() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceChildren.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, node.resources().map(function (resource) {\n\t            var id = resource.highLevel().id();\n\t            var children = resource.resources().length;\n\t            return React.createElement(InsetPanel, { key: id }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: resource }, resource.completeRelativeUri()), ' ', children ? React.createElement('small', null, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, \"View \" + children + \" more \" + plural(children, 'resource', 'resources'))) : null), React.createElement(MarkdownBlock, {\n\t                content: (resource.description() ? resource.description().value() : null)\n\t            }), React.createElement(Block, null, resource.methods().map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })));\n\t        }));\n\t    };\n\t    return ResourceChildren;\n\t}(PureComponent));\n\tvar Documentation = (function (_super) {\n\t    __extends(Documentation, _super);\n\t    function Documentation() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Documentation.prototype.render = function () {\n\t        var node = this.props.node;\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.title(), type: 'Documentation' }), React.createElement(MarkdownBlock, { content: (this.props.node.content() ? this.props.node.content().value() : null) }));\n\t    };\n\t    return Documentation;\n\t}(PureComponent));\n\tvar AbstractMethod = (function (_super) {\n\t    __extends(AbstractMethod, _super);\n\t    function AbstractMethod() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    AbstractMethod.prototype.renderBody = function (body) {\n\t        // TODO(blakeembrey): Render more properties from `ObjectField`.\n\t        var parts = [];\n\t        //link to open body in the editor\n\t        parts.push(React.createElement('h4', null, React.createElement(OpenInEditor, { node: body }, body.name())));\n\t        //type block for 1.0 raml\n\t        if (isRAML10(body)) {\n\t            parts.push(React.createElement(TypeInfo, { node: body }));\n\t        }\n\t        //if there is schema, we render it\n\t        //TODO for 1.0 case this should be replaced with external type rendering in TypeInfo\n\t        var schemaPart = this.createSchemaPart(body);\n\t        if (schemaPart)\n\t            parts.push(schemaPart);\n\t        //adding examples if available\n\t        parts.push(this.createExampleParts(body));\n\t        return React.createElement(Block, { key: body.name() }, parts);\n\t    };\n\t    AbstractMethod.prototype.exampleToString = function (example) {\n\t        var exampleValue = example.value();\n\t        if (exampleValue == null)\n\t            return null;\n\t        if (typeof (exampleValue) == \"string\") {\n\t            return exampleValue;\n\t        }\n\t        return JSON.stringify(exampleValue, null, 2);\n\t    };\n\t    AbstractMethod.prototype.createExampleParts = function (body) {\n\t        var _this = this;\n\t        if (isRAML10(body)) {\n\t            var bodyType = body;\n\t            var runtimeType = bodyType.runtimeType();\n\t            if (runtimeType) {\n\t                var examples = runtimeType.examples(true);\n\t                if (examples && examples.length > 0) {\n\t                    return examples.map(function (example) {\n\t                        var exampleName = example.name() ? example.name() : \"Example\";\n\t                        var displayName = example.displayName() ? example.displayName() : exampleName;\n\t                        return React.createElement(MarkupBlock, {\n\t                            key: displayName,\n\t                            content: example.asString(),\n\t                            title: \"Example\",\n\t                            name: exampleName,\n\t                            mime: body.name(),\n\t                            setState: _this.props.setState,\n\t                            state: _this.props.state\n\t                        });\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        else if (RamlWrapper08.isBodyLike(body)) {\n\t            var exampleNode = body.example();\n\t            if (!exampleNode)\n\t                return [];\n\t            var exampleContent = exampleNode.value();\n\t            if (!exampleContent)\n\t                return [];\n\t            return [React.createElement(MarkupBlock, {\n\t                    content: exampleContent,\n\t                    title: 'Example',\n\t                    mime: body.name(),\n\t                    setState: this.props.setState,\n\t                    state: this.props.state\n\t                })];\n\t        }\n\t        return [];\n\t    };\n\t    AbstractMethod.prototype.createSchemaPart = function (body) {\n\t        var schemaName = null;\n\t        var schemaContent = null;\n\t        if (RamlWrapper08.isBodyLike(body)) {\n\t            schemaName = body.schema() ? body.schema().value() : \"\";\n\t            //this is probably not an external scheme reference, but inplace schema.\n\t            if (!schemaName || schemaName.indexOf(\"{\") != -1 && schemaName.indexOf(\"}\") != -1)\n\t                schemaName = \"\";\n\t            schemaContent = body.schemaContent();\n\t        }\n\t        else if (isRAML10(body)) {\n\t            var bodyAsType = body;\n\t            if (body.runtimeType() && bodyAsType.runtimeType().hasExternalInHierarchy()) {\n\t                var externalType = bodyAsType.runtimeType().externalInHierarchy();\n\t                if (externalType) {\n\t                    schemaName = body.runtimeType().superTypes() != null && body.runtimeType().superTypes().length == 1 &&\n\t                        body.runtimeType().superTypes()[0].nameId();\n\t                    schemaContent = externalType.schema();\n\t                }\n\t            }\n\t        }\n\t        if (schemaContent) {\n\t            return React.createElement(MarkupBlock, {\n\t                key: undefined,\n\t                content: schemaContent,\n\t                title: 'Schema',\n\t                mime: body.name(),\n\t                name: schemaName,\n\t                setState: this.props.setState,\n\t                state: this.props.state\n\t            });\n\t        }\n\t        return null;\n\t    };\n\t    AbstractMethod.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        if (!node) {\n\t            return null;\n\t        }\n\t        var methodBodies = node.body();\n\t        return React.createElement(Block, null, React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), node.queryParameters().length ? React.createElement(InsetPanel, null, React.createElement(ParametersBlock, {\n\t            parameters: node.queryParameters(),\n\t            title: 'Query Parameters',\n\t            navigate: navigate\n\t        })) : null, React.createElement(ParametersBlock, {\n\t            parameters: node.headers(),\n\t            title: 'Headers',\n\t            navigate: navigate\n\t        }), methodBodies.length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Body'), methodBodies.map(function (body) { return _this.renderBody(body); })) : null, node.responses().length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Responses'), node.responses().map(function (response) {\n\t            return React.createElement(Block, { key: response.code().value() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: response.code() }, response.code().value())), React.createElement(MarkdownBlock, { content: (response.description() ? response.description().value() : null) }), React.createElement(ParametersBlock, {\n\t                parameters: response.headers(),\n\t                title: 'Headers',\n\t                navigate: navigate\n\t            }), response.body().map(function (body) { return _this.renderBody(body); }));\n\t        })) : null);\n\t    };\n\t    return AbstractMethod;\n\t}(PureComponent));\n\tvar Method = (function (_super) {\n\t    __extends(Method, _super);\n\t    function Method() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Method.prototype.render = function () {\n\t        var props = this.props;\n\t        var node = props.node;\n\t        var demo = props.state.view.demo;\n\t        var canDemo = node.parent().wrapperClassName() === 'ResourceImpl';\n\t        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.method().toUpperCase(), type: 'Method' }), React.createElement(ResourceTypesAndTraits, props), canDemo ? React.createElement(Block, null, React.createElement('div', {\n\t            className: 'btn btn-primary',\n\t            onClick: function () { return props.navigate({ demo: !demo }); }\n\t        }, demo ? 'Read Documentation' : 'Make an API Request')) : null, canDemo && demo ? React.createElement(MethodDemo, props) : React.createElement(AbstractMethod, props));\n\t    };\n\t    return Method;\n\t}(PureComponent));\n\tvar MethodDemo = (function (_super) {\n\t    __extends(MethodDemo, _super);\n\t    function MethodDemo() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MethodDemo.prototype.render = function () {\n\t        var _this = this;\n\t        var node = this.props.node;\n\t        var method = node.method();\n\t        var contentType = this.props.state.body;\n\t        var securityScheme = this.props.state.securityScheme;\n\t        var progress = this.props.pageState.requestProgress;\n\t        var bodies = node.body().map(function (x) { return x.name(); });\n\t        var securitySchemes = node.allSecuredBy().map(function (x) { return x.securityScheme(); });\n\t        var currentSecurityScheme = securitySchemes.filter(function (x) { return x != null && x.name() === securityScheme; })[0];\n\t        if (!this.props.state.bodies || Object.keys(this.props.state.bodies).length === 0) {\n\t            this.props.state.bodies = {};\n\t            node.body().forEach(function (body) {\n\t                var name = body.name();\n\t                var example = body.example() || body.examples()[0];\n\t                example && (_this.props.state.bodies[name] = example.value());\n\t            });\n\t        }\n\t        return React.createElement(Block, null, securitySchemes.length ? React.createElement(Block, null, React.createElement('h3', null, 'Security Scheme'), React.createElement(Block, null, React.createElement('select', {\n\t            onChange: function (e) { return _this.props.setState({ securityScheme: e.target.value }); },\n\t            className: 'form-control',\n\t            value: securityScheme\n\t        }, securitySchemes.map(function (x) {\n\t            var name = x != null ? x.name() : 'null';\n\t            return React.createElement('option', { key: name, value: x == null ? '' : x.name() }, name);\n\t        }))), currentSecurityScheme ? React.createElement(Block, null, React.createElement(EditParameters, {\n\t            title: undefined,\n\t            prefix: \"Security Scheme Query Parameter\",\n\t            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().queryParameters()) || [],\n\t            values: this.props.state.queryParameters,\n\t            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: undefined,\n\t            prefix: \"Security Scheme Header\",\n\t            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().headers()) || [],\n\t            values: this.props.state.headers,\n\t            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n\t        })) : null) : null, React.createElement(EditParameters, {\n\t            title: 'Base URI Parameters',\n\t            prefix: undefined,\n\t            parameters: node.ownerApi().allBaseUriParameters(),\n\t            values: this.props.state.baseUriParameters,\n\t            change: function (name, value) { return _this.props.setParameter('baseUriParameters', name, value); }\n\t        }), null, React.createElement(EditParameters, {\n\t            title: 'URI Parameters',\n\t            prefix: undefined,\n\t            parameters: localParameters(node.parent()),\n\t            values: this.props.state.uriParameters,\n\t            change: function (name, value) { return _this.props.setParameter('uriParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: 'Query Parameters',\n\t            prefix: undefined,\n\t            parameters: node.queryParameters(),\n\t            values: this.props.state.queryParameters,\n\t            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n\t        }), React.createElement(EditParameters, {\n\t            title: 'Headers',\n\t            prefix: undefined,\n\t            parameters: node.headers(),\n\t            values: this.props.state.headers,\n\t            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n\t        }), bodies.length ? React.createElement(Block, null, React.createElement('h3', null, 'Body'), React.createElement(Block, null, React.createElement('select', {\n\t            onChange: function (e) { return _this.props.setState({ body: e.target.value }); },\n\t            className: 'form-control',\n\t            value: contentType || bodies[0]\n\t        }, bodies.map(function (x) { return React.createElement('option', { key: x }, x); }))), React.createElement(TextEditor, {\n\t            mini: false,\n\t            value: this.props.state.bodies[contentType || bodies[0]],\n\t            onChange: function (body) {\n\t                return _this.props.setParameter('bodies', contentType || bodies[0], body);\n\t            }\n\t        })) : null, React.createElement(Block, null, React.createElement('div', {\n\t            className: classnames('btn inline-block', METHOD_CLASS_MAP[method]),\n\t            onClick: function () {\n\t                if (!_this.props.state.body) {\n\t                    _this.props.state.body = contentType || bodies[0];\n\t                }\n\t                return _this.props.execRequest();\n\t            }\n\t        }, method.toUpperCase()), progress == null ? null : React.createElement('progress', {\n\t            style: { marginLeft: 5 },\n\t            className: 'inline-block',\n\t            max: isNaN(progress) ? null : '1',\n\t            value: isNaN(progress) ? null : String(progress)\n\t        })), React.createElement(Response, this.props));\n\t    };\n\t    return MethodDemo;\n\t}(PureComponent));\n\tvar Response = (function (_super) {\n\t    __extends(Response, _super);\n\t    function Response() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Response.prototype.render = function () {\n\t        var error = this.props.pageState.requestError;\n\t        var response = this.props.pageState.requestResponse;\n\t        if (error) {\n\t            return React.createElement(Block, { className: 'text-error' }, error);\n\t        }\n\t        if (response) {\n\t            var mime = getCaseless(response.headers, 'content-type');\n\t            // readonly: boolean\n\t            // grammar: any\n\t            // gutter: boolean\n\t            // mini: boolean\n\t            // value: string\n\t            // placeholder: string\n\t            // onChange: (value: string) => any\n\t            return React.createElement(Block, null, React.createElement('h3', null, 'Response'), React.createElement(Block, null, React.createElement('div', null, React.createElement('strong', null, 'Status Code: '), response.status), React.createElement('div', null, React.createElement('strong', null, 'Status Text: '), response.statusText), React.createElement('div', null, React.createElement('strong', null, 'URL: '), response.url)), React.createElement(Block, null, React.createElement('h4', null, 'Headers'), React.createElement(Block, null, response.rawHeaders.map(function (value, index) {\n\t                if (index % 2 === 0) {\n\t                    return React.createElement('strong', { key: index }, value + \": \");\n\t                }\n\t                return React.createElement('span', { key: index }, value, React.createElement('br'));\n\t            }))), response.body ? React.createElement(Block, null, React.createElement('h4', null, 'Body'), React.createElement(Markup, {\n\t                content: response.body,\n\t                mime: mime,\n\t                setState: this.props.setState,\n\t                state: this.props.state\n\t            })) : null);\n\t        }\n\t        return null;\n\t    };\n\t    return Response;\n\t}(PureComponent));\n\tvar EditParameters = (function (_super) {\n\t    __extends(EditParameters, _super);\n\t    function EditParameters() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    EditParameters.prototype.render = function () {\n\t        var _this = this;\n\t        var values = this.props.values || {};\n\t        var params = this.props.parameters;\n\t        if (!params.length) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, null, this.props.title ? React.createElement('h3', {\n\t            className: 'sub-title'\n\t        }, this.props.title) : null, params.map(function (parameter) {\n\t            var name = parameter.name();\n\t            var input;\n\t            var value = values[name];\n\t            if (!value && value !== '') {\n\t                var param = parameter;\n\t                if (param && param._node && param._node._prop && param._node._prop._groupName === rp.universes.Universe10.Api.properties.baseUriParameters.name) {\n\t                    if (name === rp.universes.Universe10.Api.properties.version.name) {\n\t                        values[name] = param._node.root().wrapperNode().version();\n\t                    }\n\t                }\n\t                var value = values[name];\n\t            }\n\t            var label = _this.props.prefix == null ? name : _this.props.prefix + \": \" + name;\n\t            input = React.createElement(TextEditor, {\n\t                mini: true,\n\t                value: value,\n\t                placeholder: parameter.default(),\n\t                onChange: function (value) { return _this.props.change(name, value); }\n\t            });\n\t            return React.createElement(Block, { key: name }, React.createElement('label', null, label, parameter.required() ? ' *' : ''), input);\n\t        }));\n\t    };\n\t    return EditParameters;\n\t}(PureComponent));\n\tvar TextEditor = (function (_super) {\n\t    __extends(TextEditor, _super);\n\t    function TextEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TextEditor.prototype.componentDidMount = function () {\n\t        var editor = this.editor = document.createElement('atom-text-editor');\n\t        this.updateModel(this.props);\n\t        this.refs.container.getDOMNode().appendChild(editor);\n\t    };\n\t    TextEditor.prototype.updateModel = function (props) {\n\t        var editor = this.editor;\n\t        var model = editor.getModel();\n\t        this.cleanup();\n\t        model.setMini(props.mini);\n\t        model.setPlaceholderText(props.placeholder);\n\t        model.setGrammar(props.grammar);\n\t        model.setText(props.value || '');\n\t        if (props.readonly) {\n\t            editor.removeAttribute('tabindex');\n\t        }\n\t        else {\n\t            editor.setAttribute('tabindex', '0');\n\t        }\n\t        if (props.gutter === false) {\n\t            editor.setAttribute('gutter-hidden', '');\n\t        }\n\t        else {\n\t            editor.removeAttribute('gutter-hidden');\n\t        }\n\t        if (props.onChange) {\n\t            this.disposable = model.onDidChange(function () {\n\t                var position = model.cursors[0].getBufferPosition();\n\t                props.onChange(model.getText());\n\t                model.cursors[0].setBufferPosition(position);\n\t            });\n\t        }\n\t    };\n\t    TextEditor.prototype.cleanup = function () {\n\t        if (this.disposable) {\n\t            this.disposable.dispose();\n\t            this.disposable = null;\n\t        }\n\t    };\n\t    TextEditor.prototype.componentWillUnmount = function () {\n\t        this.cleanup();\n\t    };\n\t    TextEditor.prototype.componentDidUpdate = function () {\n\t        this.updateModel(this.props);\n\t    };\n\t    TextEditor.prototype.render = function () {\n\t        return React.createElement('div', { ref: 'container' });\n\t    };\n\t    return TextEditor;\n\t}(PureComponent));\n\tvar MarkupBlock = (function (_super) {\n\t    __extends(MarkupBlock, _super);\n\t    function MarkupBlock() {\n\t        _super.apply(this, arguments);\n\t        this.state = { visible: false };\n\t    }\n\t    MarkupBlock.prototype.render = function () {\n\t        var _this = this;\n\t        if (!this.props.content) {\n\t            return null;\n\t        }\n\t        var visible = this.state.visible;\n\t        return React.createElement(Block, { key: this.props.key }, React.createElement('a', { onClick: function () { return _this.setState({ visible: !visible }); } }, (visible ? 'Hide' : 'Show') + \" \" + this.props.title), this.props.name ? \" (\" + this.props.name + \")\" : null, visible ? React.createElement('div', { style: { marginTop: 5 } }, React.createElement(Markup, this.props)) : null);\n\t    };\n\t    return MarkupBlock;\n\t}(PureComponent));\n\tvar Markup = (function (_super) {\n\t    __extends(Markup, _super);\n\t    function Markup() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Markup.prototype.render = function () {\n\t        var _this = this;\n\t        var grammar = atomUtil.getGrammerFromMime(this.props.mime);\n\t        var content = this.props.content;\n\t        var isXml = grammar.fileTypes.indexOf('xml') > -1 || isXML(content);\n\t        var isJson = grammar.fileTypes.indexOf('json') > -1 || isJSON(content);\n\t        var isCss = grammar.fileTypes.indexOf('css') > -1;\n\t        var canPrettify = isXml || isJson || isCss;\n\t        if (this.props.state.pretty) {\n\t            try {\n\t                if (isXml) {\n\t                    content = pretty.pd.xml(content);\n\t                }\n\t                else if (isJson) {\n\t                    content = pretty.pd.json(content);\n\t                }\n\t                else if (isCss) {\n\t                    content = pretty.pd.css(content);\n\t                }\n\t            }\n\t            catch (e) {\n\t            }\n\t        }\n\t        return React.createElement(Block, null, React.createElement(TextEditor, {\n\t            value: content,\n\t            grammar: grammar,\n\t            readonly: true\n\t        }), canPrettify ? React.createElement(Block, null, React.createElement('label', null, React.createElement('input', {\n\t            type: 'checkbox',\n\t            onChange: function (e) { return _this.props.setState({ pretty: e.target.checked }); },\n\t            checked: this.props.state.pretty,\n\t            style: { marginRight: 5 }\n\t        }), React.createElement('span', null, 'Pretty data'))) : null);\n\t    };\n\t    return Markup;\n\t}(PureComponent));\n\tvar NavigateLabel = (function (_super) {\n\t    __extends(NavigateLabel, _super);\n\t    function NavigateLabel() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    NavigateLabel.prototype.getName = function (node) {\n\t        var value = node.value();\n\t        return typeof value === 'string' ? value : value.valueName();\n\t    };\n\t    NavigateLabel.prototype.render = function () {\n\t        var node = this.props.node;\n\t        // Ignore empty node values.\n\t        if (node.value() == null) {\n\t            return null;\n\t        }\n\t        var navigate = this.props.navigate;\n\t        var title = this.props.title;\n\t        var id = node.highLevel().id();\n\t        return React.createElement('span', {\n\t            className: 'highlight',\n\t            style: {\n\t                margin: '0 5px 5px 0',\n\t                cursor: 'pointer',\n\t                display: 'inline-block'\n\t            },\n\t            onClick: function () { return navigate(id); }\n\t        }, React.createElement('strong', null, title + \": \"), this.getName(node));\n\t    };\n\t    return NavigateLabel;\n\t}(PureComponent));\n\tvar ResourceTypesAndTraits = (function (_super) {\n\t    __extends(ResourceTypesAndTraits, _super);\n\t    function ResourceTypesAndTraits() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    ResourceTypesAndTraits.prototype.render = function () {\n\t        var types = [];\n\t        var node = this.props.node;\n\t        var navigate = this.props.navigate;\n\t        if ((RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node))\n\t            && node.type()) {\n\t            types.push(React.createElement(\"NavigateLabel\", { title: 'Type', key: 'type', node: node.type(), navigate: navigate }));\n\t        }\n\t        if (RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node)\n\t            || RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n\t            node.is().forEach(function (is, index) {\n\t                types.push(React.createElement(\"NavigateLabel\", { title: 'Trait', key: \"is:\" + index, node: is, navigate: navigate }));\n\t            });\n\t        }\n\t        node.securedBy().forEach(function (securedBy, index) {\n\t            types.push(React.createElement(\"NavigateLabel\", { title: 'Secured By', key: \"securedBy:\" + index, node: securedBy, navigate: navigate }));\n\t        });\n\t        return React.createElement(Block, null, types);\n\t    };\n\t    return ResourceTypesAndTraits;\n\t}(PureComponent));\n\tvar Block = (function (_super) {\n\t    __extends(Block, _super);\n\t    function Block() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Block.prototype.render = function () {\n\t        return React.createElement('div', extend(this.props, {\n\t            className: classnames(this.props.className, 'block')\n\t        }), this.props.children);\n\t    };\n\t    return Block;\n\t}(PureComponent));\n\tvar InsetPanel = (function (_super) {\n\t    __extends(InsetPanel, _super);\n\t    function InsetPanel() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    InsetPanel.prototype.render = function () {\n\t        return React.createElement(Block, null, React.createElement('atom-panel', null, React.createElement('div', { className: 'padded' }, this.props.children)));\n\t    };\n\t    return InsetPanel;\n\t}(PureComponent));\n\tvar Icon = (function (_super) {\n\t    __extends(Icon, _super);\n\t    function Icon() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    Icon.prototype.render = function () {\n\t        return React.createElement('i', {\n\t            className: classnames('icon icon-' + this.props.name, this.props.className)\n\t        });\n\t    };\n\t    return Icon;\n\t}(PureComponent));\n\tvar OpenInEditor = (function (_super) {\n\t    __extends(OpenInEditor, _super);\n\t    function OpenInEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    OpenInEditor.prototype.openInEditor = function (node) {\n\t        var editors = atom.workspace.getTextEditors();\n\t        var path = node.unit().absolutePath();\n\t        var start = node.start();\n\t        // TODO(blakeembrey): Review logic if atom/atom#9258 lands.\n\t        function resolve(editor) {\n\t            var position = editor.getBuffer().positionForCharacterIndex(start);\n\t            editor.setCursorBufferPosition(position);\n\t        }\n\t        var split;\n\t        // Split is disabled for the console, just open it without any bells.\n\t        if (atom.config.get('api-workbench.openConsoleInSplitPane')) {\n\t            // Attempt to render onto the preferred side of the console.\n\t            var panes = atom.workspace.getPanes();\n\t            var activePane = atom.workspace.getActivePane();\n\t            if (panes.length === 1) {\n\t                split = 'left';\n\t                activePane.splitLeft({});\n\t            }\n\t            else {\n\t                split = activePane === panes[0] ? 'right' : 'left';\n\t            }\n\t        }\n\t        atom.workspace.open(path, { searchAllPanes: true, split: split }).then(resolve);\n\t    };\n\t    OpenInEditor.prototype.render = function () {\n\t        var _this = this;\n\t        var lowLevel = this.props.node.highLevel().lowLevel();\n\t        var hasUnit = lowLevel.unit() != null;\n\t        if (!hasUnit) {\n\t            return React.createElement('span', null, this.props.children);\n\t        }\n\t        return React.createElement('a', {\n\t            onClick: function () { return _this.openInEditor(lowLevel); }\n\t        }, this.props.children);\n\t    };\n\t    return OpenInEditor;\n\t}(PureComponent));\n\tvar MarkdownBlock = (function (_super) {\n\t    __extends(MarkdownBlock, _super);\n\t    function MarkdownBlock() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MarkdownBlock.prototype.render = function () {\n\t        var content = this.props.content;\n\t        if (content == null) {\n\t            return null;\n\t        }\n\t        return React.createElement(Block, { dangerouslySetInnerHTML: { __html: marked(content) } });\n\t    };\n\t    return MarkdownBlock;\n\t}(PureComponent));\n\tfunction plural(count, singular, plural) {\n\t    return count === 1 ? singular : plural;\n\t}\n\tfunction getCaseless(obj, key) {\n\t    var keys = Object.keys(obj);\n\t    var match = key.toLowerCase();\n\t    for (var i = 0; i < keys.length; i++) {\n\t        if (keys[i].toLowerCase() === match) {\n\t            return obj[keys[i]];\n\t        }\n\t    }\n\t}\n\tfunction getNodeLabel(node) {\n\t    var name = node.getKind() === highLevelAst.NodeKind.ATTRIBUTE ? node.value() : node.name();\n\t    if (typeof name !== 'string') {\n\t        name = name.valueName();\n\t    }\n\t    if (!name && node.getKind() === highLevelAst.NodeKind.NODE) {\n\t        var wrapper = node.wrapperNode();\n\t        if (RamlWrapper1.isDocumentationItem(wrapper) ||\n\t            RamlWrapper08.isDocumentationItem(wrapper)) {\n\t            return wrapper.title();\n\t        }\n\t        if (RamlWrapper1.isApi(wrapper) || RamlWrapper08.isApi(wrapper) ||\n\t            RamlWrapper1.isExtension(wrapper) || RamlWrapper1.isOverlay(wrapper)) {\n\t            return 'Home';\n\t        }\n\t    }\n\t    return name;\n\t}\n\tfunction isXML(content) {\n\t    if (typeof content !== 'string') {\n\t        return false;\n\t    }\n\t    var trimmed = content.trim();\n\t    if (trimmed.length < 1) {\n\t        return false;\n\t    }\n\t    if (trimmed.charAt(0) === \"<\" && trimmed.charAt(trimmed.length - 1) === \">\") {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\tfunction isJSON(content) {\n\t    try {\n\t        JSON.parse(content);\n\t        return true;\n\t    }\n\t    catch (exception) {\n\t        return false;\n\t    }\n\t}\n\tfunction localParameters(node) {\n\t    var baseUriParams = node.ownerApi().baseUriParameters().map(function (param) { return param.name(); });\n\t    return filter(node.absoluteUriParameters(), function (param) { return baseUriParams.indexOf(param.name()) < 0; });\n\t}\n\tfunction filter(array, condition) {\n\t    var result = [];\n\t    array.forEach(function (element) { return condition(element) && result.push(element); });\n\t    return result;\n\t}\n\t\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = [\n\t\t{\n\t\t\t\"id\": 31423945,\n\t\t\t\"name\": \"AmazonS3\",\n\t\t\t\"full_name\": \"raml-apis/AmazonS3\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AmazonS3\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:35Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:35Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:01Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AmazonS3.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AmazonS3.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AmazonS3.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 264,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423955,\n\t\t\t\"name\": \"Box\",\n\t\t\t\"full_name\": \"raml-apis/Box\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Box\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Box\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Box/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Box/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Box/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Box/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Box/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Box/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Box/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Box/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Box/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Box/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Box/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Box/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Box/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Box/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Box/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Box/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Box/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Box/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Box/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Box/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Box/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Box/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Box/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Box/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Box/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Box/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Box/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Box/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Box/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Box/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Box/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Box/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Box/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Box/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Box/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:41Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:41Z\",\n\t\t\t\"pushed_at\": \"2015-07-28T23:37:53Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Box.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Box.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Box.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Box\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423957,\n\t\t\t\"name\": \"Bufferapp\",\n\t\t\t\"full_name\": \"raml-apis/Bufferapp\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bufferapp\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:42Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:08:44Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:27Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Bufferapp.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Bufferapp.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Bufferapp.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 172,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423973,\n\t\t\t\"name\": \"FuelEconomy\",\n\t\t\t\"full_name\": \"raml-apis/FuelEconomy\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/FuelEconomy\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"pushed_at\": \"2015-04-04T00:32:59Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/FuelEconomy.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/FuelEconomy.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/FuelEconomy.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 172,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423980,\n\t\t\t\"name\": \"GoogleContacts\",\n\t\t\t\"full_name\": \"raml-apis/GoogleContacts\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleContacts\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:52Z\",\n\t\t\t\"updated_at\": \"2015-10-31T15:35:32Z\",\n\t\t\t\"pushed_at\": \"2015-05-21T12:01:57Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleContacts.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleContacts.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleContacts.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 260,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423986,\n\t\t\t\"name\": \"Instagram\",\n\t\t\t\"full_name\": \"raml-apis/Instagram\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Instagram\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Instagram/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Instagram/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Instagram/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Instagram/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Instagram/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Instagram/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Instagram/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Instagram/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Instagram/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Instagram/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Instagram/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Instagram/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Instagram/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Instagram/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Instagram/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Instagram/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Instagram/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Instagram/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Instagram/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Instagram/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Instagram/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Instagram/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Instagram/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:56Z\",\n\t\t\t\"updated_at\": \"2015-09-08T12:55:09Z\",\n\t\t\t\"pushed_at\": \"2015-10-14T07:16:39Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Instagram.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Instagram.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Instagram.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 187,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423979,\n\t\t\t\"name\": \"GoogleCalendar\",\n\t\t\t\"full_name\": \"raml-apis/GoogleCalendar\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:51Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:09:48Z\",\n\t\t\t\"pushed_at\": \"2015-05-21T02:57:16Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleCalendar.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 252,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423964,\n\t\t\t\"name\": \"Facebook\",\n\t\t\t\"full_name\": \"raml-apis/Facebook\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Facebook\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Facebook/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Facebook/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Facebook/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Facebook/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Facebook/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Facebook/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Facebook/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Facebook/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Facebook/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Facebook/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Facebook/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Facebook/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Facebook/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Facebook/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Facebook/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Facebook/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Facebook/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Facebook/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Facebook/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Facebook/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Facebook/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Facebook/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Facebook/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:45Z\",\n\t\t\t\"updated_at\": \"2015-10-21T23:11:31Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T13:46:05Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Facebook.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Facebook.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Facebook.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 272,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424019,\n\t\t\t\"name\": \"Stormpath\",\n\t\t\t\"full_name\": \"raml-apis/Stormpath\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stormpath\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stormpath/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stormpath/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stormpath/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stormpath/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stormpath/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stormpath/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stormpath/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stormpath/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stormpath/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stormpath/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stormpath/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stormpath/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stormpath/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stormpath/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stormpath/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stormpath/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:33Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Stormpath.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Stormpath.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Stormpath.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 188,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424034,\n\t\t\t\"name\": \"XKCD\",\n\t\t\t\"full_name\": \"raml-apis/XKCD\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/XKCD\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/XKCD/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/XKCD/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/XKCD/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/XKCD/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/XKCD/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/XKCD/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/XKCD/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/XKCD/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/XKCD/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/XKCD/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/XKCD/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/XKCD/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/XKCD/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/XKCD/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/XKCD/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/XKCD/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/XKCD/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/XKCD/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/XKCD/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/XKCD/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/XKCD/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/XKCD/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/XKCD/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:21Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:53:13Z\",\n\t\t\t\"pushed_at\": \"2015-08-07T05:17:33Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/XKCD.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/XKCD.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/XKCD.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 148,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424012,\n\t\t\t\"name\": \"SlideShare\",\n\t\t\t\"full_name\": \"raml-apis/SlideShare\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SlideShare\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SlideShare/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SlideShare/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SlideShare/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SlideShare/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SlideShare/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SlideShare/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SlideShare/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SlideShare/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SlideShare/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SlideShare/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SlideShare/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SlideShare/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SlideShare/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SlideShare/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SlideShare/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SlideShare/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:11Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:11Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:13Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SlideShare.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SlideShare.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SlideShare.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424024,\n\t\t\t\"name\": \"Twilio\",\n\t\t\t\"full_name\": \"raml-apis/Twilio\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twilio\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twilio/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twilio/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twilio/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twilio/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twilio/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twilio/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twilio/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twilio/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twilio/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twilio/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twilio/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twilio/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twilio/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twilio/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twilio/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twilio/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twilio/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twilio/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twilio/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twilio/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twilio/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twilio/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twilio/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:16Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:42:14Z\",\n\t\t\t\"pushed_at\": \"2015-08-21T10:07:35Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twilio.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twilio.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twilio.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 340,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424029,\n\t\t\t\"name\": \"WeatherUnderground\",\n\t\t\t\"full_name\": \"raml-apis/WeatherUnderground\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:19Z\",\n\t\t\t\"updated_at\": \"2015-10-31T15:36:51Z\",\n\t\t\t\"pushed_at\": \"2015-07-30T15:19:32Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/WeatherUnderground.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424039,\n\t\t\t\"name\": \"Zuora\",\n\t\t\t\"full_name\": \"raml-apis/Zuora\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zuora\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zuora/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zuora/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zuora/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zuora/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zuora/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zuora/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zuora/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zuora/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zuora/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zuora/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zuora/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zuora/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zuora/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zuora/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zuora/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zuora/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zuora/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zuora/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zuora/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zuora/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zuora/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zuora/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zuora/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:43:10Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:34Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zuora.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zuora.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zuora.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 184,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423938,\n\t\t\t\"name\": \"AccuWeather\",\n\t\t\t\"full_name\": \"raml-apis/AccuWeather\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AccuWeather\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:18Z\",\n\t\t\t\"pushed_at\": \"2015-11-06T07:20:20Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AccuWeather.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AccuWeather.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AccuWeather.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 278,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424026,\n\t\t\t\"name\": \"Twitch\",\n\t\t\t\"full_name\": \"raml-apis/Twitch\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitch\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitch/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitch/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitch/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitch/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitch/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitch/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitch/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitch/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitch/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitch/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitch/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitch/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitch/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitch/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitch/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitch/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitch/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitch/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitch/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitch/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitch/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitch/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitch/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:17Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:17Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:49Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twitch.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitch.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twitch.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423975,\n\t\t\t\"name\": \"Geonames\",\n\t\t\t\"full_name\": \"raml-apis/Geonames\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Geonames\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Geonames/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Geonames/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Geonames/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Geonames/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Geonames/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Geonames/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Geonames/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Geonames/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Geonames/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Geonames/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Geonames/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Geonames/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Geonames/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Geonames/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Geonames/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Geonames/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Geonames/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Geonames/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Geonames/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Geonames/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Geonames/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Geonames/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Geonames/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\t\"updated_at\": \"2015-03-16T03:36:21Z\",\n\t\t\t\"pushed_at\": \"2015-07-24T13:32:52Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Geonames.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Geonames.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Geonames.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 1,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 1,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 34848402,\n\t\t\t\"name\": \"Uber\",\n\t\t\t\"full_name\": \"raml-apis/Uber\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Uber\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Uber/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Uber/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Uber/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Uber/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Uber/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Uber/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Uber/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Uber/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Uber/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Uber/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Uber/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Uber/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Uber/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Uber/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Uber/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Uber/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Uber/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Uber/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Uber/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Uber/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Uber/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Uber/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Uber/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Uber/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Uber/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Uber/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Uber/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Uber/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Uber/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Uber/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Uber/releases{/id}\",\n\t\t\t\"created_at\": \"2015-04-30T10:18:59Z\",\n\t\t\t\"updated_at\": \"2015-04-30T10:18:59Z\",\n\t\t\t\"pushed_at\": \"2015-10-15T05:35:23Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Uber.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Uber.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Uber.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 193,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 3,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 3,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"staging\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423987,\n\t\t\t\"name\": \"Jira\",\n\t\t\t\"full_name\": \"raml-apis/Jira\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Jira\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Jira/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Jira/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Jira/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Jira/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Jira/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Jira/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Jira/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Jira/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Jira/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Jira/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Jira/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Jira/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Jira/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Jira/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Jira/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Jira/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Jira/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Jira/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Jira/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Jira/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Jira/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Jira/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Jira/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Jira/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Jira/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Jira/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Jira/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Jira/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Jira/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Jira/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Jira/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:57Z\",\n\t\t\t\"updated_at\": \"2015-09-30T16:37:10Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:12:56Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Jira.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Jira.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Jira.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 240,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424011,\n\t\t\t\"name\": \"Slack\",\n\t\t\t\"full_name\": \"raml-apis/Slack\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Slack\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Slack/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Slack/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Slack/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Slack/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Slack/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Slack/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Slack/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Slack/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Slack/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Slack/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Slack/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Slack/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Slack/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Slack/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Slack/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Slack/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Slack/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Slack/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Slack/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Slack/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Slack/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Slack/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Slack/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Slack/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Slack/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Slack/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Slack/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Slack/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Slack/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Slack/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Slack/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:10Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:12:05Z\",\n\t\t\t\"pushed_at\": \"2015-10-14T05:29:57Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Slack.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Slack.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Slack.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 237,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423977,\n\t\t\t\"name\": \"GitHub\",\n\t\t\t\"full_name\": \"raml-apis/GitHub\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GitHub\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GitHub/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GitHub/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GitHub/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GitHub/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GitHub/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GitHub/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GitHub/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GitHub/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GitHub/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GitHub/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GitHub/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GitHub/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GitHub/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GitHub/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GitHub/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GitHub/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GitHub/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GitHub/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GitHub/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GitHub/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GitHub/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GitHub/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GitHub/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:50Z\",\n\t\t\t\"updated_at\": \"2015-11-04T16:18:02Z\",\n\t\t\t\"pushed_at\": \"2015-10-16T09:54:09Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GitHub.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GitHub.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GitHub.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 366,\n\t\t\t\"stargazers_count\": 1,\n\t\t\t\"watchers_count\": 1,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 2,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 2,\n\t\t\t\"watchers\": 1,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423990,\n\t\t\t\"name\": \"LinkedIn\",\n\t\t\t\"full_name\": \"raml-apis/LinkedIn\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/LinkedIn\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:59Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:11:03Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:13:06Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/LinkedIn.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/LinkedIn.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/LinkedIn.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 184,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424036,\n\t\t\t\"name\": \"Yammer\",\n\t\t\t\"full_name\": \"raml-apis/Yammer\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Yammer\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Yammer/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Yammer/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Yammer/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Yammer/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Yammer/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Yammer/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Yammer/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Yammer/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Yammer/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Yammer/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Yammer/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Yammer/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Yammer/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Yammer/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Yammer/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Yammer/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Yammer/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Yammer/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Yammer/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Yammer/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Yammer/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Yammer/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Yammer/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:22Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:52:23Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:18Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Yammer.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Yammer.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Yammer.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 168,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423985,\n\t\t\t\"name\": \"HealthCare\",\n\t\t\t\"full_name\": \"raml-apis/HealthCare\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/HealthCare\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/HealthCare/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/HealthCare/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/HealthCare/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/HealthCare/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/HealthCare/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/HealthCare/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/HealthCare/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/HealthCare/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/HealthCare/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/HealthCare/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/HealthCare/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/HealthCare/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/HealthCare/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/HealthCare/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/HealthCare/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/HealthCare/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:55Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:55Z\",\n\t\t\t\"pushed_at\": \"2015-07-30T16:44:45Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/HealthCare.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/HealthCare.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/HealthCare.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 200,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423954,\n\t\t\t\"name\": \"Blogger\",\n\t\t\t\"full_name\": \"raml-apis/Blogger\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Blogger\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Blogger/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Blogger/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Blogger/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Blogger/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Blogger/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Blogger/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Blogger/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Blogger/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Blogger/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Blogger/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Blogger/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Blogger/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Blogger/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Blogger/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Blogger/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Blogger/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Blogger/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Blogger/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Blogger/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Blogger/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Blogger/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Blogger/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Blogger/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:40Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:40Z\",\n\t\t\t\"pushed_at\": \"2015-05-28T11:21:49Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Blogger.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Blogger.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Blogger.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 200,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 41861038,\n\t\t\t\"name\": \"SalesforceChatter\",\n\t\t\t\"full_name\": \"raml-apis/SalesforceChatter\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/releases{/id}\",\n\t\t\t\"created_at\": \"2015-09-03T13:24:46Z\",\n\t\t\t\"updated_at\": \"2015-09-03T13:36:51Z\",\n\t\t\t\"pushed_at\": \"2015-10-22T12:08:05Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SalesforceChatter.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 412,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"RAML\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"production\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423959,\n\t\t\t\"name\": \"Elasticsearch\",\n\t\t\t\"full_name\": \"raml-apis/Elasticsearch\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Elasticsearch\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:43Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:43Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:32Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Elasticsearch.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Elasticsearch.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Elasticsearch.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 228,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423981,\n\t\t\t\"name\": \"GoogleDrive\",\n\t\t\t\"full_name\": \"raml-apis/GoogleDrive\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleDrive\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:53Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:53Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:30:50Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleDrive.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleDrive.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleDrive.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 268,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424001,\n\t\t\t\"name\": \"PagerDuty\",\n\t\t\t\"full_name\": \"raml-apis/PagerDuty\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/PagerDuty\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:04Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:43:49Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:37:18Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/PagerDuty.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/PagerDuty.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/PagerDuty.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 232,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424037,\n\t\t\t\"name\": \"Zendesk\",\n\t\t\t\"full_name\": \"raml-apis/Zendesk\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zendesk\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zendesk/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zendesk/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zendesk/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zendesk/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zendesk/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zendesk/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zendesk/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zendesk/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zendesk/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zendesk/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zendesk/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zendesk/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zendesk/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zendesk/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zendesk/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zendesk/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:23Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:58Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:15:23Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zendesk.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zendesk.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zendesk.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 320,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423982,\n\t\t\t\"name\": \"GoogleMail\",\n\t\t\t\"full_name\": \"raml-apis/GoogleMail\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleMail\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:54Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:10:17Z\",\n\t\t\t\"pushed_at\": \"2015-10-15T11:27:34Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/GoogleMail.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleMail.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleMail.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 208,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423998,\n\t\t\t\"name\": \"NewRelic\",\n\t\t\t\"full_name\": \"raml-apis/NewRelic\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/NewRelic\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/NewRelic/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/NewRelic/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/NewRelic/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/NewRelic/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/NewRelic/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/NewRelic/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/NewRelic/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/NewRelic/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/NewRelic/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/NewRelic/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/NewRelic/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/NewRelic/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/NewRelic/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/NewRelic/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/NewRelic/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/NewRelic/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:02Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:02Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:13:24Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/NewRelic.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/NewRelic.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/NewRelic.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 248,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424027,\n\t\t\t\"name\": \"Twitter\",\n\t\t\t\"full_name\": \"raml-apis/Twitter\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitter\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitter/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitter/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitter/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitter/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitter/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitter/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitter/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitter/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitter/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitter/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitter/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitter/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitter/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitter/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitter/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitter/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitter/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitter/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitter/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitter/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitter/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitter/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitter/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:18Z\",\n\t\t\t\"updated_at\": \"2015-04-28T22:37:52Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:26:44Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Twitter.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitter.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Twitter.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 256,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424038,\n\t\t\t\"name\": \"Zillow\",\n\t\t\t\"full_name\": \"raml-apis/Zillow\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zillow\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zillow/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zillow/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zillow/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zillow/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zillow/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zillow/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zillow/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zillow/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zillow/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zillow/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zillow/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zillow/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zillow/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zillow/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zillow/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zillow/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zillow/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zillow/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zillow/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zillow/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zillow/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zillow/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zillow/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\t\"updated_at\": \"2015-03-09T16:51:44Z\",\n\t\t\t\"pushed_at\": \"2015-07-24T13:33:15Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Zillow.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Zillow.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Zillow.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 232,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 34780551,\n\t\t\t\"name\": \"FlightStats\",\n\t\t\t\"full_name\": \"raml-apis/FlightStats\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\t\"description\": \"\",\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/FlightStats\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FlightStats/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FlightStats/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FlightStats/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FlightStats/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FlightStats/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FlightStats/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FlightStats/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FlightStats/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FlightStats/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FlightStats/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FlightStats/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FlightStats/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FlightStats/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FlightStats/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FlightStats/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FlightStats/releases{/id}\",\n\t\t\t\"created_at\": \"2015-04-29T08:03:54Z\",\n\t\t\t\"updated_at\": \"2015-04-29T08:03:54Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:10:56Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/FlightStats.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/FlightStats.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/FlightStats.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 460,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": true,\n\t\t\t\"has_downloads\": true,\n\t\t\t\"has_wiki\": true,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"staging\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424005,\n\t\t\t\"name\": \"PivotalTracker\",\n\t\t\t\"full_name\": \"raml-apis/PivotalTracker\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/PivotalTracker\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:07Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:07Z\",\n\t\t\t\"pushed_at\": \"2015-07-06T14:50:22Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/PivotalTracker.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/PivotalTracker.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/PivotalTracker.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 196,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424014,\n\t\t\t\"name\": \"SmartSheet\",\n\t\t\t\"full_name\": \"raml-apis/SmartSheet\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/SmartSheet\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:12Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:12Z\",\n\t\t\t\"pushed_at\": \"2015-05-22T15:01:12Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/SmartSheet.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/SmartSheet.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/SmartSheet.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424018,\n\t\t\t\"name\": \"StackExchange\",\n\t\t\t\"full_name\": \"raml-apis/StackExchange\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/StackExchange\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/StackExchange/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/StackExchange/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/StackExchange/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/StackExchange/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/StackExchange/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/StackExchange/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/StackExchange/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/StackExchange/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/StackExchange/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/StackExchange/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/StackExchange/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/StackExchange/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/StackExchange/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/StackExchange/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/StackExchange/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/StackExchange/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:28Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/StackExchange.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/StackExchange.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/StackExchange.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424002,\n\t\t\t\"name\": \"Parse\",\n\t\t\t\"full_name\": \"raml-apis/Parse\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Parse\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Parse/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Parse/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Parse/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Parse/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Parse/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Parse/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Parse/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Parse/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Parse/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Parse/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Parse/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Parse/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Parse/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Parse/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Parse/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Parse/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Parse/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Parse/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Parse/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Parse/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Parse/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Parse/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Parse/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Parse/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Parse/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Parse/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Parse/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Parse/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Parse/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Parse/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Parse/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:05Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:05Z\",\n\t\t\t\"pushed_at\": \"2015-07-28T19:32:46Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Parse.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Parse.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Parse.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 224,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423952,\n\t\t\t\"name\": \"Bitly\",\n\t\t\t\"full_name\": \"raml-apis/Bitly\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bitly\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bitly/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bitly/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bitly/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bitly/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bitly/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bitly/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bitly/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bitly/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bitly/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bitly/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bitly/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bitly/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bitly/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bitly/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bitly/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bitly/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bitly/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bitly/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bitly/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bitly/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bitly/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bitly/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bitly/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"updated_at\": \"2015-02-27T15:08:16Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:12Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Bitly.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Bitly.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Bitly.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 204,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": \"Java\",\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424021,\n\t\t\t\"name\": \"Stripe\",\n\t\t\t\"full_name\": \"raml-apis/Stripe\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stripe\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stripe/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stripe/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stripe/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stripe/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stripe/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stripe/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stripe/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stripe/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stripe/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stripe/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stripe/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stripe/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stripe/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stripe/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stripe/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stripe/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stripe/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stripe/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stripe/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stripe/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stripe/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stripe/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stripe/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:15Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:15Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:38Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Stripe.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Stripe.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Stripe.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 380,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31423951,\n\t\t\t\"name\": \"AzureTableStorage\",\n\t\t\t\"full_name\": \"raml-apis/AzureTableStorage\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:51:39Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:11:07Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/AzureTableStorage.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 152,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 1,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 1,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424016,\n\t\t\t\"name\": \"Squareup\",\n\t\t\t\"full_name\": \"raml-apis/Squareup\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Squareup\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Squareup/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Squareup/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Squareup/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Squareup/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Squareup/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Squareup/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Squareup/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Squareup/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Squareup/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Squareup/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Squareup/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Squareup/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Squareup/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Squareup/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Squareup/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Squareup/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Squareup/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Squareup/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Squareup/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Squareup/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Squareup/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Squareup/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Squareup/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:13Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:13Z\",\n\t\t\t\"pushed_at\": \"2015-03-16T16:14:08Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Squareup.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Squareup.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Squareup.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 176,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": 31424009,\n\t\t\t\"name\": \"Salesforce\",\n\t\t\t\"full_name\": \"raml-apis/Salesforce\",\n\t\t\t\"owner\": {\n\t\t\t\t\"login\": \"raml-apis\",\n\t\t\t\t\"id\": 11064836,\n\t\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\t\"gravatar_id\": \"\",\n\t\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\t\"type\": \"Organization\",\n\t\t\t\t\"site_admin\": false\n\t\t\t},\n\t\t\t\"private\": false,\n\t\t\t\"html_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\t\"description\": null,\n\t\t\t\"fork\": false,\n\t\t\t\"url\": \"https://api.github.com/repos/raml-apis/Salesforce\",\n\t\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/forks\",\n\t\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Salesforce/keys{/key_id}\",\n\t\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Salesforce/collaborators{/collaborator}\",\n\t\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Salesforce/teams\",\n\t\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/hooks\",\n\t\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/events{/number}\",\n\t\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/events\",\n\t\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/assignees{/user}\",\n\t\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Salesforce/branches{/branch}\",\n\t\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/tags\",\n\t\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/blobs{/sha}\",\n\t\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/tags{/sha}\",\n\t\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/refs{/sha}\",\n\t\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/trees{/sha}\",\n\t\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Salesforce/statuses/{sha}\",\n\t\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Salesforce/languages\",\n\t\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/stargazers\",\n\t\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contributors\",\n\t\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscribers\",\n\t\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscription\",\n\t\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/commits{/sha}\",\n\t\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/commits{/sha}\",\n\t\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Salesforce/comments{/number}\",\n\t\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/comments{/number}\",\n\t\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contents/{+path}\",\n\t\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Salesforce/compare/{base}...{head}\",\n\t\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Salesforce/merges\",\n\t\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Salesforce/{archive_format}{/ref}\",\n\t\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Salesforce/downloads\",\n\t\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues{/number}\",\n\t\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Salesforce/pulls{/number}\",\n\t\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Salesforce/milestones{/number}\",\n\t\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Salesforce/notifications{?since,all,participating}\",\n\t\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Salesforce/labels{/name}\",\n\t\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Salesforce/releases{/id}\",\n\t\t\t\"created_at\": \"2015-02-27T14:52:09Z\",\n\t\t\t\"updated_at\": \"2015-02-27T14:52:09Z\",\n\t\t\t\"pushed_at\": \"2015-04-01T22:14:02Z\",\n\t\t\t\"git_url\": \"git://github.com/raml-apis/Salesforce.git\",\n\t\t\t\"ssh_url\": \"git@github.com:raml-apis/Salesforce.git\",\n\t\t\t\"clone_url\": \"https://github.com/raml-apis/Salesforce.git\",\n\t\t\t\"svn_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\t\"homepage\": null,\n\t\t\t\"size\": 180,\n\t\t\t\"stargazers_count\": 0,\n\t\t\t\"watchers_count\": 0,\n\t\t\t\"language\": null,\n\t\t\t\"has_issues\": false,\n\t\t\t\"has_downloads\": false,\n\t\t\t\"has_wiki\": false,\n\t\t\t\"has_pages\": false,\n\t\t\t\"forks_count\": 0,\n\t\t\t\"mirror_url\": null,\n\t\t\t\"open_issues_count\": 0,\n\t\t\t\"forks\": 0,\n\t\t\t\"open_issues\": 0,\n\t\t\t\"watchers\": 0,\n\t\t\t\"default_branch\": \"master\",\n\t\t\t\"permissions\": {\n\t\t\t\t\"admin\": false,\n\t\t\t\t\"push\": false,\n\t\t\t\t\"pull\": true\n\t\t\t}\n\t\t}\n\t];\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar rp = __webpack_require__(23);\n\tvar def = rp.ds;\n\tvar UI = __webpack_require__(19);\n\tvar schemautil = rp.schema;\n\tvar editorTools = __webpack_require__(5);\n\tvar details2 = __webpack_require__(72);\n\tvar HTTPANDHTTPS = \"HTTP, HTTPS\";\n\tvar HTTPHTTPS = \"HTTP/HTTPS\";\n\texports.nodes = {\n\t    Api: {\n\t        properties: [\"title\", \"version\", \"baseUri\", \"mediaType\", \"protocols\"],\n\t        actions: []\n\t    },\n\t    Resource: {\n\t        properties: [\"relativeUri\", \"displayName\", \"description\", \"is\", \"type\"]\n\t    },\n\t    Method: {\n\t        properties: [\"method\", \"displayName\", \"description\", \"is\", \"type\", \"protocols\", \"securedBy\"]\n\t    },\n\t    DataElement: {\n\t        properties: [\"name\", \"displayName\", \"description\", \"default\", \"required\"]\n\t    },\n\t    Response: {\n\t        properties: [\"code\", \"description\"]\n\t    }\n\t};\n\texports.filterOut = {\n\t    properties: [\"location\", \"annotations\", \"repeat\", \"locationKind\", \"signature\"]\n\t};\n\t//export function property2(node: hl.IHighLevelNode, name: string, descriptionLabel?: UI.TextElement<any>, updateTextOnDone: boolean = false) {\n\t//    var pinfo = propertyInfo(node, name);\n\t//\n\t//    return property(name, pinfo.required, pinfo.type, pinfo.value, pinfo.values, node, descriptionLabel, updateTextOnDone);\n\t//}\n\tvar focusedPropertyName = null;\n\tvar focusedPosition = -1;\n\tvar toFocus = null;\n\tfunction updateDetailsPanel(node, panel, updateTextOnDone) {\n\t    if (updateTextOnDone === void 0) { updateTextOnDone = false; }\n\t    panel.clear();\n\t    var cfg = atom.config;\n\t    var l = atom.styles.emitter.handlersByEventName;\n\t    var sadd = [].concat(l['did-add-style-element']);\n\t    var sremove = [].concat(l['did-remove-style-element']);\n\t    var schange = [].concat(l['did-update-style-element']);\n\t    var cfgCh = [].concat(cfg.emitter.handlersByEventName['did-change']);\n\t    var grammars = atom.grammars.emitter.handlersByEventName;\n\t    var addGrammar = [].concat(grammars[\"did-add-grammar\"]);\n\t    var updateGrammar = [].concat(grammars[\"did-update-grammar\"]);\n\t    var emptyGrammarListeners = [].concat(atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"]);\n\t    try {\n\t        var empty = true;\n\t        var pcmp = function (a, b) {\n\t            var ap = a.getAdapter(def.RAMLPropertyService).priority(), bp = b.getAdapter(def.RAMLPropertyService).priority();\n\t            if (ap != bp)\n\t                return bp - ap;\n\t            else\n\t                return a.nameId().localeCompare(b.nameId());\n\t        };\n\t        if (false) {\n\t            var info = exports.nodes[node.definition().nameId()];\n\t            info.properties.forEach(function (pn) {\n\t                try {\n\t                    //panel.addChild(property2(node, pn, <UI.TextElement<any>> descLabel2, updateTextOnDone));\n\t                    empty = false;\n\t                }\n\t                catch (e) {\n\t                    console.log(\"Error while updating details panel for node \", node, \"(property \", pn, \"): \", e);\n\t                }\n\t            });\n\t        }\n\t        else {\n\t            var item = details2.buildItem(node, false);\n\t            item.addListener(function (x) {\n\t                editorTools.aquireManager().updateText(null);\n\t            });\n\t            var rend;\n\t            try {\n\t                rend = item.render({});\n\t            }\n\t            finally {\n\t                if (exports.oldItem) {\n\t                    exports.oldItem.detach();\n\t                }\n\t                exports.oldItem = item;\n\t                if (rend) {\n\t                    panel.addChild(rend);\n\t                }\n\t                empty = false;\n\t            }\n\t        }\n\t        if (toFocus) {\n\t            var field = toFocus.getActualField().ui();\n\t            field.focus();\n\t            field.getModel().setCursorBufferPosition(focusedPosition);\n\t            toFocus = null;\n\t            focusedPosition = null;\n\t            focusedPropertyName = null;\n\t        }\n\t        if (empty) {\n\t            var errLabel = UI.h3(\"Object `\" + node.name() + \"` has no additional properties.\");\n\t            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n\t            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n\t            panel.addChild(errLabel);\n\t        }\n\t        ;\n\t    }\n\t    finally {\n\t        cfg.emitter.handlersByEventName['did-change'] = cfgCh;\n\t        l['did-add-style-element'] = sadd;\n\t        l['did-remove-style-element'] = sremove;\n\t        l['did-update-style-element'] = schange;\n\t        grammars[\"did-add-grammar\"] = addGrammar;\n\t        grammars[\"did-update-grammar\"] = updateGrammar;\n\t        atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"] = emptyGrammarListeners;\n\t    }\n\t}\n\texports.updateDetailsPanel = updateDetailsPanel;\n\t//export function property(name: string, required: boolean, type: string, value: string, values: any[], node: hl.IHighLevelNode, descriptionLabel: UI.TextElement<any>, updateText: boolean = false) {\n\t//    var bonclick = (e)=>{};\n\t//    var attr = node.attr(name);\n\t//    var useModalEditor = false;\n\t//\n\t//    var tfValue = new UI.BasicBinding(dialogs.getStringValue(value));\n\t//    var updateViewModel = function(value) {\n\t//        if (updateText) editorTools.aquireManager().updateText(node.lowLevel());\n\t//\n\t//        fire = false;\n\t//        if (type==\"protocols\"){\n\t//            if (value==HTTPANDHTTPS){\n\t//                value=HTTPHTTPS\n\t//            }\n\t//        }\n\t//        tfValue.set(value);\n\t//        fire = true;\n\t//    }\n\t//    var disabledMessage: string = null;\n\t//    var res;\n\t//    switch (type) {\n\t//        case 'markdown':\n\t//            bonclick = dialogs.markdown(name, values, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(value = newValue);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'schema':\n\t//            bonclick = dialogs.schemaEditDialog(name, values.length > 0 ? values[0] : value, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(newValue);\n\t//                if (updateText) editorTools.aquireManager().updateText();\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'schexample':\n\t//            bonclick = dialogs.exampleEditorDialog(name, values[1], values[0], (newValue) => {\n\t//                var value = newValue;\n\t//                if (fs.exists(newValue))\n\t//                    value = \"!include \" + path.relative(node.lowLevel().unit().path(), newValue);\n\t//                node.attrOrCreate(name).setValue(value);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'enum':\n\t//            bonclick = dialogs.enumEditDialog(name, values, (values)=>{\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//                values.forEach(val => node.attrOrCreate(name).addValue(val));\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            useModalEditor = true;\n\t//            break;\n\t//        case 'protocols':\n\t//            break;\n\t//        case 'type':\n\t//            bonclick = dialogs.typeEditDialog(name, value, node, (newValue) => {\n\t//                node.attrOrCreate(name).setValue(newValue);\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//            if (editorTools.aquireManager().ast.elementsOfKind('resourceTypes').length < 1) disabledMessage = \"No resource types defined\";\n\t//            else useModalEditor = true;\n\t//            break;\n\t//        case 'trait':\n\t//            bonclick = dialogs.traitsEditDialog(name, values, node, (newTraits) => {\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//\n\t//                newTraits\n\t//                    .filter(trait => trait.enabled)\n\t//                    .filter(trait => typeof trait.value == \"string\") // FIXME should only be trait => trait.enabled\n\t//                    .forEach(trait => node.attrOrCreate(name).addValue(trait.value));\n\t//\n\t//                updateViewModel(stringView(node, name));\n\t//            });\n\t//\n\t//            useModalEditor = true;\n\t//            break;\n\t//        default:\n\t//    }\n\t//\n\t//    var fire = true;\n\t//    var updateValueDeferred = (newValue)=>{ uvdTimeout = 0; }\n\t//\n\t//    if (!useModalEditor && node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node).length > 0 || name == 'code') {\n\t//        var ores = new UI.SelectField(name + (required ? \"*\" : \"\"), (e, v) => {\n\t//            if (fire == false) return;\n\t//            if (v == \"(no value)\") v = \"\";\n\t//            if (type==\"protocols\"){\n\t//                node.attributes(name).forEach(attr => attr.remove());\n\t//                if( v==HTTPHTTPS){\n\t//                    [\"HTTP\",\"HTTPS\"].forEach(val => node.attrOrCreate(name).addValue(val));\n\t//                }\n\t//                else{\n\t//                    if (v) {\n\t//                        node.attrOrCreate(name).setValue(v);\n\t//                    }\n\t//                }\n\t//                updateViewModel(stringView(node, name));\n\t//                return;\n\t//            }\n\t//            updateValueDeferred(v);\n\t//        });\n\t//        var options = [];\n\t//        if (name == 'code')\n\t//            options = Object.keys(dialogs.getStatusCodeDescriptions());\n\t//        else {\n\t//            var enumValues = node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node);\n\t//            options = node.definition().property(name).getAdapter(services.RAMLPropertyService).isKey() ? enumValues : [\"(no value)\"].concat(enumValues);\n\t//\n\t//            if (type=='protocols'){\n\t//                if (tfValue.get()==HTTPANDHTTPS){\n\t//                    tfValue.set(HTTPHTTPS)\n\t//                }\n\t//                options =[\"(no value)\",\"HTTP\",\"HTTPS\",HTTPHTTPS]\n\t//            }\n\t//        }\n\t//\n\t//        ores.getActualField().setOptions(options);\n\t//        ores.setBinding(tfValue);\n\t//\n\t//        res = ores;\n\t//    } else {\n\t//        if (!res) {\n\t//            res = new UI.TextField(name + (required ? \"*\" : \"\"), tfValue, (e, v)=> {\n\t//                if (fire == false) return;\n\t//                if (useModalEditor && res && res.getActualField())\n\t//                    res.getActualField().setText(value, false); // do not re-call onChange\n\t//                else\n\t//                    updateValueDeferred(v);\n\t//            }, null, editorTools.aquireManager().placeholder ? name + \" has no value\" : '');\n\t//            if (name == focusedPropertyName) toFocus = res;\n\t//        }\n\t//    }\n\t//    var uvdTimeout = 12;\n\t//\n\t//    setInterval(()=>{\n\t//        if (uvdTimeout++ != 10) return;\n\t//        var newValue = res.getActualField().getValue();\n\t//        var attrEx = node.attr(name)\n\t//        var attr = node.attrOrCreate(name);\n\t//        attr.setValue(newValue);\n\t//        if (updateText) {\n\t//            if (res instanceof UI.TextField) {\n\t//                focusedPropertyName = name;\n\t//                focusedPosition = (<any> res.getActualField()).ui().getModel().getCursorBufferPosition();\n\t//            }\n\t//            editorTools.aquireManager().updateText(newValue == '' || attr == null ? node.lowLevel() : attr.lowLevel());\n\t//\n\t//        }\n\t//\n\t//    }, 50);\n\t//\n\t//    res.getActualField().addClass(\"ate\").addClass(type).setStyle(\"margin-bottom\", \"0px !important\");\n\t//    res.margin(0, 0, 0, 6);\n\t//    if (useModalEditor) {\n\t//        res.getActualField().ui().addEventListener('focus', (e) => {\n\t//            bonclick(e);\n\t//            res.getActualField().ui().blur();\n\t//        });\n\t//        res.addChild(UI.button(\"(edit)\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, null, bonclick).margin(4, 0, 0, 0));\n\t//    } else if (disabledMessage) {\n\t//        if (editorTools.aquireManager().placeholder) res.getActualField().setPlaceholder(disabledMessage);\n\t//        res.getActualField().ui().addEventListener('focus', (e) => res.getActualField().ui().blur());\n\t//    }\n\t//    if (descriptionLabel) {\n\t//        res.ui().addEventListener('mouseenter', () => {\n\t//            descriptionLabel.setStyle(\"opacity\", \"1\")\n\t//            descriptionLabel.setText(node.definition().property(name).description());\n\t//        });\n\t//        res.ui().addEventListener('mouseleave', () => {\n\t//            descriptionLabel.setStyle(\"opacity\", \"0\");\n\t//        });\n\t//    }\n\t//    return res;\n\t//}\n\tfunction getSchemaType(value) {\n\t    var schema = schemautil.createSchema(value, null);\n\t    if (!schema || !schema.getType)\n\t        return \"Invalid\";\n\t    switch (schema.getType()) {\n\t        case \"source.json\":\n\t            return \"JSON\";\n\t        case \"text.xml\":\n\t            return \"XML\";\n\t        default:\n\t            return \"Unknown type\";\n\t    }\n\t}\n\tfunction getStringValue(x) {\n\t    if (typeof x === \"object\")\n\t        return x.valueName();\n\t    else\n\t        return x;\n\t}\n\texports.getStringValue = getStringValue;\n\tfunction propertyInfo(node, name) {\n\t    var prop = node.definition().property(name);\n\t    if (prop.isValueProperty() == false)\n\t        return null;\n\t    var isMulti = prop.isMultiValue();\n\t    var required = prop.isRequired();\n\t    var value;\n\t    var values = [];\n\t    var type;\n\t    var ipath;\n\t    var rangeName = prop.range().nameId();\n\t    if (isMulti) {\n\t        values = node.attributes(name).map(function (x) { return x.value(); });\n\t        value = values.map(function (x) { return getStringValue(x); }).join(\", \");\n\t        switch (rangeName) {\n\t            case \"StringType\":\n\t                type = 'enum';\n\t                if (!node.definition().getAdapter(def.RAMLService).isUserDefined() && name == \"protocols\") {\n\t                    type = \"protocols\";\n\t                }\n\t                break;\n\t            case \"TraitRef\":\n\t                type = 'trait';\n\t                break;\n\t            default:\n\t                type = 'unknown';\n\t        }\n\t    }\n\t    else {\n\t        var attr = node.attr(name);\n\t        value = attr && attr.value() ? attr.value() : \"\";\n\t        switch (rangeName) {\n\t            case \"MarkdownString\":\n\t                type = 'markdown';\n\t                values = value.split(\"\\n\");\n\t                value = values[0];\n\t                break;\n\t            case \"SchemaString\":\n\t                type = 'schema';\n\t                if (value.indexOf(\"\\n\") >= 0) {\n\t                    values = [value];\n\t                    value = \"(\" + getSchemaType(value) + \" Schema)\";\n\t                }\n\t                break;\n\t            case \"ExampleString\":\n\t                type = 'schexample';\n\t                try {\n\t                    ipath = attr.lowLevel().includePath();\n\t                }\n\t                catch (e) {\n\t                    ipath = \"\";\n\t                }\n\t                values = [value, ipath];\n\t                value = \"Example\" + (ipath != \"\" ? \" (referenced from \" + ipath + \")\" : \"\");\n\t                break;\n\t            case \"ResourceTypeRef\":\n\t                type = \"type\";\n\t                break;\n\t            default:\n\t                type = 'string';\n\t        }\n\t        if (type == \"string\") {\n\t            if (value.indexOf(\"\\n\") >= 0) {\n\t                values = value.split(\"\\n\");\n\t                value = \"(\" + values.length + \" lines) \" + values[0].substring(0, 20) + \" ...\";\n\t                type = \"multiline\";\n\t            }\n\t            if (attr)\n\t                ipath = attr.lowLevel().includePath();\n\t            if (ipath) {\n\t                value = \"(included from \" + ipath + \")\";\n\t                type = \"include\";\n\t            }\n\t        }\n\t    }\n\t    var ret = {\n\t        value: value,\n\t        values: values,\n\t        type: type,\n\t        include: ipath,\n\t        required: required,\n\t    };\n\t    return ret;\n\t}\n\texports.propertyInfo = propertyInfo;\n\tfunction stringView(node, name) {\n\t    return getStringValue(propertyInfo(node, name).value);\n\t}\n\texports.stringView = stringView;\n\t\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar UI = __webpack_require__(19);\n\tvar rp = __webpack_require__(23);\n\tvar Opt = __webpack_require__(67);\n\tvar schemautil = rp.schema;\n\tvar SchemaRenderer = (function () {\n\t    function SchemaRenderer() {\n\t    }\n\t    SchemaRenderer.prototype.render = function (elem) {\n\t        var icon;\n\t        var tc;\n\t        switch (elem.type) {\n\t            case 'object':\n\t                icon = UI.Icon.CIRCUIT_BOARD;\n\t                tc = UI.TextClasses.INFO;\n\t                break;\n\t            case 'array':\n\t                icon = UI.Icon.LIST_UNORDERED;\n\t                tc = UI.TextClasses.ERROR;\n\t                break;\n\t            case 'unspecified':\n\t                icon = UI.Icon.QUESTION;\n\t                tc = UI.TextClasses.WARNING;\n\t                break;\n\t            default:\n\t                icon = UI.Icon.CODE;\n\t                tc = UI.TextClasses.SUCCESS;\n\t        }\n\t        return UI.hc(UI.label(elem.name + \": \", icon), UI.label(elem.type, null, tc, null).pad(4, 0));\n\t    };\n\t    return SchemaRenderer;\n\t}());\n\texports.SchemaRenderer = SchemaRenderer;\n\tfunction _schemaPreview() {\n\t    var hashkey = function (n) {\n\t        if (n == null)\n\t            return \"\";\n\t        return hashkey(n.parent) + \"::[\" + (n.name + \":\" + n.type + \"]\" + (n.children.length > 0 ? \"*\" : \"\"));\n\t    };\n\t    var treeViewer = UI.treeViewer(function (x) { return x.children; }, new SchemaRenderer(), function (x) { return x.name + \":\" + x.type; });\n\t    treeViewer.setComparator(function (x, y) { return x.name == y.name && x.type == y.type; });\n\t    return treeViewer;\n\t}\n\texports._schemaPreview = _schemaPreview;\n\tfunction getSchemaTree(name, contents) {\n\t    if (contents.type instanceof Array)\n\t        if (contents.type.indexOf('object') >= 0)\n\t            contents.type = 'object';\n\t        else if (contents.type.indexOf('array') >= 0)\n\t            contents.type = 'array';\n\t    var typeString = contents.type ? (contents.type instanceof Array ? contents.type.join(\"|\") : contents.type).toLowerCase() : 'unspecified';\n\t    var children = [];\n\t    if (contents.properties)\n\t        children = Object.keys(contents.properties).map(function (el) { return getSchemaTree(el, contents.properties[el]); });\n\t    else if (contents.items)\n\t        children = contents.items instanceof Array ? contents.items.map(function (el) { return getSchemaTree(\"item\", el); }) : getSchemaTree(\"item\", contents.items);\n\t    if (children instanceof Array == false)\n\t        children = [children];\n\t    var result = {\n\t        type: typeString,\n\t        name: name,\n\t        parent: null,\n\t        children: children\n\t    };\n\t    result.children.forEach(function (x) { return x.parent = result; });\n\t    return result;\n\t}\n\texports.getSchemaTree = getSchemaTree;\n\tfunction _updatePreview(treeView, value) {\n\t    try {\n\t        var schema = schemautil.createSchema(value, null);\n\t        if (schema == null || schema.getType == null) {\n\t            treeView.setInput({}, true);\n\t            return;\n\t        }\n\t        var schemaType = schema.getType();\n\t        var schemaModel = schemaType == \"source.json\" ? JSON.parse(value) : rootElements(value);\n\t        var schemaTree = schemaType == \"source.json\" ? getSchemaTree(\"schema\", schemaModel) : getXMLSchemaTree(schemaModel);\n\t        treeView.setInput(schemaTree, true);\n\t    }\n\t    catch (e) {\n\t        console.log(e);\n\t    }\n\t}\n\texports._updatePreview = _updatePreview;\n\tvar jsonix = __webpack_require__(65);\n\tfunction parseSchema(schema) {\n\t    var XSD_1_0 = __webpack_require__(66).XSD_1_0;\n\t    var context = new jsonix.Jsonix.Context([XSD_1_0]);\n\t    var unmarshaller = context.createUnmarshaller();\n\t    var schemaObject = unmarshaller.unmarshalString(schema);\n\t    return schemaObject;\n\t}\n\t;\n\tfunction rootElements(schema) {\n\t    var schemaObj = parseSchema(schema);\n\t    return getRootElements(schemaObj);\n\t}\n\tvar TypeDescription = (function () {\n\t    function TypeDescription(owner, _name, _isSimple, _object) {\n\t        var _this = this;\n\t        this.owner = owner;\n\t        this._name = _name;\n\t        this._isSimple = _isSimple;\n\t        this._object = _object;\n\t        this.name = function () { return _this._name; };\n\t        this.isSimple = function () { return _this._isSimple; };\n\t        this.object = function () { return _this._object; };\n\t    }\n\t    TypeDescription.prototype.isChoice = function () {\n\t        return this.object && (this.object['choice'] ||\n\t            (this.object['complexContent'] && this.object['complexContent']['choice']));\n\t    };\n\t    TypeDescription.prototype.elements = function () {\n\t        var _this = this;\n\t        var elementObjects = [];\n\t        if (this._object) {\n\t            elementObjects = this.collectElements(this._object);\n\t            if (elementObjects.length == 0) {\n\t                var complexContent = this.object['complexContent'];\n\t                if (complexContent) {\n\t                    elementObjects = this.collectElements(complexContent);\n\t                }\n\t            }\n\t        }\n\t        var result = elementObjects.map(function (x) { return new ElementDescription(_this.owner, x); });\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.attributes = function () {\n\t        var _this = this;\n\t        var result = [];\n\t        var objects = [this._object];\n\t        for (var i = 0; i < objects.length; i++) {\n\t            var obj = objects[i];\n\t            if (!obj) {\n\t                continue;\n\t            }\n\t            if (obj['attributeGroup']) {\n\t                var attributeGroups = obj['attributeGroup'].filter(function (x) { return x['otherAttributes']; });\n\t                for (var j = 0; j < attributeGroups.length; j++) {\n\t                    var groupRef = attributeGroups[j]['otherAttributes']['ref'];\n\t                    var groupDef = this.owner.attributeGroups[groupRef];\n\t                    objects.push(groupDef);\n\t                }\n\t            }\n\t            if (obj['attribute']) {\n\t                obj['attribute'].forEach(function (x) { return result.push(new AttributeDescription(_this.owner, x)); });\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.base = function () {\n\t        if (!this._object) {\n\t            return Opt.empty();\n\t        }\n\t        var baseObj;\n\t        if (this._object['restriction']) {\n\t            var restriction = this._object['restriction'];\n\t            baseObj = restriction['base'];\n\t        }\n\t        else if (this._object['complexContent']) {\n\t            var complexContent = this.object['complexContent'];\n\t            var resExt = complexContent['restriction'] || complexContent['extension'];\n\t            if (resExt) {\n\t                baseObj = resExt['base'];\n\t            }\n\t        }\n\t        if (!baseObj) {\n\t            return Opt.empty();\n\t        }\n\t        var typeName = extractName(baseObj);\n\t        var isSimple = false;\n\t        var typeObject;\n\t        var sType = this.owner.simpleTypes[typeName];\n\t        if (sType) {\n\t            typeObject = sType;\n\t            isSimple = true;\n\t        }\n\t        var cType = this.owner.complexTypes[typeName];\n\t        if (cType) {\n\t            typeObject = cType;\n\t        }\n\t        if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n\t            if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n\t                isSimple = true;\n\t            }\n\t        }\n\t        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n\t        return new Opt(result);\n\t    };\n\t    TypeDescription.prototype.getBaseName = function () {\n\t        var typeOpt = new Opt(this);\n\t        var result = '';\n\t        while (typeOpt.isDefined()) {\n\t            var t = typeOpt.getOrThrow();\n\t            result = t.name();\n\t            typeOpt = t.base();\n\t        }\n\t        return result;\n\t    };\n\t    TypeDescription.prototype.collectElements = function (obj) {\n\t        var result = [];\n\t        var containers = [obj['sequence'], obj['any'], obj['choice']];\n\t        for (var i = 0; i < containers.length; i++) {\n\t            var x = containers[i];\n\t            if (!x) {\n\t                continue;\n\t            }\n\t            if (x['group']) {\n\t                var groups = x['group'].filter(function (gr) { return gr['otherAttributes']; });\n\t                for (var j = 0; j < groups.length; j++) {\n\t                    var groupRef = groups[j]['otherAttributes']['ref'];\n\t                    var groupDef = this.owner.elementGroups[groupRef];\n\t                    if (groupDef) {\n\t                        if (groupDef['sequence']) {\n\t                            containers = containers.concat(groupDef['sequence']);\n\t                        }\n\t                        if (groupDef['any']) {\n\t                            containers = containers.concat(groupDef['any']);\n\t                        }\n\t                        if (groupDef['choice']) {\n\t                            containers = containers.concat(groupDef['choice']);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (x['element']) {\n\t                result = result.concat(x['element']);\n\t            }\n\t            result = result.concat(this.collectElements(x));\n\t        }\n\t        return result;\n\t    };\n\t    return TypeDescription;\n\t}());\n\tvar PropertyDescription = (function () {\n\t    function PropertyDescription(owner, _object) {\n\t        var _this = this;\n\t        this.owner = owner;\n\t        this._object = _object;\n\t        this.name = function () { return _this._object['name']; };\n\t    }\n\t    PropertyDescription.prototype.type = function () {\n\t        var typeName;\n\t        var typeObject;\n\t        var isSimple = false;\n\t        if (this._object['type']) {\n\t            var typeObj = this._object['type'];\n\t            typeName = extractName(typeObj);\n\t            var sType = this.owner.simpleTypes[typeName];\n\t            if (sType) {\n\t                typeObject = sType;\n\t                isSimple = true;\n\t            }\n\t            var cType = this.owner.complexTypes[typeName];\n\t            if (cType) {\n\t                typeObject = cType;\n\t            }\n\t            if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n\t                if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n\t                    isSimple = true;\n\t                }\n\t            }\n\t        }\n\t        else if (this._object['complexType']) {\n\t            typeObject = this._object['complexType'];\n\t        }\n\t        else if (this._object['simpleType']) {\n\t            typeObject = this._object['simpleType'];\n\t        }\n\t        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n\t        return new Opt(result);\n\t    };\n\t    PropertyDescription.prototype.optional = function () {\n\t        throw new Error(\"This method is abstract.\");\n\t    };\n\t    PropertyDescription.prototype.isArray = function () {\n\t        throw new Error(\"This method is abstract.\");\n\t    };\n\t    PropertyDescription.prototype.isAttribute = function () {\n\t        return false;\n\t    };\n\t    return PropertyDescription;\n\t}());\n\texports.PropertyDescription = PropertyDescription;\n\tvar ElementDescription = (function (_super) {\n\t    __extends(ElementDescription, _super);\n\t    function ElementDescription(owner, object) {\n\t        _super.call(this, owner, object);\n\t    }\n\t    ElementDescription.prototype.isArray = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return false;\n\t        }\n\t        var maxOccurs = otherAttributes['maxOccurs'];\n\t        if (!maxOccurs) {\n\t            return false;\n\t        }\n\t        if (maxOccurs == 'unbounded') {\n\t            return true;\n\t        }\n\t        try {\n\t            var mo = parseInt(maxOccurs);\n\t            return mo > 1;\n\t        }\n\t        catch (e) { }\n\t        return false;\n\t    };\n\t    ElementDescription.prototype.optional = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return true;\n\t        }\n\t        var minOccurs = otherAttributes['minOccurs'];\n\t        if (!minOccurs) {\n\t            return true;\n\t        }\n\t        try {\n\t            var mo = parseInt(minOccurs);\n\t            return mo == 0;\n\t        }\n\t        catch (e) {\n\t        }\n\t        return true;\n\t    };\n\t    return ElementDescription;\n\t}(PropertyDescription));\n\texports.ElementDescription = ElementDescription;\n\tfunction extractName(typeObj) {\n\t    var prefix = typeObj['prefix'];\n\t    var localPart = typeObj['localPart'];\n\t    var typeName = prefix + (prefix.length > 0 ? ':' : '') + localPart;\n\t    return typeName;\n\t}\n\t;\n\tvar AttributeDescription = (function (_super) {\n\t    __extends(AttributeDescription, _super);\n\t    function AttributeDescription(owner, object) {\n\t        _super.call(this, owner, object);\n\t    }\n\t    AttributeDescription.prototype.optional = function () {\n\t        var otherAttributes = this._object['otherAttributes'];\n\t        if (!otherAttributes) {\n\t            return false;\n\t        }\n\t        var use = otherAttributes['use'];\n\t        if (!use) {\n\t            return false;\n\t        }\n\t        return use != 'required';\n\t    };\n\t    AttributeDescription.prototype.isArray = function () {\n\t        return false;\n\t    };\n\t    AttributeDescription.prototype.isAttribute = function () {\n\t        return true;\n\t    };\n\t    return AttributeDescription;\n\t}(PropertyDescription));\n\texports.AttributeDescription = AttributeDescription;\n\tfunction getRootElements(obj) {\n\t    var _this = this;\n\t    var objValue = obj['value'];\n\t    var result = [];\n\t    if (objValue) {\n\t        var groups = objValue['group'];\n\t        if (groups) {\n\t            groups.forEach(function (x) { return _this.elementGroups[x.name] = x; });\n\t        }\n\t        var attributeGroups = objValue['attributeGroup'];\n\t        if (attributeGroups) {\n\t            attributeGroups.forEach(function (x) { return _this.attributeGroups[x.name] = x; });\n\t        }\n\t        var simpleTypes = objValue['simpleType'];\n\t        if (simpleTypes) {\n\t            simpleTypes.forEach(function (x) { return _this.simpleTypes[x.name] = x; });\n\t        }\n\t        var complexTypes = objValue['complexType'];\n\t        if (complexTypes) {\n\t            complexTypes.forEach(function (x) { return _this.complexTypes[x.name] = x; });\n\t        }\n\t        var rootElements = objValue['element'];\n\t        if (rootElements) {\n\t            result = rootElements.map(function (x) { return new ElementDescription(_this, x); });\n\t        }\n\t    }\n\t    return result;\n\t}\n\tvar XSD_2_TS_TYPE_MAP = {\n\t    \"ENTITIES\": \"string\",\n\t    \"ENTITY\": \"string\",\n\t    \"ID\": \"string\",\n\t    \"IDREF\": \"string\",\n\t    \"IDREFS\": \"string\",\n\t    \"language\": \"string\",\n\t    \"Name\": \"string\",\n\t    \"NCName\": \"string\",\n\t    \"NMTOKEN\": \"string\",\n\t    \"NMTOKENS\": \"string\",\n\t    \"normalizedString\": \"string\",\n\t    \"QName\": \"string\",\n\t    \"string\": \"string\",\n\t    \"token\": \"string\",\n\t    \"date\": \"string\",\n\t    \"dateTime\": \"string\",\n\t    \"duration\": \"string\",\n\t    \"gDay\": \"string\",\n\t    \"gMonth\": \"string\",\n\t    \"gMonthDay\": \"string\",\n\t    \"gYear\": \"string\",\n\t    \"gYearMonth\": \"string\",\n\t    \"time\": \"string\",\n\t    \"anyURI\": \"string\",\n\t    \"base64Binary\": \"string\",\n\t    \"hexBinary\": \"string\",\n\t    \"NOTATION\": \"string\",\n\t    \"boolean\": \"boolean\",\n\t    \"double\": \"number\",\n\t    \"float\": \"number\",\n\t    \"byte\": \"number\",\n\t    \"decimal\": \"number\",\n\t    \"int\": \"number\",\n\t    \"integer\": \"number\",\n\t    \"long\": \"number\",\n\t    \"negativeInteger\": \"number\",\n\t    \"nonNegativeInteger\": \"number\",\n\t    \"nonPositiveInteger\": \"number\",\n\t    \"positiveInteger\": \"number\",\n\t    \"short\": \"number\",\n\t    \"unsignedLong\": \"number\",\n\t    \"unsignedInt\": \"number\",\n\t    \"unsignedShort\": \"number\",\n\t    \"unsignedByte\": \"number\"\n\t};\n\tfunction getTSType(xmltype) {\n\t    return XSD_2_TS_TYPE_MAP[xmltype];\n\t}\n\texports.getTSType = getTSType;\n\tfunction getXMLSchemaTree(roots) {\n\t    var getSType = function (type) {\n\t        if (!type)\n\t            return 'Unknown';\n\t        type = type.substr(type.indexOf(':') + 1);\n\t        return getTSType(type);\n\t    };\n\t    return roots.map(function (root) {\n\t        var result;\n\t        var t = root.type().value();\n\t        if (root.isArray())\n\t            result = {\n\t                type: 'Array',\n\t                name: root.name(),\n\t                parent: null,\n\t                children: getXMLSchemaTree(t.elements())\n\t            };\n\t        else if (t.isSimple())\n\t            result = {\n\t                type: getSType(t.name()),\n\t                name: root.name(),\n\t                parent: null,\n\t                children: []\n\t            };\n\t        else\n\t            result = {\n\t                type: 'Object',\n\t                name: root.name(),\n\t                parent: null,\n\t                children: getXMLSchemaTree(t.elements())\n\t            };\n\t        result.children.forEach(function (x) { return x.parent = result; });\n\t        return result;\n\t    });\n\t}\n\t\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"mime\");\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"know-your-http-well\");\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"remote\");\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"jsonix\");\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"w3c-schemas\");\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar invariant = __webpack_require__(74);\n\tvar exists = function (v) { return (v != null); };\n\tvar globalEmptyOpt;\n\tvar Opt = (function () {\n\t    function Opt(_value) {\n\t        var _this = this;\n\t        this._value = _value;\n\t        this._isDefined = false;\n\t        this._isEmpty = true;\n\t        this._arr = undefined;\n\t        this.getOrThrow = function () {\n\t            invariant(_this._isDefined, 'Opt is empty. Use `Opt#getOrElse` or check `Opt#isDefined`.');\n\t            return _this._value;\n\t        };\n\t        this.value = function () { return _this._value; };\n\t        this.isDefined = function () { return _this._isDefined; };\n\t        this.isEmpty = function () { return _this._isEmpty; };\n\t        this.toArray = function () { return _this._arr || (_this._arr = _this._isDefined ? [_this._value] : []); };\n\t        this.getOrElse = function (v) { return _this._isDefined ? _this._value : v; };\n\t        this.getOrElseF = function (v) { return _this._isDefined ? _this._value : v(); };\n\t        this.map = function (f) { return _this._isEmpty ? Opt.empty() : new Opt(f(_this._value)); };\n\t        this.flatMap = function (f) { return _this.map(f).getOrElse(Opt.empty()); };\n\t        this.equals = function (other) {\n\t            invariant(other instanceof Opt, 'Expected other to be an `Opt`, but got `%s`', typeof other);\n\t            return (_this._isDefined === other.isDefined()) && (_this._value === other.value());\n\t        };\n\t        if (exists(this._value)) {\n\t            this._isDefined = true;\n\t            this._isEmpty = false;\n\t        }\n\t    }\n\t    Opt.prototype.forEach = function (fn) {\n\t        if (this.isDefined()) {\n\t            fn(this._value);\n\t        }\n\t    };\n\t    /**\n\t     * You can always create an empty option by hand just by calling new Opt<T>()\n\t     * but calling this method will return a global instance instead of allocating a new one each time\n\t     */\n\t    Opt.empty = function () { return (globalEmptyOpt || (globalEmptyOpt = new Opt())); };\n\t    return Opt;\n\t}());\n\tmodule.exports = Opt;\n\t\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"marked\");\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"classnames\");\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"react-pure-render/component\");\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"pretty-data\");\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar fs = __webpack_require__(18);\n\tvar rp = __webpack_require__(23);\n\tvar def = rp.ds;\n\tvar search = rp.search;\n\tvar _ = __webpack_require__(26);\n\tvar provider = __webpack_require__(7);\n\tvar UI = __webpack_require__(19);\n\tvar contextActions = __webpack_require__(24);\n\tvar suggestions = __webpack_require__(75);\n\tvar universe = rp.universes;\n\tvar universehelpers = rp.universeHelpers;\n\tvar typeDisplay = __webpack_require__(76);\n\tvar defaultValues = __webpack_require__(77);\n\tvar resourceRegistry = rp.utils;\n\tvar Item = (function () {\n\t    function Item(_title, description) {\n\t        if (description === void 0) { description = \"\"; }\n\t        this._title = _title;\n\t        this.description = description;\n\t        this.listeners = [];\n\t    }\n\t    Item.prototype.needsSeparateLabel = function () {\n\t        return false;\n\t    };\n\t    Item.prototype.detach = function () {\n\t        this.dispose();\n\t        this.children().forEach(function (x) { return x.detach(); });\n\t    };\n\t    Item.prototype.addListener = function (r) {\n\t        this.listeners.push(r);\n\t    };\n\t    Item.prototype.removeListener = function (r) {\n\t        this.listeners = this.listeners.filter(function (x) { return x != r; });\n\t    };\n\t    Item.prototype.add = function (i) {\n\t        throw new Error(\"Not supported\");\n\t    };\n\t    Item.prototype.root = function () {\n\t        if (this.parent) {\n\t            return this.parent.root();\n\t        }\n\t        return this;\n\t    };\n\t    Item.prototype.title = function () {\n\t        return this._title;\n\t    };\n\t    Item.prototype.children = function () {\n\t        return [];\n\t    };\n\t    Item.prototype.setDescription = function (desc) {\n\t        this.description = desc;\n\t    };\n\t    Item.prototype.setTitle = function (t) {\n\t        this._title = t;\n\t    };\n\t    Item.prototype.render = function (r) {\n\t        if (r === void 0) { r = {}; }\n\t        throw new Error(\"Not Implemented\");\n\t    };\n\t    Item.prototype.item = function (name) {\n\t        return null;\n\t    };\n\t    Item.prototype.setError = function (text) {\n\t    };\n\t    Item.prototype.clearErrors = function () {\n\t    };\n\t    return Item;\n\t}());\n\texports.Item = Item;\n\tvar TypeDisplayItem = (function (_super) {\n\t    __extends(TypeDisplayItem, _super);\n\t    function TypeDisplayItem(node) {\n\t        _super.call(this, \"Type\", \"\");\n\t        this.node = node;\n\t    }\n\t    TypeDisplayItem.prototype.render = function (r) {\n\t        return typeDisplay.render(this.node);\n\t    };\n\t    TypeDisplayItem.prototype.dispose = function () {\n\t    };\n\t    return TypeDisplayItem;\n\t}(Item));\n\texports.TypeDisplayItem = TypeDisplayItem;\n\tvar Category = (function (_super) {\n\t    __extends(Category, _super);\n\t    function Category() {\n\t        _super.apply(this, arguments);\n\t        this._children = [];\n\t    }\n\t    Category.prototype.add = function (i) {\n\t        i.parent = this;\n\t        this._children.push(i);\n\t    };\n\t    Category.prototype.children = function () {\n\t        return this._children;\n\t    };\n\t    Category.prototype.plainChildren = function () {\n\t        return this._children.filter(function (x) { return !(x instanceof Category); });\n\t    };\n\t    Category.prototype.categories = function () {\n\t        return this._children.filter(function (x) { return (x instanceof Category); });\n\t    };\n\t    Category.prototype.item = function (name) {\n\t        var it;\n\t        this._children.forEach(function (x) {\n\t            if (x.title() == name) {\n\t                it = x;\n\t            }\n\t            var rr = x.item(name);\n\t            if (rr) {\n\t                it = rr;\n\t            }\n\t        });\n\t        return it;\n\t    };\n\t    Category.prototype.render = function (r) {\n\t        var _this = this;\n\t        if (r === void 0) { r = {}; }\n\t        var section = this.createSection(r);\n\t        this._result = section;\n\t        if (this.description && r.showDescription) {\n\t            this.descriptionLabel = UI.label(this.description);\n\t            section.addChild(this.descriptionLabel);\n\t        }\n\t        this.contributeTop(section);\n\t        this.plainChildren().forEach(function (x) { return _this.addChild(section, x); });\n\t        var wrappedChild = this.createWrappedChild(section);\n\t        this.subCategories = wrappedChild;\n\t        var cats = this.categories();\n\t        var remap = {};\n\t        cats.forEach(function (x) { return remap[x.title()] = x; });\n\t        var newCats = [];\n\t        if (remap[\"General\"]) {\n\t            newCats.push(remap[\"General\"]);\n\t            delete remap[\"General\"];\n\t        }\n\t        if (remap[\"Facets\"]) {\n\t            newCats.push(remap[\"Facets\"]);\n\t            delete remap[\"Facets\"];\n\t        }\n\t        for (var c in remap) {\n\t            newCats.push(remap[c]);\n\t        }\n\t        newCats.forEach(function (x) { return _this.addChild(wrappedChild, x); });\n\t        return section;\n\t    };\n\t    Category.prototype.detach = function () {\n\t        _super.prototype.detach.call(this);\n\t        this._result.dispose();\n\t    };\n\t    Category.prototype.createSection = function (r) {\n\t        if (r.showHeader) {\n\t            return new UI.Section(UI.h3(this.title()), false);\n\t        }\n\t        var pnl = new UI.Panel();\n\t        pnl.setCaption(this.title());\n\t        return pnl;\n\t    };\n\t    Category.prototype.createWrappedChild = function (section) {\n\t        return section;\n\t    };\n\t    Category.prototype.addChild = function (section, item) {\n\t        var child = item.render();\n\t        if (section instanceof UI.TabFolder) {\n\t            var tf = section;\n\t            tf.add(child.caption(), UI.Icon.NONE, child);\n\t        }\n\t        else {\n\t            if (item.needsSeparateLabel()) {\n\t                var firstLabel = UI.label(item.title());\n\t                firstLabel.margin(0, 5, 0, 0);\n\t                section.addChild(firstLabel);\n\t                section.addChild(UI.label(item.description));\n\t            }\n\t            section.addChild(child);\n\t        }\n\t    };\n\t    Category.prototype.contributeTop = function (section) {\n\t    };\n\t    Category.prototype.dispose = function () {\n\t    };\n\t    Category.prototype.setError = function (text) {\n\t    };\n\t    Category.prototype.clearErrors = function () {\n\t        this._children.forEach(function (x) { return x.clearErrors(); });\n\t    };\n\t    Category.prototype.update = function (i) {\n\t    };\n\t    return Category;\n\t}(Item));\n\tvar lastSelectedCaption;\n\tvar inRender = false;\n\tvar TopLevelNode = (function (_super) {\n\t    __extends(TopLevelNode, _super);\n\t    function TopLevelNode(node) {\n\t        _super.call(this, node.definition().nameId(), node.definition().description());\n\t        this.node = node;\n\t        this.ep = null;\n\t    }\n\t    TopLevelNode.prototype.detach = function () {\n\t        _super.prototype.detach.call(this);\n\t        this._result.dispose();\n\t    };\n\t    TopLevelNode.prototype.createWrappedChild = function (section) {\n\t        var tf = new UI.TabFolder();\n\t        tf.setOnSelected(function () {\n\t            if (!inRender) {\n\t                lastSelectedCaption = (tf.selectedComponent().caption());\n\t            }\n\t        });\n\t        section.addChild(tf);\n\t        return tf;\n\t    };\n\t    TopLevelNode.prototype.subCategoryByNameOrCreate = function (name) {\n\t        var item = _.find(this.children(), function (x) { return x.title() == name; });\n\t        if (!item) {\n\t            var rs = new Category(name);\n\t            this.add(rs);\n\t            return rs;\n\t        }\n\t        return item;\n\t    };\n\t    TopLevelNode.prototype.addItemToCategory = function (name, it) {\n\t        if (name == null) {\n\t            this._children.push(it);\n\t            it.parent = this;\n\t            return;\n\t        }\n\t        this.subCategoryByNameOrCreate(name).add(it);\n\t    };\n\t    TopLevelNode.prototype.contributeTop = function (section) {\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n\t        this.ep = UI.hc(this.errorLabel);\n\t        this.ep.setDisplay(false);\n\t        section.addChild(this.ep);\n\t    };\n\t    TopLevelNode.prototype.render = function (r) {\n\t        if (r === void 0) { r = {}; }\n\t        inRender = true;\n\t        try {\n\t            var result = _super.prototype.render.call(this, r);\n\t            this._options = r;\n\t            this._panel = result;\n\t            var tf = this.subCategories;\n\t            for (var n = 0; n < tf.tabsCount(); n++) {\n\t                var item = tf.get(n);\n\t                if (item.header == lastSelectedCaption) {\n\t                    tf.setSelectedIndex(n);\n\t                    return result;\n\t                }\n\t            }\n\t            var documentation = \"\";\n\t            if (this.node.property()) {\n\t                documentation = this.node.property().description();\n\t            }\n\t            else {\n\t                documentation = this.node.definition().description();\n\t            }\n\t            if (documentation.length && !r.showDescription) {\n\t                result.addChild(UI.html(\"<hr/>\"));\n\t                result.addChild(UI.label(documentation, UI.Icon.INBOX, UI.TextClasses.SUBTLE));\n\t            }\n\t            this.update(this);\n\t            return result;\n\t        }\n\t        finally {\n\t            inRender = false;\n\t        }\n\t    };\n\t    TopLevelNode.prototype.dispose = function () {\n\t        this.node = null;\n\t    };\n\t    TopLevelNode.prototype.update = function (i) {\n\t        var _this = this;\n\t        //this.listeners.forEach(x=>x(i));\n\t        if (!this._panel) {\n\t            return;\n\t        }\n\t        if (i instanceof PropertyEditorInfo) {\n\t            var prInfo = i;\n\t            if (prInfo.property.getAdapter(def.RAMLPropertyService).isTypeExpr() || prInfo.property.isDescriminator()) {\n\t                rp.utils.updateType(this.node);\n\t                var extras = this.item(\"Facets\");\n\t                if (extras && extras._result) {\n\t                    extras._result.clear();\n\t                }\n\t                var item = buildItem(this.node, false);\n\t                var newExtras = item.item(\"Facets\");\n\t                if (newExtras) {\n\t                    if (extras && extras._result) {\n\t                        extras._children = newExtras._children;\n\t                        extras._children.forEach(function (x) { return x.parent = extras; });\n\t                        if (extras._children.length > 0) {\n\t                            extras._result.setDisplay(true);\n\t                        }\n\t                        newExtras.children().forEach(function (x) {\n\t                            extras._result.addChild(x.render(_this._options));\n\t                        });\n\t                    }\n\t                    else {\n\t                        this._children.push(newExtras);\n\t                        if (this._panel) {\n\t                            this._panel.addChild(newExtras.render(this._options));\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    if (extras && extras._result) {\n\t                        extras._result.setDisplay(false);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var kp = null;\n\t        this.node.definition().allProperties().forEach(function (x) {\n\t            if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n\t                kp = x;\n\t            }\n\t        });\n\t        if (kp) {\n\t            var keyItem = this.item(kp.nameId());\n\t            if (keyItem) {\n\t                var m = keyItem.fld;\n\t                var vl = m.getBinding().get();\n\t                if ((!vl) || vl.trim().length == 0) {\n\t                    this._panel.getBinding().setStatus(UI.errorStatus(\"\"));\n\t                }\n\t                else {\n\t                    this._panel.getBinding().setStatus(UI.okStatus());\n\t                }\n\t            }\n\t        }\n\t        var errors;\n\t        if (this.node.property() && universehelpers.isExampleProperty(this.node.property())) {\n\t            var parent = this.node.parent();\n\t            if (parent) {\n\t                var parsed = parent.parsedType();\n\t                var exampleMeta = _.find(parsed.metaInfo || [], function (meta) {\n\t                    return meta && meta._name === 'example';\n\t                });\n\t                if (exampleMeta) {\n\t                    var validateObject = exampleMeta.validateSelf(this.node.types().getAnnotationTypeRegistry());\n\t                    errors = ((validateObject && validateObject.getErrors()) || []).map(function (error) {\n\t                        return _this.node.createIssue(error);\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            errors = this.node.errors();\n\t        }\n\t        this.clearErrors();\n\t        this.ep.setDisplay(false);\n\t        if (!resourceRegistry.hasAsyncRequests() && errors && errors.length > 0) {\n\t            var notFound = [];\n\t            errors.forEach(function (error) {\n\t                if (error.extras && error.extras.length > 0) {\n\t                    error = error.extras[0];\n\t                }\n\t                var item = error.node && _this.item(error.node.name());\n\t                if (item) {\n\t                    item.setError(error.message);\n\t                }\n\t                else {\n\t                    notFound.push(error);\n\t                }\n\t            });\n\t            if (notFound.length > 0) {\n\t                this.errorLabel.setIcon(UI.Icon.BUG);\n\t                var et = notFound.map(function (x) { return x.node.name() + \":\" + x.message; }).join(\",\");\n\t                if (et.length > 100) {\n\t                    et = et.substring(0, 100) + \"...\";\n\t                }\n\t                this.errorLabel.setText(et);\n\t                this.ep.setDisplay(true);\n\t            }\n\t            else {\n\t                this.ep.setDisplay(false);\n\t            }\n\t        }\n\t    };\n\t    return TopLevelNode;\n\t}(Category));\n\tvar CheckBox2 = (function (_super) {\n\t    __extends(CheckBox2, _super);\n\t    function CheckBox2() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CheckBox2.prototype.setLabelWidth = function (n) {\n\t        this.setStyle(\"margin-left\", (n + 2) + \"ch\");\n\t    };\n\t    return CheckBox2;\n\t}(UI.CheckBox));\n\tvar PropertyEditorInfo = (function (_super) {\n\t    __extends(PropertyEditorInfo, _super);\n\t    function PropertyEditorInfo(property, node) {\n\t        var _this = this;\n\t        _super.call(this, property.nameId(), property.description());\n\t        this.property = property;\n\t        this.node = node;\n\t        this.rendered = false;\n\t        this.update = function (newValue, oldValue) {\n\t            if (!_this.rendered) {\n\t                return;\n\t            }\n\t            _this.fromEditorToModel(newValue, oldValue);\n\t        };\n\t    }\n\t    PropertyEditorInfo.prototype.dispose = function () {\n\t        this.property = null;\n\t        this.node = null;\n\t        this.fld.getBinding().removeListener(this.update);\n\t    };\n\t    PropertyEditorInfo.prototype.getDefaultValue = function () {\n\t        return defaultValues.getDefaultValue(this.node, this.property);\n\t    };\n\t    PropertyEditorInfo.prototype.hasDefault = function () {\n\t        return defaultValues.hasDefault(this.property);\n\t    };\n\t    PropertyEditorInfo.prototype.clearErrors = function () {\n\t        this.setError(null);\n\t    };\n\t    PropertyEditorInfo.prototype.setError = function (text) {\n\t        if (text) {\n\t            this.errorLabel.setText(text);\n\t            this.errorLabel.setDisplay(true);\n\t        }\n\t        else {\n\t            if (this.errorLabel) {\n\t                this.errorLabel.setDisplay(false);\n\t            }\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t        var field = this.fld;\n\t        var vl = this.toLocalValue(field.getBinding().get());\n\t        if (vl == null) {\n\t            vl = \"\";\n\t        }\n\t        if (vl === true) {\n\t            vl = \"true\";\n\t        }\n\t        if (vl === false) {\n\t            vl = \"\";\n\t        }\n\t        var attr = this.node.attr(this.property.nameId());\n\t        var av = \"\";\n\t        if (attr) {\n\t            var l = this.toLocalValue(this.toUIValue(attr.value()));\n\t            if (l) {\n\t                av = \"\" + l;\n\t            }\n\t        }\n\t        if (av == vl) {\n\t            return;\n\t        }\n\t        if (vl.length > 0) {\n\t            if (attr && attr.lowLevel().includePath()) {\n\t                var path = attr.lowLevel().includePath();\n\t                var actualUnit = attr.lowLevel().unit().resolve(path);\n\t                if (actualUnit) {\n\t                    var apath = actualUnit.absolutePath();\n\t                    fs.writeFileSync(apath, vl);\n\t                }\n\t                return;\n\t            }\n\t            if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n\t                return;\n\t            }\n\t            attr = this.node.attrOrCreate(this.property.nameId());\n\t            attr.setValue(\"\" + vl);\n\t        }\n\t        else {\n\t            if (attr) {\n\t                if (!this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n\t                    attr.remove();\n\t                }\n\t            }\n\t        }\n\t        if (attr.lowLevel() && attr.lowLevel().unit() && attr.lowLevel().unit() != this.node.lowLevel().unit()) {\n\t            provider.saveUnit(attr.lowLevel().unit());\n\t        }\n\t        var root = this.root();\n\t        if (root) {\n\t            root.update(this);\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.toLocalValue = function (inputValue) {\n\t        return inputValue;\n\t    };\n\t    PropertyEditorInfo.prototype.toUIValue = function (value) {\n\t        return value;\n\t    };\n\t    PropertyEditorInfo.prototype.fromModelToEditor = function () {\n\t        var attr = this.node.attr(this.property.nameId());\n\t        if (attr || this.hasDefault()) {\n\t            var value;\n\t            if (this.property.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n\t                value = inheritedContent(this.node);\n\t            }\n\t            var val = value || (attr ? attr.value() : this.getDefaultValue());\n\t            if (val == null) {\n\t                val = \"\";\n\t            }\n\t            this.fld.getBinding().set(this.toUIValue(\"\" + val));\n\t        }\n\t    };\n\t    PropertyEditorInfo.prototype.render = function () {\n\t        var container = new UI.WrapPanel();\n\t        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n\t        this.errorLabel.setDisplay(false);\n\t        this.errorLabel.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n\t        var field = this.createField();\n\t        this.fld = field;\n\t        field.getBinding().addListener(this.update);\n\t        container.setCaption(this.title());\n\t        this.fromModelToEditor();\n\t        container.addChild(field);\n\t        var attr = this.node.attr(this.property.nameId());\n\t        if (attr) {\n\t            var val = attr.value();\n\t        }\n\t        var np = this.property.valueDocProvider();\n\t        if (np) {\n\t            var ac = np(val);\n\t            if (ac == null) {\n\t                ac = \"\";\n\t            }\n\t            var lbl = UI.label(ac, UI.Icon.INFO, UI.TextClasses.SUBTLE);\n\t            if (!ac) {\n\t                lbl.setDisplay(false);\n\t            }\n\t            container.addChild(lbl);\n\t            field.getBinding().addListener(function (x) {\n\t                var newDoc = np(field.getBinding().get());\n\t                if (!newDoc) {\n\t                    newDoc = \"\";\n\t                }\n\t                lbl.setText(newDoc);\n\t                lbl.setDisplay(newDoc.length > 0);\n\t            });\n\t            lbl.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n\t        }\n\t        if (attr && attr.lowLevel().includePath()) {\n\t            container.addChild(UI.label(\"Included from \" + attr.lowLevel().includePath(), UI.Icon.INFO, UI.TextClasses.SUBTLE));\n\t        }\n\t        //container.addChild(this.descLabel)\n\t        container.addChild(this.errorLabel);\n\t        this.rendered = true;\n\t        return container;\n\t    };\n\t    PropertyEditorInfo.prototype.createField = function () {\n\t        return UI.texfField(this.needsSeparateLabel() ? \"\" : this.property.nameId(), \"\", function (x) { });\n\t    };\n\t    return PropertyEditorInfo;\n\t}(Item));\n\tvar SimpleMultiEditor = (function (_super) {\n\t    __extends(SimpleMultiEditor, _super);\n\t    function SimpleMultiEditor() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SimpleMultiEditor.prototype.fromEditorToModel = function () {\n\t        var field = this.fld;\n\t        var vl = field.getBinding().get();\n\t        if (vl == null) {\n\t            vl = \"\";\n\t        }\n\t        var attrs = this.node.attributes(this.property.nameId());\n\t        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n\t        if (av == vl) {\n\t            return;\n\t        }\n\t        var ww = vl.split(\",\");\n\t        var vl = ww.filter(function (x) { return x.trim().length > 0; }).map(function (x) { return x.trim(); });\n\t        if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n\t            return;\n\t        }\n\t        var attribute = this.node.attrOrCreate(this.property.nameId());\n\t        attribute.setValues(vl);\n\t        var root = this.root();\n\t        if (root) {\n\t            root.update(this);\n\t        }\n\t    };\n\t    SimpleMultiEditor.prototype.fromModelToEditor = function () {\n\t        var attrs = this.node.attributes(this.property.nameId());\n\t        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n\t        this.fld.getBinding().set(av);\n\t    };\n\t    return SimpleMultiEditor;\n\t}(PropertyEditorInfo));\n\tfunction escapeValue(v) {\n\t    if (v.length > 0) {\n\t        if (v.charAt(0) == \"'\") {\n\t            return '\"' + v + '\"';\n\t        }\n\t        if (v.charAt(0) == '\"') {\n\t            return '\"' + v + '\"';\n\t        }\n\t    }\n\t    if (v.indexOf(' ') != -1 || v.indexOf(',') != -1) {\n\t        if (v.indexOf('\"') == -1) {\n\t            return '\"' + v + '\"';\n\t        }\n\t        if (v.indexOf(\"'\") == -1) {\n\t            return \"'\" + v + \"'\";\n\t        }\n\t    }\n\t    return v;\n\t}\n\tvar CheckBoxField = (function (_super) {\n\t    __extends(CheckBoxField, _super);\n\t    function CheckBoxField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    CheckBoxField.prototype.createField = function () {\n\t        return new CheckBox2(this.property.nameId(), UI.Icon.NONE, function (x) { });\n\t    };\n\t    CheckBoxField.prototype.toUIValue = function (value) {\n\t        if (!value) {\n\t            return false;\n\t        }\n\t        if (value === true || value.trim() === 'true') {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    CheckBoxField.prototype.toLocalValue = function (value) {\n\t        return value + \"\";\n\t    };\n\t    return CheckBoxField;\n\t}(PropertyEditorInfo));\n\tvar ActionsItem = (function (_super) {\n\t    __extends(ActionsItem, _super);\n\t    function ActionsItem(node) {\n\t        _super.call(this, \"Actions\", \"\");\n\t        this.node = node;\n\t    }\n\t    ActionsItem.prototype.render = function (r) {\n\t        return suggestions.generateSuggestionsPanel(this.node);\n\t    };\n\t    ActionsItem.prototype.dispose = function () {\n\t        this.node = null;\n\t    };\n\t    return ActionsItem;\n\t}(Item));\n\tvar ContextActionsItem = (function (_super) {\n\t    __extends(ContextActionsItem, _super);\n\t    function ContextActionsItem(node, name, actions) {\n\t        _super.call(this, name, \"\");\n\t        this.actions = actions;\n\t    }\n\t    ContextActionsItem.prototype.dispose = function () {\n\t    };\n\t    ContextActionsItem.prototype.render = function (r) {\n\t        var result = UI.hc();\n\t        result.addChild(UI.h3(this.title()));\n\t        this.actions.forEach(function (x) {\n\t            result.addChild(UI.button(x.name, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.CHECKLIST, function (a) { return x.onClick(); }).margin(3, 3, 3, 3));\n\t        });\n\t        return result;\n\t    };\n\t    return ContextActionsItem;\n\t}(Item));\n\tvar MarkdownFieldUI = (function (_super) {\n\t    __extends(MarkdownFieldUI, _super);\n\t    function MarkdownFieldUI(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('source.mdcustom');\n\t    }\n\t    MarkdownFieldUI.prototype.setLabelWidth = function () {\n\t    };\n\t    MarkdownFieldUI.prototype.setLabelHeight = function () {\n\t    };\n\t    MarkdownFieldUI.prototype.setRequired = function (v) {\n\t    };\n\t    return MarkdownFieldUI;\n\t}(UI.AtomEditorElement));\n\tvar XMLField = (function (_super) {\n\t    __extends(XMLField, _super);\n\t    function XMLField(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('text.xml');\n\t    }\n\t    XMLField.prototype.setLabelWidth = function () {\n\t    };\n\t    XMLField.prototype.setLabelHeight = function () {\n\t    };\n\t    XMLField.prototype.setRequired = function (v) {\n\t    };\n\t    return XMLField;\n\t}(UI.AtomEditorElement));\n\tvar JSONField = (function (_super) {\n\t    __extends(JSONField, _super);\n\t    function JSONField(text, onchange) {\n\t        _super.call(this, text, onchange);\n\t        this.margin(0, 0, 6, 12);\n\t        this.setMini(false);\n\t        this.setStyle(\"min-height\", \"100px\");\n\t        //this.setStyle(\"max-height\",\"200px\");\n\t        this.setStyle(\"border\", \"solid\");\n\t        this.setStyle(\"border-width\", \"1px\");\n\t        this.setStyle(\"border-radius\", \"2px\");\n\t        this.setStyle(\"font-size\", \"1.15em\");\n\t        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n\t        this.setGrammar('source.json');\n\t    }\n\t    JSONField.prototype.setLabelWidth = function () {\n\t    };\n\t    JSONField.prototype.setLabelHeight = function () {\n\t    };\n\t    JSONField.prototype.setRequired = function (v) {\n\t    };\n\t    return JSONField;\n\t}(UI.AtomEditorElement));\n\tvar MarkdownField = (function (_super) {\n\t    __extends(MarkdownField, _super);\n\t    function MarkdownField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    MarkdownField.prototype.createField = function () {\n\t        var editor = new MarkdownFieldUI(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    MarkdownField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return MarkdownField;\n\t}(PropertyEditorInfo));\n\tvar ExampleField = (function (_super) {\n\t    __extends(ExampleField, _super);\n\t    function ExampleField(property, node, text, title) {\n\t        _super.call(this, property, node);\n\t        this.property = property;\n\t        this.node = node;\n\t        this.text = text;\n\t        this.setDescription(\"\");\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    ExampleField.prototype.createField = function () {\n\t        var editor = new JSONField(this.text, function (x) { });\n\t        return editor;\n\t    };\n\t    ExampleField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    ExampleField.prototype.fromModelToEditor = function () {\n\t    };\n\t    ExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t    };\n\t    return ExampleField;\n\t}(PropertyEditorInfo));\n\tvar XMLExampleField = (function (_super) {\n\t    __extends(XMLExampleField, _super);\n\t    function XMLExampleField(property, node, text, title) {\n\t        _super.call(this, property, node);\n\t        this.property = property;\n\t        this.node = node;\n\t        this.text = text;\n\t        this.setDescription(\"\");\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    XMLExampleField.prototype.createField = function () {\n\t        var editor = new XMLField(this.text, function (x) { });\n\t        return editor;\n\t    };\n\t    XMLExampleField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    XMLExampleField.prototype.fromModelToEditor = function () {\n\t    };\n\t    XMLExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t    };\n\t    return XMLExampleField;\n\t}(PropertyEditorInfo));\n\tvar XMLSchemaField = (function (_super) {\n\t    __extends(XMLSchemaField, _super);\n\t    function XMLSchemaField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    XMLSchemaField.prototype.createField = function () {\n\t        var editor = new XMLField(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    XMLSchemaField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return XMLSchemaField;\n\t}(PropertyEditorInfo));\n\tvar JSONSchemaField = (function (_super) {\n\t    __extends(JSONSchemaField, _super);\n\t    function JSONSchemaField() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    JSONSchemaField.prototype.createField = function () {\n\t        var editor = new JSONField(\"\", function (x) { });\n\t        return editor;\n\t    };\n\t    JSONSchemaField.prototype.needsSeparateLabel = function () {\n\t        return true;\n\t    };\n\t    return JSONSchemaField;\n\t}(PropertyEditorInfo));\n\tvar SelectBox = (function (_super) {\n\t    __extends(SelectBox, _super);\n\t    function SelectBox() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    SelectBox.prototype.createField = function () {\n\t        var options = valueOptions(this.property, this.node);\n\t        var a = this.node.attr(this.property.nameId());\n\t        if (a) {\n\t            if (!_.find(options, function (x) { return x == a.value(); })) {\n\t                options.push(a.value());\n\t            }\n\t        }\n\t        if (!this.property.isRequired() && !this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            options = [\"\"].concat(options);\n\t        }\n\t        var select = new UI.SelectField(this.property.nameId(), function (x) { }, \"\", UI.Icon.NONE, options);\n\t        select.getActualField().setOptions(options);\n\t        // select.clearUI();\n\t        return select;\n\t    };\n\t    return SelectBox;\n\t}(PropertyEditorInfo));\n\tvar TypeSelectBox = (function (_super) {\n\t    __extends(TypeSelectBox, _super);\n\t    function TypeSelectBox() {\n\t        _super.apply(this, arguments);\n\t    }\n\t    TypeSelectBox.prototype.fromEditorToModel = function (newValue, oldValue) {\n\t        //current implementation only allows changing the facets of certain types for safety\n\t        //TODO change this to arbitrary facets (remove type filtering)\n\t        var _this = this;\n\t        var oldNames = [];\n\t        var savedAttrs = [];\n\t        if (newValue && oldValue) {\n\t            try {\n\t                this.node.definition().allSuperTypes().forEach(function (superType) {\n\t                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n\t                        _this.addTypeFacets(superType, oldNames);\n\t                    }\n\t                });\n\t                savedAttrs = [].concat(this.node.attrs());\n\t            }\n\t            catch (err) {\n\t                console.log(err);\n\t            }\n\t        }\n\t        _super.prototype.fromEditorToModel.call(this);\n\t        if (newValue && oldValue) {\n\t            try {\n\t                //collecting facets allowed to remove\n\t                var currentUniverse = this.node.definition().universe();\n\t                var names = [];\n\t                this.node.definition().allSuperTypes().forEach(function (superType) {\n\t                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n\t                        _this.addTypeFacets(superType, names);\n\t                    }\n\t                });\n\t                if (oldNames.length > 0 && names.length > 0) {\n\t                    savedAttrs.forEach(function (attribute) {\n\t                        if (_.find(oldNames, function (facetName) { return facetName == attribute.name(); })\n\t                            && !_.find(names, function (facetName) { return facetName == attribute.name(); })) {\n\t                            _this.node.remove(attribute);\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t            catch (err) {\n\t                console.log(err);\n\t            }\n\t        }\n\t    };\n\t    TypeSelectBox.prototype.isAllowedTypeToReplaceFacets = function (currentTypeDef) {\n\t        return currentTypeDef.key() == universe.Universe10.StringTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.BooleanTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.NumberTypeDeclaration ||\n\t            currentTypeDef.key() == universe.Universe10.IntegerTypeDeclaration;\n\t    };\n\t    TypeSelectBox.prototype.addTypeFacets = function (currentTypeDef, names) {\n\t        currentTypeDef.properties().map(function (property) { return property.nameId(); }).forEach(function (name) { return names.push(name); });\n\t    };\n\t    return TypeSelectBox;\n\t}(SelectBox));\n\tvar TreeField = (function (_super) {\n\t    __extends(TreeField, _super);\n\t    function TreeField(input, caption) {\n\t        _super.call(this);\n\t        this.input = input;\n\t        var rend = {\n\t            render: function (n) {\n\t                var key = n.key();\n\t                var value = n.value();\n\t                if (typeof value === 'number' || typeof value === 'boolean') {\n\t                    value = \"\" + value;\n\t                }\n\t                if (typeof value != 'string') {\n\t                    value = \"\";\n\t                }\n\t                if (value.length > 30) {\n\t                    value = value.substring(0, 20) + \"...\";\n\t                }\n\t                if (!key) {\n\t                    if (value) {\n\t                        key = value;\n\t                        value = \"\";\n\t                    }\n\t                    else {\n\t                        key = \"-\";\n\t                        value = \"\";\n\t                    }\n\t                }\n\t                var res = UI.label(key, UI.Icon.CIRCUIT_BOARD, UI.TextClasses.HIGHLIGHT);\n\t                value = UI.label(value ? (\":\" + value) : \"\", UI.Icon.NONE, UI.TextClasses.SUCCESS);\n\t                var result = UI.hc(res, value);\n\t                return result;\n\t            }\n\t        };\n\t        var getChildren = function (x) {\n\t            return x.children();\n\t        };\n\t        var viewer = UI.treeViewer(getChildren, rend, function (x) { return x.key(); });\n\t        var inputV = {\n\t            children: function () {\n\t                return [input];\n\t            }\n\t        };\n\t        viewer.setInput(inputV);\n\t        this.addChild(UI.label(caption));\n\t        this.addChild(viewer);\n\t    }\n\t    TreeField.prototype.setLabelWidth = function () {\n\t    };\n\t    TreeField.prototype.setLabelHeight = function () {\n\t    };\n\t    TreeField.prototype.setRequired = function (v) {\n\t    };\n\t    return TreeField;\n\t}(UI.Panel));\n\tvar StructuredField = (function (_super) {\n\t    __extends(StructuredField, _super);\n\t    function StructuredField(pr, node, stvalue) {\n\t        _super.call(this, pr, node);\n\t        this.stvalue = stvalue;\n\t    }\n\t    StructuredField.prototype.createField = function () {\n\t        var tm = new TreeField(this.stvalue.lowLevel(), this.title() + \":\");\n\t        return tm;\n\t    };\n\t    return StructuredField;\n\t}(PropertyEditorInfo));\n\tvar LowLevelTreeField = (function (_super) {\n\t    __extends(LowLevelTreeField, _super);\n\t    function LowLevelTreeField(pr, node, lowLevel, title) {\n\t        _super.call(this, pr, node);\n\t        this.lowLevel = lowLevel;\n\t        if (title)\n\t            this.setTitle(title);\n\t    }\n\t    LowLevelTreeField.prototype.createField = function () {\n\t        var tm = new TreeField(this.lowLevel, this.title() + \":\");\n\t        return tm;\n\t    };\n\t    return LowLevelTreeField;\n\t}(PropertyEditorInfo));\n\tfunction category(p, node) {\n\t    if (p.getAdapter(def.RAMLPropertyService).isKey() || p.isRequired()) {\n\t        return null;\n\t    }\n\t    if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n\t        if (universehelpers.isDocumentationProperty(p) ||\n\t            universehelpers.isUsageProperty(p) ||\n\t            universehelpers.isDescriptionProperty(p) ||\n\t            universehelpers.isDisplayNameProperty(p) ||\n\t            universehelpers.isTitleProperty(p)) {\n\t            return \"Documentation\";\n\t        }\n\t        if (universehelpers.isAnnotationsProperty(p) ||\n\t            universehelpers.isIsProperty(p) ||\n\t            universehelpers.isSecuredByProperty(p) ||\n\t            (universehelpers.isTypeProperty(p) && !p.getAdapter(def.RAMLPropertyService).isTypeExpr())) {\n\t            return \"References\";\n\t        }\n\t        if (universehelpers.isProtocolsProperty(p)) {\n\t            return \"General\";\n\t        }\n\t    }\n\t    if (universehelpers.isTypeProperty(p)) {\n\t        if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n\t            return null;\n\t        }\n\t    }\n\t    if (node.property()) {\n\t        if (p.domain() && p.domain() != node.property().range()) {\n\t            return \"Facets\";\n\t        }\n\t    }\n\t    return \"General\";\n\t}\n\tvar valueOptions = function (x, node) {\n\t    var vls = search.enumValues(x, node);\n\t    if (universehelpers.isNameProperty(x)) {\n\t        if (node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t            if (node.property() && universehelpers.isBodyProperty(node.property())) {\n\t                if (!(node.property() instanceof def.UserDefinedProp)) {\n\t                    if (node.parent() &&\n\t                        universehelpers.isMethodType(node.parent().definition())) {\n\t                        return [\"application/json\", \"application/xml\", \"multipart/form-data\", \"application/x-www-form-urlencoded\"];\n\t                    }\n\t                    return [\"application/json\", \"application/xml\"];\n\t                }\n\t            }\n\t        }\n\t    }\n\t    if ((!vls) || vls.length == 0) {\n\t        var sug = x.suggester();\n\t        if (sug) {\n\t            vls = sug(node);\n\t        }\n\t        if ((!vls) || vls.length == 0) {\n\t            vls = x.getOftenKeys();\n\t        }\n\t    }\n\t    return _.unique(vls);\n\t};\n\tfunction addExampleControl(property, node, exampleElement, example, container) {\n\t    if (example.isYAML()) {\n\t        container.addItemToCategory(category(property, node), new LowLevelTreeField(property, node, exampleElement.lowLevel(), example.name()));\n\t    }\n\t    else if (example.isJSONString()) {\n\t        container.addItemToCategory(category(property, node), new ExampleField(property, node, example.asString(), example.name()));\n\t    }\n\t    else if (example.isXMLString()) {\n\t        container.addItemToCategory(category(property, node), new XMLExampleField(property, node, example.asString(), example.name()));\n\t    }\n\t}\n\tfunction buildItem(node, dialog) {\n\t    rp.utils.updateType(node);\n\t    var props = node.propertiesAllowedToUse();\n\t    var result = new TopLevelNode(node);\n\t    if (node.property() && node.property().description()) {\n\t        result.setDescription(node.property().description());\n\t    }\n\t    var isFragment = false;\n\t    if (node.definition() && !node.parent()) {\n\t        var fragmentName = rp.utils.getFragmentDefenitionName(node);\n\t        var superTypes = node.definition().allSuperTypes();\n\t        superTypes.push(node.definition());\n\t        superTypes.forEach(function (superType) {\n\t            if (superType.nameId && superType.nameId() === fragmentName) {\n\t                isFragment = true;\n\t            }\n\t        });\n\t    }\n\t    props = props.filter(function (x) {\n\t        if (isFragment && universehelpers.isNameProperty(x)) {\n\t            return false;\n\t        }\n\t        if ((universehelpers.isNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n\t            return false;\n\t        }\n\t        if ((universehelpers.isDisplayNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n\t            return false;\n\t        }\n\t        if (node.definition() && node.definition().isAssignableFrom(universe.Universe10.ExampleSpec.name) && !universehelpers.isNameProperty(x)) {\n\t            if (node.attrValue('value') === null) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    });\n\t    props = props.sort(function (x, y) {\n\t        if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            return -1;\n\t        }\n\t        if (y.getAdapter(def.RAMLPropertyService).isKey()) {\n\t            return 1;\n\t        }\n\t        if (x.nameId() < y.nameId()) {\n\t            return -1;\n\t        }\n\t        return 1;\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            //\n\t            if (universehelpers.isAnnotationsProperty(x)) {\n\t                //we ban annotations from appearing as we can not provide the editing\n\t                //with this mechanism\n\t                return;\n\t            }\n\t            if (universehelpers.isBooleanTypeType(x.range())) {\n\t                return;\n\t            }\n\t            if (universehelpers.isMarkdownStringType(x.range())) {\n\t                return;\n\t            }\n\t            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/json\"){\n\t            //     result.addItemToCategory(category(x,node), new ExampleField(x, node));\n\t            //     return;\n\t            // }\n\t            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/xml\"){\n\t            //     result.addItemToCategory(category(x,node), new XMLExampleField(x, node));\n\t            //     return;\n\t            // }\n\t            var nm = node.attr(x.nameId());\n\t            if (nm && typeof nm.value() === \"object\" && nm.value() !== null) {\n\t                result.addItemToCategory(category(x, node), new StructuredField(x, node, nm.value()));\n\t                return;\n\t            }\n\t            if (x.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n\t                var vl = inheritedContent(node);\n\t                if (vl) {\n\t                    if (vl.trim().charAt(0) == '{') {\n\t                        result.addItemToCategory(category(x, node), new JSONSchemaField(x, node));\n\t                        return;\n\t                    }\n\t                    if (vl.trim().charAt(0) == '<') {\n\t                        result.addItemToCategory(category(x, node), new XMLSchemaField(x, node));\n\t                        return;\n\t                    }\n\t                }\n\t            }\n\t            if (universehelpers.isSchemaProperty(x)\n\t                && x.domain() && x.domain().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t                return;\n\t            }\n\t            var vls = valueOptions(x, node);\n\t            if (vls && vls.length > 0 && ((x.domain() && x.domain().getAdapter(def.RAMLService).isUserDefined()))) {\n\t                if (universehelpers.isTypeProperty(x) &&\n\t                    node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t                    result.addItemToCategory(category(x, node), new TypeSelectBox(x, node));\n\t                }\n\t                else {\n\t                    result.addItemToCategory(category(x, node), new SelectBox(x, node));\n\t                }\n\t            }\n\t            else {\n\t                if (x.isMultiValue()) {\n\t                    result.addItemToCategory(category(x, node), new SimpleMultiEditor(x, node));\n\t                }\n\t                else {\n\t                    result.addItemToCategory(category(x, node), new PropertyEditorInfo(x, node));\n\t                }\n\t            }\n\t        }\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            if (universehelpers.isBooleanTypeType(x.range())) {\n\t                result.addItemToCategory(category(x, node), new CheckBoxField(x, node));\n\t            }\n\t        }\n\t    });\n\t    props.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            if (universehelpers.isMarkdownStringType(x.range())) {\n\t                result.addItemToCategory(category(x, node), new MarkdownField(x, node));\n\t            }\n\t        }\n\t    });\n\t    if (universehelpers.isTypeDeclarationSibling(node.definition())) {\n\t        props.forEach(function (x) {\n\t            if (universehelpers.isExampleProperty(x)) {\n\t                var exampleElement = node.element(universe.Universe10.TypeDeclaration.properties.example.name);\n\t                if (exampleElement) {\n\t                    var examples = node.localType().examples();\n\t                    if (examples && examples.length == 1) {\n\t                        var example = examples[0];\n\t                        addExampleControl(x, node, exampleElement, example, result);\n\t                    }\n\t                }\n\t            }\n\t            else if (universehelpers.isExamplesProperty(x)) {\n\t                var exampleElements = node.elementsOfKind(universe.Universe10.TypeDeclaration.properties.examples.name);\n\t                if (exampleElements && exampleElements.length > 0) {\n\t                    var examples = node.localType().examples();\n\t                    exampleElements.forEach(function (exampleElement) {\n\t                        var exampleElementName = exampleElement.attrValue(universe.Universe10.ExampleSpec.properties.name.name);\n\t                        if (exampleElementName) {\n\t                            var example = _.find(examples, function (currentExample) { return currentExample.name() == exampleElementName; });\n\t                            if (example) {\n\t                                addExampleControl(x, node, exampleElement, example, result);\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    }\n\t    if (!dialog) {\n\t        result.addItemToCategory(\"Palette\", new ActionsItem(node));\n\t        var visibleActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n\t        var cats = _.groupBy(visibleActions, function (x) { return x.category.join(\"/\"); });\n\t        for (var cat in cats) {\n\t            result.addItemToCategory(\"Palette\", new ContextActionsItem(node, cat, cats[cat]));\n\t        }\n\t    }\n\t    if (node.definition().getAdapter(def.RAMLService).isUserDefined() || node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n\t        result.addItemToCategory(\"Type\", new TypeDisplayItem(node));\n\t    }\n\t    return result;\n\t}\n\texports.buildItem = buildItem;\n\tfunction inheritedContent(node) {\n\t    var type = (node.associatedType && node.associatedType()) || (node.localType && node.localType());\n\t    while (type) {\n\t        if (type.superTypes().length > 1) {\n\t            return '';\n\t        }\n\t        if (type.isExternal()) {\n\t            return type.schemaString;\n\t        }\n\t        type = type.superTypes()[0];\n\t    }\n\t}\n\t\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar KeyValuePair = (function () {\n\t    function KeyValuePair() {\n\t    }\n\t    return KeyValuePair;\n\t}());\n\texports.KeyValuePair = KeyValuePair;\n\tvar Map = (function () {\n\t    function Map(ms) {\n\t        var _this = this;\n\t        if (ms === void 0) { ms = []; }\n\t        this.mappings = [];\n\t        ms.forEach(function (m) { return _this.mappings.push(m); });\n\t    }\n\t    Map.prototype.volume = function () { return this.mappings.length; };\n\t    Map.prototype.pairs = function () { return [].concat(this.mappings); };\n\t    Map.prototype.set = function (key, value) {\n\t        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n\t        if (pairs.length == 0)\n\t            this.mappings.push({ key: key, value: value });\n\t        else\n\t            pairs[0].value = value;\n\t    };\n\t    Map.prototype.get = function (key) {\n\t        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n\t        return (pairs.length == 0) ? null : pairs[0].value;\n\t    };\n\t    Map.prototype.map = function (callbackfn) {\n\t        return this.mappings.map(function (x) { return x.value; }).map(callbackfn);\n\t    };\n\t    Map.prototype.forEach = function (callbackfn) {\n\t        this.mappings.map(function (x) { return x.value; }).forEach(callbackfn);\n\t    };\n\t    Map.prototype.filter = function (callbackfn) {\n\t        return this.mappings.map(function (x) { return x.value; }).filter(callbackfn);\n\t    };\n\t    return Map;\n\t}());\n\texports.Map = Map;\n\t\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = require(\"invariant\");\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar UI = __webpack_require__(19);\n\tvar hl = __webpack_require__(23);\n\tvar universes = hl.universes;\n\tvar stubs = hl.stubs;\n\tvar _ = __webpack_require__(26);\n\tvar ds = hl.ds;\n\tvar editorTools = __webpack_require__(5);\n\tvar Inserter = (function () {\n\t    function Inserter(value, property, node) {\n\t        this.value = value;\n\t        this.property = property;\n\t        this.node = node;\n\t    }\n\t    Inserter.prototype.insert = function () {\n\t        var rn = this.property.range();\n\t        var key = this.value;\n\t        if (this.property.nameId() == universes.Universe10.Method.properties.body.name) {\n\t            key = \"application/json\";\n\t        }\n\t        if (this.property.nameId() == universes.Universe10.MethodBase.properties.responses.name) {\n\t            key = \"200\";\n\t        }\n\t        //TODO we need to take care of keys globally, including collections\n\t        //if (this.property.nameId() == universes.Universe10.TypeDeclaration.properties.xml.name\n\t        //    && this.node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name)) {\n\t        //    key = universes.Universe10.XMLSerializationHints.properties.name.name;\n\t        //}\n\t        var newNode = stubs.createStubNode(rn, this.property, key);\n\t        editorTools.aquireManager()._cleanOutline = true;\n\t        //this is a hack TODO FIX ME we should remove it after we will fix partial reconcile on outline\n\t        this.node.add(newNode);\n\t        editorTools.aquireManager().patchCurrentNode(this.node);\n\t    };\n\t    return Inserter;\n\t}());\n\tfunction generateSuggestionsPanel(node) {\n\t    var cm = node.definition().allProperties();\n\t    var result = UI.vc();\n\t    var hc = UI.hc();\n\t    result.addChild(UI.h3(\"Insertions and Delete: \"));\n\t    result.addChild(hc);\n\t    cm.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            return;\n\t        }\n\t        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n\t            return;\n\t        }\n\t        if (_.find(node.lowLevel().children(), function (y) { return y.key() == x.nameId(); })) {\n\t            return;\n\t        }\n\t        if (node.lowLevel().includesContents()) {\n\t            return;\n\t        }\n\t        var inserter = new Inserter(\"\", x, node);\n\t        hc.addChild(UI.button(x.nameId(), UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.INFO, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n\t    });\n\t    cm.forEach(function (x) {\n\t        if (x.isValueProperty()) {\n\t            return;\n\t        }\n\t        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n\t            var enums = x.enumOptions();\n\t            if (enums) {\n\t                enums.forEach(function (y) {\n\t                    if (_.find(node.lowLevel().children(), function (z) { return z.key() == y; })) {\n\t                        return;\n\t                    }\n\t                    if (node.lowLevel().includesContents()) {\n\t                        return;\n\t                    }\n\t                    var inserter = new Inserter(y, x, node);\n\t                    hc.addChild(UI.button(y, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.WARNING, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n\t                });\n\t            }\n\t            return;\n\t        }\n\t    });\n\t    hc.addChild(UI.button(\"Delete\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.ERROR, UI.Icon.NONE, function (x) {\n\t        if (node.parent()) {\n\t            node.parent().remove(node);\n\t        }\n\t        else {\n\t            node.lowLevel().unit().updateContent('');\n\t            editorTools.aquireManager().updateText();\n\t            editorTools.aquireManager().updateDetails();\n\t        }\n\t    }).margin(3, 3, 3, 3));\n\t    return result;\n\t}\n\texports.generateSuggestionsPanel = generateSuggestionsPanel;\n\t\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar _ = __webpack_require__(26);\n\tvar UI = __webpack_require__(19);\n\tvar hl = __webpack_require__(23);\n\tvar def = hl.ds;\n\tfunction findBuiltInValueType(type) {\n\t    if (type.isValueType() && type.isBuiltIn())\n\t        return type;\n\t    var superTypes = type.allSuperTypes();\n\t    if (superTypes == null || superTypes.length == 0)\n\t        return null;\n\t    return _.find(superTypes, function (superType) { return (superType.isValueType() && superType.isBuiltIn()); });\n\t}\n\tfunction getValueTypeDisplayName(type) {\n\t    var builtinValueType = findBuiltInValueType(type);\n\t    if (!builtinValueType)\n\t        type.nameId() ? type.nameId() : \"\";\n\t    if (builtinValueType.nameId() == \"StringType\") {\n\t        return \"string\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"AnyType\") {\n\t        return \"any\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"NumberType\") {\n\t        return \"number\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"IntegerType\") {\n\t        return \"integer\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"NullType\") {\n\t        return \"null\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"TimeOnlyType\") {\n\t        return \"time-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateOnlyType\") {\n\t        return \"date-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateTimeOnlyType\") {\n\t        return \"datetime-only\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"DateTimeType\") {\n\t        return \"datetime\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"FileType\") {\n\t        return \"file\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"BooleanType\") {\n\t        return \"boolean\";\n\t    }\n\t    else if (builtinValueType.nameId() == \"AnnotationTarget\") {\n\t        return \"annotation target\";\n\t    }\n\t    return builtinValueType.nameId() ? builtinValueType.nameId() : \"\";\n\t}\n\tfunction getTypeDisplayName(type) {\n\t    if (type == null)\n\t        return \"\";\n\t    if (type.isValueType()) {\n\t        return getValueTypeDisplayName(type);\n\t    }\n\t    else if (type.hasArrayInHierarchy()) {\n\t        var componentType = type.arrayInHierarchy().componentType();\n\t        if (componentType && componentType.nameId()) {\n\t            return getTypeDisplayName(componentType) + \"[]\";\n\t        }\n\t        else {\n\t            return \"array\";\n\t        }\n\t    }\n\t    else if (type.hasUnionInHierarchy()) {\n\t        var asUnion = type.unionInHierarchy();\n\t        return getTypeDisplayName(asUnion.leftType()) +\n\t            \" | \" + getTypeDisplayName(asUnion.rightType());\n\t    }\n\t    return type.nameId() ? type.nameId() : \"\";\n\t}\n\texports.getTypeDisplayName = getTypeDisplayName;\n\tvar renderType = function (definition) {\n\t    var result = UI.vc();\n\t    result.addChild(UI.label(\"definition:\" + getTypeDisplayName(definition)));\n\t    var elements = definition.properties();\n\t    var superTypes = definition.superTypes();\n\t    if (superTypes) {\n\t        result.addChild(UI.h3(\"Super types:\"));\n\t        definition.allSuperTypes().forEach(function (x) {\n\t            result.addChild(UI.hc(UI.label(getTypeDisplayName(x), UI.Icon.TAG)));\n\t        });\n\t    }\n\t    var rf = definition.getAdapter(def.RAMLService).getRepresentationOf();\n\t    if (rf) {\n\t        var facets = rf.getFixedFacets();\n\t        if (Object.keys(facets).length > 0) {\n\t            result.addChild(UI.h3(\"All facets\"));\n\t            Object.keys(facets).forEach(function (x) {\n\t                result.addChild(UI.label(x + \":\" + facets[x].value()));\n\t            });\n\t        }\n\t    }\n\t    if (elements && elements.length > 0) {\n\t        result.addChild(UI.h3(\"All properties\"));\n\t        elements.forEach(function (property) {\n\t            var propertyName = property.nameId();\n\t            if (!property.isRequired()) {\n\t                propertyName += \"?\";\n\t            }\n\t            result.addChild(UI.hc(UI.label(propertyName, UI.Icon.LINK), UI.label(\": \" + getTypeDisplayName(property.range()), UI.Icon.NONE, UI.TextClasses.WARNING)));\n\t        });\n\t    }\n\t    if (definition.hasArrayInHierarchy()) {\n\t        result.addChild(UI.h3(\"Component type:\"));\n\t        result.addChild(renderType(definition.arrayInHierarchy().componentType()));\n\t    }\n\t    if (definition.hasUnionInHierarchy()) {\n\t        result.addChild(UI.h3(\"Union type:\"));\n\t        result.addChild(UI.h3(\"Left:\"));\n\t        result.addChild(renderType(definition.unionInHierarchy().leftType()));\n\t        result.addChild(UI.h3(\"Right:\"));\n\t        result.addChild(renderType(definition.unionInHierarchy().rightType()));\n\t    }\n\t    return result;\n\t};\n\tfunction render(node) {\n\t    var wn = node.wrapperNode();\n\t    var definition = wn.highLevel().localType();\n\t    return renderType(definition);\n\t}\n\texports.render = render;\n\t\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/main.d.ts\" />\n\t\"use strict\";\n\tvar hl = __webpack_require__(23);\n\tvar ds = hl.ds;\n\tvar universe = ds.universesInfo;\n\tfunction getDefaultValue(node, property) {\n\t    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n\t        return node.name().indexOf(\"?\") !== node.name().length - 1;\n\t    }\n\t}\n\texports.getDefaultValue = getDefaultValue;\n\tfunction hasDefault(property) {\n\t    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\texports.hasDefault = hasDefault;\n\t\n\n\n/***/ }\n/******/ ])\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3a001522bbce7e2a5a44\n **/","/// <reference path=\"../../typings/main.d.ts\" />\n\"use strict\";\nvar Console = require('./console/index');\nvar apiList = require('./popular-apis/popular-apis');\nvar editorTools = require('./editor-tools/editor-tools');\nvar quickCommands = require('./quick-commands/quick-commands');\nvar provider = require(\"./suggestion/provider\");\nvar quickOutline = require(\"./quick-outline/quick-outline\");\nvar decl = require(\"./dialogs/assist-utils\");\nvar linterUI = require(\"./core/linter-ui\");\nvar CompositeDisposable = require('atom').CompositeDisposable;\nvar sharedASTInitializer = require(\"./shared-ast-initializer\");\nvar commandManager = require(\"./quick-commands/command-manager\");\nvar contextMenu = require(\"./context-menu/contextMenu\");\nvar quickFixActions = require(\"./context-menu/quickFix\");\nvar actions = require(\"./context-menu/actions\");\nvar package_entry_point;\n(function (package_entry_point) {\n    var subscriptions = new CompositeDisposable();\n    function activate(state) {\n        require('atom-package-deps').install('api-workbench', true)\n            .then(function () {\n            subscriptions.add(atom.commands.add('atom-workspace', {\n                'api-workbench:popular-apis': apiList.showPopularApis,\n                'api-workbench:editor-tools': editorTools.initEditorTools,\n                'api-workbench:console': Console.toggle,\n                'api-workbench:go-to-definition': decl.gotoDeclaration,\n                'api-workbench:find-usages': decl.findUsages,\n                'api-workbench:quick-outline': quickOutline.show,\n                'api-workbench:quick-commands': quickCommands.showCommands,\n                'api-workbench:rename': decl.renameRAMLElement,\n                'api-workbench:new-project': decl.newProject,\n                'api-workbench:select-node': decl.select,\n                'api-workbench:revalidate': decl.revalidate\n            }));\n            subscriptions.add(atom.workspace.addOpener(Console.opener));\n            //subscriptions.add(atom.workspace.addOpener(RamlScriptReport.opener))\n            commandManager.initialize();\n            contextMenu.initialize();\n            sharedASTInitializer.initialize();\n            quickCommands.registerCommands();\n            quickFixActions.initialize();\n            actions.register();\n            editorTools.initEditorTools();\n        });\n    }\n    package_entry_point.activate = activate;\n    function getProvider() {\n        return provider;\n    }\n    package_entry_point.getProvider = getProvider;\n    function provideLinter() {\n        return linterUI;\n    }\n    package_entry_point.provideLinter = provideLinter;\n    function consumeLinter(linterApi) {\n        subscriptions.add(linterUI.initEditorObservers(linterApi));\n    }\n    package_entry_point.consumeLinter = consumeLinter;\n    function deactivate() {\n        subscriptions.dispose();\n    }\n    package_entry_point.deactivate = deactivate;\n    package_entry_point.config = {\n        grammars: {\n            type: 'array',\n            default: [\n                'source.raml'\n            ]\n        },\n        openConsoleInSplitPane: {\n            type: 'boolean',\n            default: true\n        }\n    };\n})(package_entry_point || (package_entry_point = {}));\nmodule.exports = package_entry_point;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/main.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = require(\"atom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"atom-package-deps\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-package-deps\"\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar url = require('url');\nvar ConsoleView = require('./console-view');\natom.deserializers.add({\n    name: 'RAMLConsoleView',\n    deserialize: function (state) {\n        if (state) {\n            return createConsoleView(state);\n        }\n    }\n});\nfunction createConsoleView(opts) {\n    return new ConsoleView.RAMLConsoleView(opts);\n}\nexports.createConsoleView = createConsoleView;\nfunction isConsoleView(obj) {\n    return obj instanceof ConsoleView.RAMLConsoleView;\n}\nexports.isConsoleView = isConsoleView;\nfunction toggle() {\n    if (isConsoleView(atom.workspace.getActivePaneItem())) {\n        atom.workspace.destroyActivePaneItem();\n        return;\n    }\n    var editor = atom.workspace.getActiveTextEditor();\n    if (!editor) {\n        atom.notifications.addInfo('The API Console can only be opened when focused on a RAML file editor.');\n        return;\n    }\n    var grammars = atom.config.get('api-workbench.grammars') || [];\n    if (grammars.indexOf(editor.getGrammar().scopeName) === -1) {\n        atom.notifications.addInfo('The API Console can only be opened with focus on a RAML file.');\n        return;\n    }\n    if (!removeConsoleForEditor(editor)) {\n        addConsoleForEditor(editor);\n        return;\n    }\n}\nexports.toggle = toggle;\nfunction removeConsoleForEditor(editor) {\n    var uri = ConsoleView.RAMLConsoleView.getUriForEditor(editor);\n    var previewPane = atom.workspace.paneForURI(uri);\n    if (previewPane) {\n        previewPane.destroyItem(previewPane.itemForURI(uri));\n        return true;\n    }\n    return false;\n}\nexports.removeConsoleForEditor = removeConsoleForEditor;\nfunction addConsoleForEditor(editor, state) {\n    return open(ConsoleView.RAMLConsoleView.getUriForEditor(editor), state);\n}\nexports.addConsoleForEditor = addConsoleForEditor;\nfunction addConsoleForFile(filename, state) {\n    return open(ConsoleView.RAMLConsoleView.getUriForFilename(filename), state);\n}\nexports.addConsoleForFile = addConsoleForFile;\nfunction opener(uri) {\n    try {\n        var result = url.parse(uri);\n        var protocol = result.protocol;\n        var host = result.host;\n        var pathname = result.pathname;\n    }\n    catch (err) {\n        return;\n    }\n    if (protocol !== 'raml-console:') {\n        return;\n    }\n    try {\n        pathname = decodeURI(pathname || '').substr(1);\n    }\n    catch (err) {\n        return;\n    }\n    if (host === 'editor') {\n        return createConsoleView({ editorId: pathname });\n    }\n    return createConsoleView({ filename: pathname });\n}\nexports.opener = opener;\nfunction shouldSplit() {\n    return atom.config.get('api-workbench.openConsoleInSplitPane');\n}\nfunction getWorkspaceOptions() {\n    return {\n        activatePane: false,\n        searchAllPanes: true,\n        split: shouldSplit() ? 'right' : undefined\n    };\n}\nfunction openView(raml, state) {\n    var pane = atom.workspace.getActivePane();\n    var item = createConsoleView({ raml: raml, state: state });\n    // TODO(blakeembrey): Fix RAML instance passed in, RAML 0.8 interface is dead.\n    if (shouldSplit()) {\n        pane = pane.findOrCreateRightmostSibling();\n    }\n    atom.workspace.itemOpened(item);\n    pane.activateItem(item);\n    return Promise.resolve(item);\n}\nexports.openView = openView;\nfunction open(uri, state) {\n    var workspaceOptions = getWorkspaceOptions();\n    var previousActivePane = atom.workspace.getActivePane();\n    return atom.workspace.open(uri, workspaceOptions)\n        .then(function (view) {\n        view.setState(state);\n        return view;\n    });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar path = require('path');\nvar fs = require('fs');\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar childProcess = require('child_process');\nvar atom = require('../core/atomWrapper');\nvar fileDialogUtils = UI.fdUtils;\nvar XMLHttpRequestConstructor = require(\"xmlhttprequest\").XMLHttpRequest;\nvar mkdirp = require('mkdirp');\nvar defaultBranch = \"production\";\nfunction buildXHR() {\n    var x = new XMLHttpRequestConstructor;\n    return x;\n}\nvar ExecConfig = (function () {\n    function ExecConfig() {\n        this.callPath = null;\n        this.wrkDir = null;\n        this.logEnabled = false;\n        this.errLogEnabled = true;\n        this.messageBefore = '';\n        this.messageAfter = '';\n        this.messageError = '';\n        this.maxLogLength = -1;\n        this.onError = null;\n    }\n    return ExecConfig;\n}());\nfunction execProcess(config) {\n    try {\n        if (config.logEnabled) {\n            console.log(config.messageBefore);\n        }\n        var logObj = childProcess.execSync(config.callPath, {\n            cwd: config.wrkDir,\n            encoding: 'utf8',\n            stdio: [0, 1, 2]\n        });\n        if (config.logEnabled) {\n            console.log(config.messageAfter);\n            if (logObj) {\n                var log = logObj.toString();\n                if (log.trim().length > 0) {\n                    if (config.maxLogLength < 0) {\n                        console.log(log);\n                    }\n                    else if (config.maxLogLength > 0) {\n                        console.log(log.substring(0, Math.min(config.maxLogLength, log.length)));\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        if (config.onError) {\n            config.onError(err);\n        }\n        if (config.errLogEnabled) {\n            console.log(config.messageError);\n            console.log(err.message);\n        }\n    }\n}\nfunction branches(repoName, cb) {\n    var xhr = buildXHR();\n    var reposLink = 'https://api.github.com/repos/raml-apis/' + repoName + '/branches';\n    xhr.open(\"GET\", reposLink);\n    xhr.onload = function () {\n        var data = JSON.parse(xhr.responseText);\n        cb(data);\n    };\n    xhr.send();\n}\nfunction gitInstalled() {\n    var errorOccured = false;\n    var config = new ExecConfig();\n    config.callPath = 'git version';\n    config.wrkDir = fileDialogUtils.getHome();\n    config.logEnabled = true;\n    config.messageError = 'Git launch failed';\n    config.onError = function () {\n        errorOccured = true;\n    };\n    execProcess(config);\n    return !errorOccured;\n}\nexports.gitInstalled = gitInstalled;\nvar RamlOutline = (function (_super) {\n    __extends(RamlOutline, _super);\n    function RamlOutline() {\n        _super.apply(this, arguments);\n        this.disposables = new UI.CompositeDisposable();\n    }\n    RamlOutline.prototype.getTitle = function () {\n        return \"RAML Apis\";\n    };\n    RamlOutline.prototype.load = function () {\n        var reposLink = 'https://api.github.com/orgs/raml-apis/repos?per_page=200';\n        var sec = UI.section(\"RAML Apis\");\n        var xhr = buildXHR();\n        sec.addChild(UI.label(\"loading...\"));\n        this.html(sec.renderUI());\n        xhr.open(\"GET\", reposLink);\n        var outer = this;\n        var home = fileDialogUtils.getHome();\n        var dir = path.resolve(home, \"apis\");\n        var apiListData = require('../../util/config/apiList.json');\n        var secHC = UI.hc();\n        var sett = UI.a(\"Cloning to: \" + dir + \"(click to change)\", function (x) {\n            fileDialogUtils.openFolderDialog(\"Please enter new path to clone\", function (newVal) {\n                dir = newVal;\n                sett.setText(\"Cloning to: \" + dir + \"(click to change)\");\n            }, true, dir);\n        }, UI.Icon.SETTINGS, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n        secHC.addChild(sett);\n        var branchLink = UI.a(\"\" + defaultBranch, function (x) {\n            UI.prompt(\"Please enter name of the branch\", function (y) {\n                defaultBranch = y;\n                branchLink.setText(y);\n            }, defaultBranch);\n        }, UI.Icon.GIT_BRANCH, UI.TextClasses.NORMAL, UI.HighLightClasses.HIGHLIGHT);\n        branchLink.margin(10, 0);\n        var l = UI.list(apiListData, function (x) {\n            var uiLabel = UI.label(x.name, UI.Icon.REPO, UI.TextClasses.HIGHLIGHT, UI.HighLightClasses.NONE).pad(10, 10);\n            var buttonCallback = function () {\n                if (!fs.existsSync(dir)) {\n                    fs.mkdirSync(dir);\n                }\n                var ok = cloneRepo(x.git_url, dir);\n                if (ok) {\n                    var output = path.resolve(dir, x.name);\n                    if (!fs.existsSync(dir)) {\n                        fs.mkdirSync(dir);\n                    }\n                    var a = path.resolve(output, \"api.raml\");\n                    if (!fs.existsSync(a)) {\n                        a = path.resolve(output, x.name + \".raml\");\n                    }\n                    if (fs.existsSync(a)) {\n                        atom.open({ pathsToOpen: [output, a] });\n                    }\n                    else {\n                        atom.open({ pathsToOpen: [output] });\n                    }\n                }\n            };\n            var uiButton = UI.button(\"clone\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, buttonCallback);\n            return UI.hc(uiLabel, uiButton);\n        });\n        secHC.addChild(l);\n        outer.html(secHC.renderUI());\n    };\n    RamlOutline.prototype.attached = function () {\n        if (this._isAttached) {\n            return;\n        }\n        this.load();\n        this._isAttached = true;\n    };\n    RamlOutline.prototype.destroy = function () {\n        this.disposables.dispose();\n    };\n    return RamlOutline;\n}(SC.Scrollable));\nfunction info(name, callBack) {\n    var pane = null;\n    var section = UI.section(name, UI.Icon.BOOK, false, false);\n    var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n    buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n    var okButton = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n        pane.destroy();\n    });\n    buttonBar.addChild(okButton);\n    section.addChild(buttonBar);\n    pane = atom.workspace.addModalPanel({\n        item: section.renderUI()\n    });\n}\nexports.info = info;\nfunction cloneRepo(repo, dir, branch) {\n    if (branch === void 0) { branch = null; }\n    if (!branch) {\n        branch = defaultBranch;\n    }\n    var repoName = extractRepoName(repo);\n    mkdirp.sync(dir);\n    var ok = true;\n    var config = new ExecConfig();\n    config.callPath = 'git clone --branch ' + branch + ' \"' + repo + '\"';\n    config.wrkDir = dir;\n    config.logEnabled = true;\n    config.messageBefore = 'Cloning GIT repository: ' + repo;\n    config.messageAfter = 'Cloning complete: ' + repo;\n    config.messageError = 'Cloning failed: ' + repo;\n    config.onError = function (error) {\n        ok = false;\n        info(error.message, function () { return null; });\n    };\n    execProcess(config);\n    return ok;\n}\nfunction extractRepoName(repoPath) {\n    return repoPath.substring(repoPath.lastIndexOf('/') + 1, repoPath.lastIndexOf('.'));\n}\nfunction showPopularApis() {\n    if (!gitInstalled()) {\n        info(\"GIT is required to clone APIs. Please install GIT.\", function (x) { });\n        return;\n    }\n    editorTools.doSplit(new RamlOutline(), editorTools.SplitDirections.RIGHT);\n}\nexports.showPopularApis = showPopularApis;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/popular-apis/popular-apis.js\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\n/// <reference path=\"../../../typings/main.d.ts\" />\nvar path = require('path');\nvar atom = require('../core/atomWrapper');\nvar rp = require(\"raml-1-parser\");\nvar project = rp.project;\nvar detailsView = require(\"./details-view\");\nvar outlineView = require(\"./outline-view\");\nvar _bmc = 0;\nfunction benchmark(func) {\n    var t0 = new Date().getTime();\n    if (_bmc != 0 && func)\n        console.log(func + \" took \" + (t0 - _bmc) + \" miliseconds.\");\n    _bmc = t0;\n}\nvar EditorManager = (function () {\n    function EditorManager(display) {\n        var _this = this;\n        if (display === void 0) { display = true; }\n        this._initialized = false;\n        this.updateCount = 0;\n        this.outlineCount = 0;\n        this.fire = true;\n        this.opened = false;\n        this._cleanOutline = false;\n        this.performanceDebug = true;\n        this.placeholder = false;\n        manager = window[\"manager\"] = this;\n        atom.workspace.onDidChangeActivePaneItem(function (e) { return _this.updateEverything(display); });\n        this.updateEverything(display);\n        this.addAutoCloseListener();\n    }\n    EditorManager.prototype.getPath = function () {\n        console.log(\"ETM::GetPath\");\n        return this.currentEditor ? this.currentEditor.getPath() : null;\n    };\n    EditorManager.prototype.getCurrentEditor = function () { return this.currentEditor; };\n    EditorManager.prototype.internalScheduleUpdateViews = function (count) {\n        var _this = this;\n        this.updateCount = count;\n        setTimeout(function () {\n            if (_this.updateCount == count) {\n                _this.updateViews();\n            }\n        }, 500);\n    };\n    EditorManager.prototype.scheduleViewsUpdate = function () {\n        if (this.fire) {\n            this.internalScheduleUpdateViews(this.updateCount + 1);\n        }\n    };\n    EditorManager.prototype.internalScheduleOutlineUpdate = function (count) {\n        var _this = this;\n        this.outlineCount = count;\n        setTimeout(function () {\n            if (_this.outlineCount == count) {\n                _this.updateOutline();\n            }\n        }, 500);\n    };\n    EditorManager.prototype.scheduleOutlineUpdate = function () {\n        this.internalScheduleOutlineUpdate(this.outlineCount + 1);\n    };\n    EditorManager.prototype.addAutoCloseListener = function () {\n        var _this = this;\n        atom.workspace.onDidDestroyPane(function (evt) {\n            try {\n                var edcount = atom.workspace.getPaneItems().filter(function (e) {\n                    return e['softTabs'] != undefined;\n                }).length;\n                if (edcount == 0) {\n                    _this.ast = null;\n                    _this.unit = null;\n                    _this._currentNode = null;\n                    _this.currentEditor = null;\n                    global.cleanCache();\n                    if (atom.workspace.paneForItem(_this._view))\n                        atom.workspace.paneForItem(_this._view).destroy();\n                    if (atom.workspace.paneForItem(_this._details))\n                        atom.workspace.paneForItem(_this._details).destroy();\n                    _this.opened = false;\n                }\n            }\n            catch (e) {\n                //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n                console.log(e);\n            }\n        });\n    };\n    EditorManager.prototype.getOrCreateView = function () {\n        if (!this._view) {\n            this._view = new outlineView.RamlOutline();\n            if (this.ast) {\n                this._view.setUnit(this.ast);\n            }\n        }\n        return this._view;\n    };\n    EditorManager.prototype.getDetails = function () {\n        if (!this._details)\n            this._details = new detailsView.RamlDetails();\n        return this._details;\n    };\n    EditorManager.prototype.updateDetails = function () {\n        this.getDetails().update();\n    };\n    EditorManager.prototype.reparseAST = function () {\n        var _this = this;\n        if (this.currentEditor) {\n            var _path = this.currentEditor.getPath();\n            var bf = this.currentEditor.getBuffer();\n            var prj = project.createProject(path.dirname(_path));\n            var unit = prj.setCachedUnitContent(path.basename(_path), this.currentEditor.getBuffer().getText());\n            unit.project().addTextChangeListener(function (delta) {\n                if (delta.unit != unit) {\n                    return;\n                }\n                var cm = delta.offset;\n                var end = delta.replacementLength;\n                var text = delta.text;\n                var buffer = _this.currentEditor.getBuffer();\n                var start = buffer.positionForCharacterIndex(cm);\n                var endPosition = buffer.positionForCharacterIndex(cm + end);\n                try {\n                    _this.fire = false;\n                    buffer.setTextInRange({ start: start, end: endPosition }, text);\n                    _this.scheduleOutlineUpdate();\n                }\n                finally {\n                    _this.fire = true;\n                }\n            });\n            this.ast = unit.highLevel();\n            this.unit = unit;\n        }\n    };\n    EditorManager.prototype.isETPane = function (pane) {\n        if (!this._view) {\n            return;\n        }\n        var items = pane.getItems();\n        return (items.indexOf(this.getDetails()) >= 0 || items.indexOf(this._view) >= 0);\n    };\n    EditorManager.prototype.display = function () {\n        console.log(\"ETM::Display\");\n        var aw = atom.workspace;\n        var fpane = atom.workspace.paneForItem(this.getCurrentEditor());\n        if (!fpane)\n            return;\n        if (!aw.paneForItem(this.getOrCreateView()))\n            doSplit(this.getOrCreateView());\n        if (!aw.paneForItem(manager.getDetails()))\n            doSplit(this.getDetails(), SplitDirections.BOTTOM);\n        this.opened = true;\n    };\n    EditorManager.prototype.updateText = function (node) {\n        this.fire = false;\n        var editor = this.currentEditor;\n        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n        editor.setText(this.unit.contents());\n        this.fire = true;\n        if (pos)\n            editor.setCursorBufferPosition(pos);\n    };\n    EditorManager.prototype.selectNode = function (hnode) {\n        var node = hnode.lowLevel();\n        if (!node)\n            return;\n        var editor = this.currentEditor;\n        if (!editor)\n            return;\n        var pos = node ? editor.getBuffer().positionForCharacterIndex(node.start()) : null;\n        if (pos)\n            editor.setCursorBufferPosition(pos);\n    };\n    EditorManager.prototype.setViewsDisplayStyle = function (visible) {\n        if (this._details && this._details.element) {\n            this._details.element.style.display = visible ? null : \"none\";\n        }\n        if (this._view && this._view.element) {\n            this._view.element.style.display = visible ? null : \"none\";\n        }\n    };\n    EditorManager.prototype.isRaml = function (editor) {\n        if (!editor) {\n            return false;\n        }\n        var editorPath = editor.getPath();\n        if (!editorPath) {\n            return false;\n        }\n        var extName = path.extname(editorPath);\n        if (extName !== '.raml') {\n            return false;\n        }\n        return true;\n    };\n    EditorManager.prototype.updateEverything = function (display) {\n        if (display === void 0) { display = true; }\n        var editor = atom.workspace.getActiveTextEditor();\n        if (editor) {\n            this.setViewsDisplayStyle(this.isRaml(editor));\n        }\n        if (!editor || editor == this.currentEditor || !this.isRaml(editor)) {\n            return;\n        }\n        this.currentEditor = editor;\n        if (this.opened == false && display)\n            this.display();\n        if (!editor.patched) {\n            this.addListenersToEditor(editor);\n        }\n        this.reparseAST();\n        var pos = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n        this.positionUpdated(pos);\n        this.scheduleViewsUpdate();\n    };\n    EditorManager.prototype.addListenersToEditor = function (cedit) {\n        var _this = this;\n        var buffer = cedit.getBuffer();\n        buffer.onDidChange(function (x) {\n            try {\n                var t0 = new Date().getMilliseconds();\n                _this.reparseAST();\n                var pos = buffer.characterIndexForPosition(cedit.getCursorBufferPosition());\n                _this.positionUpdated(pos);\n                _this.scheduleViewsUpdate();\n                var t1 = new Date().getMilliseconds();\n                if (_this.performanceDebug) {\n                    console.log(\"Change take:\" + (t1 - t0));\n                }\n            }\n            catch (e) {\n                console.log(e);\n            }\n        });\n        //updating ast node on position change\n        cedit.getLastCursor().onDidChangePosition(function (x) {\n            if (!_this.fire)\n                return;\n            _this.positionUpdated(buffer.characterIndexForPosition(cedit.getCursorBufferPosition()));\n            _this.scheduleViewsUpdate();\n        });\n        this.addListenersOnMove(cedit);\n        this.currentEditor.patched = true;\n    };\n    EditorManager.prototype.addListenersOnMove = function (cedit) {\n        var _this = this;\n        var movingPane = false;\n        atom.workspace.onDidAddPaneItem(function (event) {\n            if (movingPane || _this.isETPane(event.pane) == false || event.item == _this.getOrCreateView() || event.item == _this.getDetails())\n                return event;\n            setTimeout(function () {\n                try {\n                    var fpane = atom.workspace.paneForItem(cedit);\n                    if (fpane) {\n                        movingPane = true;\n                        event.pane.moveItemToPane(event.item, fpane, null);\n                        movingPane = false;\n                        fpane.setActiveItem(event.item);\n                        fpane.activate();\n                    }\n                }\n                catch (e) {\n                    //TODO REMOVE IT LATER WE NEED TO BE PRETy DEFENSIVE AT THIS MOMENT\n                    console.log(e);\n                }\n            }, 18);\n        });\n    };\n    //_selectedNode: hl.IHighLevelNode;\n    EditorManager.prototype.patchCurrentNode = function (n) {\n        this._currentNode = n;\n    };\n    EditorManager.prototype.getCurrentNode = function () {\n        if (this._currentNode == null)\n            return this._currentNode = this.ast;\n        else\n            return this._currentNode;\n    };\n    EditorManager.prototype.setSelectedNode = function (node) {\n        //this._selectedNode = node;\n        if (this.unit) {\n            var unitPath = this.unit.absolutePath();\n            while (node.lowLevel().unit().absolutePath() != unitPath) {\n                if (!node.parent()) {\n                    break;\n                }\n                else {\n                    node = node.parent();\n                }\n            }\n        }\n        var id = node.id();\n        var anode = this.ast.findById(id);\n        if (anode) {\n            node = anode;\n        }\n        if (this._details) {\n            this._details.show(node);\n        }\n        var editor = this.getCurrentEditor();\n        if (editor) {\n            this.fire = false;\n            try {\n                var buffer = editor.getBuffer();\n                var posStart = buffer.positionForCharacterIndex(node.lowLevel().start());\n                var posEnd = buffer.positionForCharacterIndex(node.lowLevel().end());\n                editor.setCursorBufferPosition(posStart);\n                this.positionUpdated(buffer.characterIndexForPosition(editor.getCursorBufferPosition()));\n            }\n            finally {\n                this.fire = true;\n            }\n        }\n    };\n    EditorManager.prototype.getSelectedNode = function () {\n        return this.getCurrentNode();\n        //else return this._selectedNode;\n    };\n    EditorManager.prototype.setText = function (text) {\n        console.log(\"ETM::SetText\");\n        var editor = this.currentEditor;\n        if (editor == null)\n            return;\n        editor.setText(text);\n    };\n    EditorManager.prototype.updateViews = function () {\n        var cNode = this.getCurrentNode();\n        var ds = new Date().getMilliseconds();\n        if (this._details) {\n            this.getDetails().show(cNode);\n        }\n        if (this._view) {\n            this.getOrCreateView().setUnit(manager.ast);\n            this.getOrCreateView().setSelection(cNode);\n        }\n        var d1 = new Date().getMilliseconds();\n        if (this.performanceDebug) {\n            console.log(\"Views update:\" + (d1 - ds));\n        }\n    };\n    EditorManager.prototype.updateOutline = function () {\n        var cNode = this.getCurrentNode();\n        var ds = new Date().getMilliseconds();\n        if (this._view) {\n            this.getOrCreateView().setUnit(manager.ast);\n            this.getOrCreateView().setSelection(cNode);\n        }\n        var d1 = new Date().getMilliseconds();\n        if (this.performanceDebug) {\n            console.log(\"Outline update:\" + (d1 - ds));\n        }\n    };\n    EditorManager.prototype.positionUpdated = function (newPosition) {\n        this.currentPosition = newPosition;\n        if (this.ast) {\n            this._currentNode = this.ast.findElementAtOffset(this.currentPosition);\n        }\n    };\n    return EditorManager;\n}());\nvar manager = null;\nfunction initEditorTools(display) {\n    if (display === void 0) { display = true; }\n    if (manager == null)\n        manager = new EditorManager(display);\n    else if (display)\n        manager.display();\n}\nexports.initEditorTools = initEditorTools;\nfunction editorToolsStatus() {\n    return manager != null && manager.opened;\n}\nexports.editorToolsStatus = editorToolsStatus;\nfunction aquireManager() {\n    if (!manager) {\n        manager = new EditorManager(true);\n    }\n    return manager;\n}\nexports.aquireManager = aquireManager;\nfunction updateAndSelect(node) {\n    if (aquireManager()._view) {\n        aquireManager()._view.refresh();\n    }\n    aquireManager().updateText();\n    aquireManager().selectNode(node);\n}\nexports.updateAndSelect = updateAndSelect;\n(function (SplitDirections) {\n    SplitDirections[SplitDirections[\"RIGHT\"] = 0] = \"RIGHT\";\n    SplitDirections[SplitDirections[\"LEFT\"] = 1] = \"LEFT\";\n    SplitDirections[SplitDirections[\"TOP\"] = 2] = \"TOP\";\n    SplitDirections[SplitDirections[\"BOTTOM\"] = 3] = \"BOTTOM\";\n})(exports.SplitDirections || (exports.SplitDirections = {}));\nvar SplitDirections = exports.SplitDirections;\nfunction doSplit(value, dir) {\n    if (dir === void 0) { dir = SplitDirections.RIGHT; }\n    var newPane = null;\n    switch (dir) {\n        case SplitDirections.BOTTOM:\n            newPane = atom.workspace.getActivePane().splitDown({});\n            break;\n        case SplitDirections.TOP:\n            newPane = atom.workspace.getActivePane().splitUp({});\n            break;\n        case SplitDirections.LEFT:\n            newPane = atom.workspace.getActivePane().splitLeft({});\n            break;\n        case SplitDirections.RIGHT:\n            newPane = atom.workspace.getActivePane().splitRight({});\n            break;\n    }\n    newPane.addItem(value);\n    return newPane;\n}\nexports.doSplit = doSplit;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/editor-tools.js\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\n/// <reference path=\"../../../typings/main.d.ts\" />\nvar qcui = require('./quick-commands-ui');\nvar atom = require('../core/atomWrapper');\nvar contextActions = require(\"raml-actions\");\nvar cc = require('./code-commands');\nvar et = require('../editor-tools/editor-tools');\n/*\n * Quick command is a command object that stores command info, body and filtering function\n */\nvar QuickCommand = (function () {\n    function QuickCommand(id, title, command, priority, when) {\n        this.id = id;\n        this.title = title;\n        this.command = command;\n        this.priority = priority;\n        this.when = when;\n    }\n    QuickCommand.prototype.registerAsAtomCommand = function (target) {\n        if (this.atomCommand && this.atomCommand.disposed == false)\n            this.atomCommand.dispose();\n        this.atomCommand = atom.commands.add(target, this.id, this.command);\n    };\n    QuickCommand.prototype.dispose = function () {\n        if (this.atomCommand && this.atomCommand.disposed == false)\n            this.atomCommand.dispose();\n        cm.unregister(this);\n    };\n    return QuickCommand;\n}());\nexports.QuickCommand = QuickCommand;\n/*\n * Command manager manages quick commands.\n * All quick commands should be registered here.\n * For usage example, see registerCommands\n */\nvar CommandManager = (function () {\n    function CommandManager() {\n        this.commands = {};\n        this.panel = new qcui.SelectListView(function (command) { return command.command(); }, function (command) { return command.title; }, 'title');\n    }\n    CommandManager.prototype.register = function (cmd) {\n        if (this.commands[cmd.id] != null)\n            this.unregister(cmd.id);\n        this.commands[cmd.id] = cmd;\n        return cmd;\n    };\n    CommandManager.prototype.unregister = function (cmd) {\n        if (typeof (cmd) == \"string\")\n            this.unregister(this.commands[cmd]);\n        var qcmd = cmd;\n        if (qcmd == null)\n            return null;\n        delete this.commands[qcmd.id];\n        return qcmd;\n    };\n    CommandManager.prototype.add = function (id, title, command, when, priority, atomTarget) {\n        var cmd = new QuickCommand(id, title, command, priority ? priority : 0, when ? when : function () { return true; });\n        if (atomTarget)\n            cmd.registerAsAtomCommand(atomTarget);\n        this.register(cmd);\n        return cmd;\n    };\n    CommandManager.prototype.show = function (predicate) {\n        var joinedCommands = {};\n        for (var commandId in this.commands) {\n            joinedCommands[commandId] = this.commands[commandId];\n        }\n        this.getDynamicCommands().forEach(function (currentCommand) {\n            joinedCommands[currentCommand.id] = currentCommand;\n        });\n        var list = Object.keys(joinedCommands)\n            .map(function (key) { return joinedCommands[key]; })\n            .sort(function (a, b) { return b.priority - a.priority; })\n            .filter(function (cmd) { return cmd.when(); });\n        if (predicate)\n            list = list.filter(predicate);\n        this.panel.show(list);\n    };\n    CommandManager.prototype.getDynamicCommands = function () {\n        var result = [];\n        var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n        currentActions.forEach(function (action) {\n            var convertedQuickCommand = new QuickCommand(action.name, action.label ? action.label : action.name, action.onClick, 1, function () { return true; });\n            var cmd = convertedQuickCommand;\n            cmd['__module__'] = 'editorTools';\n            result.push(convertedQuickCommand);\n        });\n        return result;\n    };\n    return CommandManager;\n}());\nexports.CommandManager = CommandManager;\nvar cm;\n/*\n * Always return working copy of manager.\n */\nfunction manager() {\n    if (!cm)\n        cm = new CommandManager();\n    return cm;\n}\nexports.manager = manager;\n/*\n * function for RAML -> Show Quick Commands (^Q)\n */\nfunction showCommands() {\n    manager().show();\n}\nexports.showCommands = showCommands;\n/*\n * registerCommands is called at the plugin initialization for registering global commands\n */\nfunction registerCommands() {\n    cc.registerQuickCommands(manager());\n    cm.add('api-workbench:editor-tools', 'Show Editor Tools', function () { return et.initEditorTools(); }, function () { return et.editorToolsStatus() == false; });\n}\nexports.registerCommands = registerCommands;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/quick-commands.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar search = rp.search;\nvar _ = require('underscore');\nvar suggestions = require('raml-suggestions');\nexports.selector = '.source.raml';\nexports.disableForSelector = '.text.html .comment';\nexports.filterSuggestions = true;\nexports.inclusionPriority = 1;\nexports.excludeLowerPriority = true;\nvar editorTools = require(\"../editor-tools/editor-tools\");\nfunction initialize(astProvider) {\n    suggestions.setDefaultASTProvider(astProvider);\n}\nexports.initialize = initialize;\nfunction onDidInsertSuggestion(event) {\n    var offset = event.editor.getBuffer().characterIndexForPosition(event.triggerPosition);\n    if (event.suggestion.annotation) {\n        var txt = event.editor.getBuffer().getText();\n        for (var i = offset; i < txt.length; i++) {\n            var c = txt.charAt(i);\n            if (c == ')') {\n                offset = i + 1;\n                break;\n            }\n            if (c == '\\r' || c == '\\n') {\n                return;\n            }\n        }\n        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n        event.editor.getBuffer().insert(newPos, ':');\n        return;\n    }\n    if ((event.suggestion.replacementPrefix && event.suggestion.extra) || event.suggestion.extra == \"%\") {\n        var newPos = event.editor.getBuffer().positionForCharacterIndex(offset - event.suggestion.replacementPrefix.length);\n        event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n    }\n    else {\n        //This actually looks exactly like a previous case but typing it as a separate case for now TODO\n        if (event.suggestion.extra == \" \") {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n        //FIXME\n        if (event.suggestion.extra == \" { \") {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n        if (event.suggestion.extra && event.suggestion.extra.indexOf(\"!include\") != -1) {\n            var newPos = event.editor.getBuffer().positionForCharacterIndex(offset);\n            event.editor.getBuffer().insert(newPos, event.suggestion.extra);\n        }\n    }\n}\nexports.onDidInsertSuggestion = onDidInsertSuggestion;\nvar FSProvider = (function () {\n    function FSProvider() {\n    }\n    FSProvider.prototype.contentDirName = function (content) {\n        var contentPath = content.getPath();\n        return path.dirname(contentPath);\n    };\n    FSProvider.prototype.dirName = function (childPath) {\n        return path.dirname(childPath);\n    };\n    FSProvider.prototype.exists = function (checkPath) {\n        return fs.existsSync(checkPath);\n    };\n    FSProvider.prototype.resolve = function (contextPath, relativePath) {\n        return path.resolve(contextPath, relativePath);\n    };\n    FSProvider.prototype.isDirectory = function (dirPath) {\n        var stat = fs.statSync(dirPath);\n        return stat && stat.isDirectory();\n    };\n    FSProvider.prototype.readDir = function (dirPath) {\n        return fs.readdirSync(dirPath);\n    };\n    FSProvider.prototype.existsAsync = function (path) {\n        return new Promise(function (resolve) {\n            fs.exists(path, function (result) { resolve(result); });\n        });\n    };\n    /**\n     * Returns directory content list.\n     * @param fullPath\n     */\n    FSProvider.prototype.readDirAsync = function (path) {\n        return new Promise(function (resolve) {\n            fs.readdir(path, function (err, result) { resolve(result); });\n        });\n    };\n    /**\n     * Check whether the path points to a directory.\n     * @param fullPath\n     */\n    FSProvider.prototype.isDirectoryAsync = function (path) {\n        return new Promise(function (resolve) {\n            fs.stat(path, function (err, stats) { resolve(stats.isDirectory()); });\n        });\n    };\n    return FSProvider;\n}());\nvar AtomEditorState = (function () {\n    function AtomEditorState(textEditor, request) {\n        this.request = request;\n        this.textEditor = textEditor;\n    }\n    AtomEditorState.prototype.getText = function () {\n        return this.textEditor.getBuffer().getText();\n    };\n    AtomEditorState.prototype.getPath = function () {\n        return this.textEditor.getPath();\n    };\n    AtomEditorState.prototype.getBaseName = function () {\n        return path.basename(this.getPath());\n    };\n    AtomEditorState.prototype.getOffset = function () {\n        return this.request.editor.getBuffer().characterIndexForPosition(this.request.bufferPosition);\n    };\n    return AtomEditorState;\n}());\nfunction getSuggestions(request) {\n    var t0 = new Date().getMilliseconds();\n    try {\n        var editorState = new AtomEditorState(request.editor, request);\n        var result = suggestions.suggest(editorState, new FSProvider());\n        result.forEach(function (suggestion) {\n            if (suggestion.prefix !== undefined) {\n                delete suggestion.prefix;\n                suggestion.replacementPrefix = suggestion.prefix;\n                delete suggestion.prefix;\n            }\n        });\n        return result;\n    }\n    finally {\n        if (editorTools.aquireManager()) {\n            var m = editorTools.aquireManager();\n            if (m.performanceDebug) {\n                var t1 = new Date().getMilliseconds();\n                console.log(\"Completion calc:\" + (t1 - t0));\n            }\n        }\n    }\n}\nexports.getSuggestions = getSuggestions;\nfunction getAstNode(request, clearLastChar, allowNull) {\n    if (clearLastChar === void 0) { clearLastChar = true; }\n    if (allowNull === void 0) { allowNull = true; }\n    var p = request.editor.getPath();\n    var prj = rp.project.createProject(path.dirname(p));\n    var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n    var text = request.editor.getBuffer().getText();\n    var kind = search.determineCompletionKind(text, offset);\n    if (kind == search.LocationKind.KEY_COMPLETION && clearLastChar) {\n        var pos = offset > 0 ? offset - 1 : offset;\n        for (var i = pos; i > 0; i--) {\n            var c = text[i];\n            if (c == '\\r' || c == '\\n') {\n                break;\n            }\n            else {\n                if (c == ' ' || c == '\\t') {\n                    ilevel++;\n                }\n            }\n        }\n        var oldOfffset = offset;\n        text = text.substring(0, oldOfffset) + \"k:\" + text.substring(oldOfffset);\n    }\n    var ilevel = 0;\n    var unit = prj.setCachedUnitContent(path.basename(p), text);\n    var ast = unit.highLevel();\n    var cm = offset;\n    for (var pm = offset - 1; pm >= 0; pm--) {\n        var c = text[pm];\n        //if (c==' '||c=='\\t'||c=='\\r'||c=='\\n'){\n        //    cm=pm-1;\n        //    continue;\n        //}\n        if (c == ' ' || c == '\\t') {\n            cm = pm - 1;\n            continue;\n        }\n        break;\n    }\n    var astNode = ast.findElementAtOffset(cm);\n    if (astNode && astNode.parent() == null) {\n        if (ilevel > 0 && kind == search.LocationKind.KEY_COMPLETION) {\n            var attr = _.find(astNode.attrs(), function (attr) {\n                var at = attr;\n                return at.lowLevel().start() < offset && at.lowLevel().end() >= offset && !at.property().isKey();\n            });\n            if (!attr) {\n                if (allowNull) {\n                    return null;\n                }\n            }\n        }\n    }\n    if (!allowNull && !astNode) {\n        return ast;\n    }\n    return astNode;\n}\nexports.getAstNode = getAstNode;\nfunction saveUnit(unit) {\n    var unitPath = unit.absolutePath();\n    var unitText = unit.contents();\n    //first trying to find an opened text editor\n    var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n        var editorPath = editor.getPath();\n        return editorPath == unitPath;\n    });\n    if (openedEditor) {\n        openedEditor.setText(unitText);\n    }\n    else {\n        fs.writeFileSync(unitPath, unitText);\n    }\n}\nexports.saveUnit = saveUnit;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/suggestion/provider.js\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar path = require('path');\nvar fs = require('fs');\nvar atom_space_pen_views_1 = require(\"atom-space-pen-views\");\nvar provider = require('../suggestion/provider');\nvar tooltipManager = require(\"../core/tooltip-manager\");\nvar UI = require(\"atom-ui-lib\");\nvar outline = require(\"../editor-tools/outline-view\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar QuickOutlineDialog = (function () {\n    function QuickOutlineDialog(_editor) {\n        this._editor = _editor;\n    }\n    QuickOutlineDialog.prototype.extraContent = function (s) {\n    };\n    QuickOutlineDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var nodeToSelect = null;\n        var node = provider.getAstNode({ bufferPosition: this._editor.getCursorBufferPosition(), editor: this._editor }, false, false);\n        var vc = UI.section(\"Quick outline:\");\n        var section = outline.createTree(node.root(), function (x) {\n            if (x.selection) {\n                if (x.selection.elements.length > 0) {\n                    nodeToSelect = x.selection.elements[0];\n                    ok.setDisabled(false);\n                    return;\n                }\n            }\n            ok.setDisabled(true);\n        }, function (model) {\n            var editor = _this._editor;\n            var buffer = editor.getBuffer();\n            var posStart = buffer.positionForCharacterIndex(model.getSource().lowLevel().start());\n            editor.setCursorScreenPosition(posStart);\n            zz.destroy();\n        });\n        section.setStyle(\"max-height\", \"800px\");\n        section.addClass(\"tree-view-scroller\");\n        vc.addChild(section);\n        var cancel = UI.buttonSimple(\"Cancel\", function (x) { zz.destroy(); }, UI.Icon.NONE);\n        cancel.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        var ok = UI.button(\"Ok\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) {\n            if (nodeToSelect) {\n                editorTools.aquireManager().setSelectedNode(nodeToSelect);\n            }\n            zz.destroy();\n        });\n        ok.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        ok.setDisabled(true);\n        vc.addChild(ok);\n        vc.addChild(cancel);\n        var html = vc.renderUI();\n        html.tabIndex = 0;\n        html.onkeypress = function (x) {\n            if (x.keyCode == 27) {\n                zz.destroy();\n            }\n        };\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return QuickOutlineDialog;\n}());\nfunction showQuickOutline(editor) {\n    new QuickOutlineDialog(editor).show();\n}\nfunction pixelPositionFromMouseEvent(editorView) {\n    var clientX = 0, clientY = 0;\n    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n    var top = clientY - linesClientRect.top;\n    var left = clientX - linesClientRect.left;\n    return { top: top, left: left };\n}\nfunction getFromShadowDom(element, selector) {\n    var el = element[0];\n    var found = el.rootElement.querySelectorAll(selector);\n    return atom_space_pen_views_1.$(found[0]);\n}\nfunction show() {\n    var ed = atom.workspace.getActiveTextEditor();\n    if (!ed) {\n        return;\n    }\n    var filePath = ed.getPath();\n    var filename = path.basename(filePath);\n    var ext = path.extname(filename);\n    if (!tooltipManager.isAllowedExtension(ext))\n        return;\n    if (!fs.existsSync(filePath)) {\n        return;\n    }\n    showQuickOutline(ed);\n}\nexports.show = show;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-outline/quick-outline.js\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar stubs = rp.stubs;\nvar universes = rp.universes;\nvar search = rp.search;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar SpacePenViews = require('atom-space-pen-views');\nvar def = rp.ds;\nvar services = def;\nvar linterUI = require(\"../core/linter-ui\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar index_1 = require(\"raml-1-parser/dist/index\");\nfunction createGlobalSchema(attr) {\n    var r = attr.parent().root();\n    var t = attr.property().range().universe().type(\"GlobalSchema\");\n    var sc = stubs.createStubNode(t, t.universe().type(\"Api\").property(\"schemas\"), \"\" + attr.value());\n    sc.attrOrCreate(\"value\").setValue(\"!include \" + \"schemas/\" + attr.value() + \".json\");\n    r.add(sc);\n    var ed = atom.workspace.getActiveTextEditor();\n    ed.getBuffer().setText(r.lowLevel().unit().contents());\n    var sdir = path.resolve(path.dirname(ed.getPath()), \"schemas\");\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = path.resolve(sdir, attr.value() + \".json\");\n    fs.writeFileSync(shFile, \"\\n{\\n  \\\"$schema\\\" : \\\"http://json-schema.org/draft-04/schema\\\" ,\\n  \\\"type\\\" : \\\"object\\\" ,\\n  \\\"properties\\\" : {\\n   }\\n}\\n\");\n    atom.workspace.open(shFile, {});\n}\nexports.createGlobalSchema = createGlobalSchema;\nfunction createGlobalSchemaFromNameAndContent(root, name, schp, content, absolutePath) {\n    if (index_1.universeHelpers.isRAML10Node(root)) {\n        createGlobalSchemaFromNameAndContent10(root, name, schp, content, absolutePath);\n    }\n    else if (index_1.universeHelpers.isRAML08Node(root)) {\n        createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath);\n    }\n}\nexports.createGlobalSchemaFromNameAndContent = createGlobalSchemaFromNameAndContent;\nfunction createSchemaFile(content, schemaPath, absolutePath) {\n    var ed = getActiveEditor();\n    var sdir = absolutePath ? path.dirname(absolutePath) : path.resolve(path.dirname(ed.getPath()), path.dirname(schemaPath));\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = absolutePath ? absolutePath : path.resolve(path.dirname(ed.getPath()), schemaPath);\n    fs.writeFileSync(shFile, content);\n}\nfunction createGlobalSchemaFromNameAndContent10(root, name, schemaPath, content, absolutePath) {\n    var t = root.definition().universe().type(universes.Universe10.TypeDeclaration.name);\n    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe10.Api.name).property(universes.Universe10.Api.properties.types.name), \"\" + name);\n    sc.attrOrCreate(universes.Universe10.TypeDeclaration.properties.type.name).setValue(\"!include \" + schemaPath);\n    root.add(sc);\n    createSchemaFile(content, schemaPath, absolutePath);\n}\nexports.createGlobalSchemaFromNameAndContent10 = createGlobalSchemaFromNameAndContent10;\nfunction createGlobalSchemaFromNameAndContent08(root, name, schp, content, absolutePath) {\n    var t = root.definition().universe().type(universes.Universe08.GlobalSchema.name);\n    var sc = stubs.createStubNode(t, t.universe().type(universes.Universe08.Api.name).property(universes.Universe08.Api.properties.schemas.name), \"\" + name);\n    sc.attrOrCreate(universes.Universe08.GlobalSchema.properties.value.name).setValue(\"!include \" + schp);\n    root.add(sc);\n    createSchemaFile(content, schp, absolutePath);\n}\nexports.createGlobalSchemaFromNameAndContent08 = createGlobalSchemaFromNameAndContent08;\nfunction saveExample(r, schp, content) {\n    var ed = getActiveEditor();\n    var sdir = path.resolve(path.dirname(ed.getPath()), path.dirname(schp));\n    if (!fs.existsSync(sdir)) {\n        fs.mkdirSync(sdir);\n    }\n    var shFile = path.resolve(path.dirname(ed.getPath()), schp);\n    fs.writeFileSync(shFile, content);\n}\nexports.saveExample = saveExample;\nvar NewProjectDialog = (function () {\n    function NewProjectDialog(title) {\n        if (title === void 0) { title = \"Create RAML Project\"; }\n        this.title = title;\n        this.apititle = \"New API\";\n        this.version = \"v1\";\n        this.baseUri = \"http://api.samplehost.com\";\n        this._raml1 = true;\n        this._defStructure = true;\n        this._createSampleResource = true;\n        this.sourceValue = path.resolve(this.generateDefaultProjectParentFolder(), \"newRamlProject\");\n    }\n    NewProjectDialog.prototype.generateDefaultProjectParentFolder = function () {\n        return UI.fdUtils.getHome();\n    };\n    NewProjectDialog.prototype.extraContent = function (s) {\n    };\n    NewProjectDialog.prototype.validateProjectLocation = function (value) {\n        var toValidate = value ? value.trim() : \"\";\n        if (!toValidate) {\n            return UI.errorStatus(\"Path should't be empty\");\n        }\n        var parentDirectory = path.dirname(toValidate);\n        if (!parentDirectory || parentDirectory == \".\")\n            return UI.errorStatus(\"Can not find path parent\");\n        if (!fs.existsSync(parentDirectory))\n            return UI.errorStatus(\"Parent directory does not exist\");\n        return UI.okStatus();\n    };\n    NewProjectDialog.prototype.validateTitle = function (value) {\n        var toValidate = value ? value.trim() : \"\";\n        if (!toValidate || toValidate.length < 1) {\n            return UI.errorStatus(\"Title field is required\");\n        }\n        return UI.okStatus();\n    };\n    NewProjectDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var section = UI.section(this.title, UI.Icon.BOOK, false, false, UI.h3(\"Please select location to place your project:\")).pad(10, 10);\n        var panel = new UI.Panel(UI.LayoutType.BLOCK);\n        var statusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n        var slf = new UI.CustomField(\"\", statusLabel, function (x) { return x; });\n        slf.setDisplay(this.validateProjectLocation(this.sourceValue).code == UI.StatusCode.ERROR);\n        panel.addChild(slf);\n        var projectLocationInput = UI.texfField(\"\", this.sourceValue, function (x) { return _this.sourceValue = x.getBinding().get(); });\n        projectLocationInput.getBinding().addValidator(function () { return _this.validateProjectLocation(_this.sourceValue); });\n        projectLocationInput.setStyle(\"width\", \"400px\");\n        projectLocationInput.getBinding().addListener(function (value) {\n            //var st = projectLocationInput.getBinding().status()\n            var st = _this.validateProjectLocation(value);\n            if (st.code != UI.StatusCode.ERROR) {\n                //this.updateUI(q, x)\n                statusLabel.setText(\"\");\n                statusLabel.setIcon(UI.Icon.NONE);\n                slf.setDisplay(false);\n            }\n            else {\n                statusLabel.setText(st.message);\n                statusLabel.setIcon(UI.Icon.BUG);\n                slf.setDisplay(true);\n            }\n        });\n        panel.addChild(\n        //UI.hc(\n        projectLocationInput);\n        panel.addChild(UI.h3(\"Title of your API:\"));\n        var titleStatusLabel = UI.label(\"\", null, UI.TextClasses.ERROR);\n        var titleStatusMessage = new UI.CustomField(\"\", titleStatusLabel, function (x) { return x; });\n        titleStatusMessage.setDisplay(false);\n        panel.addChild(titleStatusMessage);\n        var titleTextField = UI.texfField(\"\", this.apititle, function (x) { return _this.apititle = x.getBinding().get(); });\n        titleTextField.getBinding().addValidator(function () { return _this.validateTitle(_this.apititle); });\n        titleTextField.getBinding().addListener(function (value) {\n            var status = _this.validateTitle(value);\n            if (status.code !== UI.StatusCode.ERROR) {\n                titleStatusLabel.setText(\"\");\n                titleStatusLabel.setIcon(UI.Icon.NONE);\n                titleStatusMessage.setDisplay(false);\n            }\n            else {\n                titleStatusLabel.setText(status.message);\n                titleStatusLabel.setIcon(UI.Icon.BUG);\n                titleStatusMessage.setDisplay(true);\n            }\n        });\n        panel.addChild(titleTextField);\n        panel.addChild(UI.h3(\"Version of your API\"));\n        panel.addChild(UI.texfField(\"\", this.version, function (x) { return _this.version = x.getBinding().get(); }));\n        panel.addChild(UI.h3(\"Base URI of your API\"));\n        panel.addChild(UI.texfField(\"\", this.baseUri, function (x) { return _this.baseUri = x.getBinding().get(); }));\n        section.addChild(panel);\n        var r1 = UI.checkBox(\"Use RAML 1.0\");\n        r1.setValue(this._raml1);\n        r1.getBinding().addListener(function (x) { return _this._raml1 = r1.getValue(); });\n        section.addChild(r1);\n        var r2 = UI.checkBox(\"Create default directory structure\");\n        r2.setValue(this._defStructure);\n        r2.getBinding().addListener(function (x) { return _this._defStructure = r2.getValue(); });\n        section.addChild(r2);\n        var r3 = UI.checkBox(\"Create sample resource and method\");\n        r3.setValue(this._createSampleResource);\n        r3.getBinding().addListener(function (x) { return _this._createSampleResource = r3.getValue(); });\n        section.addChild(r3);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        buttonBar.addChild(UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            if (_this.validateTitle(_this.apititle).code === UI.StatusCode.ERROR) {\n                return;\n            }\n            if (_this.validateProjectLocation(_this.sourceValue).code === UI.StatusCode.ERROR) {\n                return;\n            }\n            _this.onOk(zz);\n            zz.destroy();\n        }));\n        section.addChild(buttonBar);\n        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n    };\n    NewProjectDialog.prototype.createIfNotExist = function (p) {\n        var ps = path.resolve(this.sourceValue, p);\n        if (!fs.existsSync(ps)) {\n            fs.mkdirSync(ps);\n        }\n    };\n    NewProjectDialog.prototype.onOk = function (zz) {\n        if (!fs.existsSync(this.sourceValue)) {\n            fs.mkdirSync(this.sourceValue);\n        }\n        if (this._defStructure) {\n            this.createIfNotExist(\"schemas\");\n            this.createIfNotExist(\"examples\");\n            this.createIfNotExist(\"traits\");\n            this.createIfNotExist(\"resourceTypes\");\n            this.createIfNotExist(\"securitySchemes\");\n            this.createIfNotExist(\"documentation\");\n            if (this._raml1) {\n                this.createIfNotExist(\"notebooks\");\n                this.createIfNotExist(\"scripts\");\n            }\n        }\n        var content = createRAMLFile(this.apititle, this.version, this.baseUri, this._createSampleResource, this._raml1);\n        var ps = path.resolve(this.sourceValue, \"api.raml\");\n        fs.writeFileSync(ps, content);\n        atom.open({ pathsToOpen: [this.sourceValue, ps] });\n    };\n    return NewProjectDialog;\n}());\nfunction createRAMLFile(title, version, baseUri, sample, raml1) {\n    if (sample === void 0) { sample = true; }\n    if (raml1 === void 0) { raml1 = true; }\n    var apiLines = [(raml1 ? \"#%RAML 1.0\" : \"#%RAML 0.8\"), (\"title: \" + title)];\n    if (version)\n        apiLines.push(\"version: \" + version);\n    if (baseUri)\n        apiLines.push(\"baseUri: \" + baseUri);\n    var typesLines = [\n        'types:',\n        '  TestType:',\n        '    type: object',\n        '    properties:',\n        '      id: number',\n        '      optional?: string',\n        '      expanded:',\n        '        type: object',\n        '        properties:',\n        '          count: number'\n    ], resourceLines = [\n        '/helloWorld:',\n        '  get:',\n        '    responses:',\n        '      200:',\n        '        body:',\n        '          application/json:',\n        '            example: |',\n        '              {',\n        '                \"message\" : \"Hello World\"',\n        '              }'\n    ];\n    var result = apiLines;\n    if (sample) {\n        if (raml1)\n            result = result.concat(typesLines);\n        result = result.concat(resourceLines);\n    }\n    return result.join('\\n') + '\\n';\n}\nexports.createRAMLFile = createRAMLFile;\nfunction newProject() {\n    new NewProjectDialog().show();\n}\nexports.newProject = newProject;\n// export function moveResource(h:hl.IHighLevelNode){\n//     new move.MoveElementsDialog(h, \"Resource Type\",true).show()\n// }\nfunction splitOnLines(text) {\n    var lines = text.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n    return lines;\n}\nexports.splitOnLines = splitOnLines;\nfunction cleanEmptyLines(text) {\n    var lines = splitOnLines(text);\n    var rs = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (lines[i].trim().length > 0) {\n            rs.push(lines[i]);\n        }\n    }\n    return rs.join(\"\");\n}\nexports.cleanEmptyLines = cleanEmptyLines;\n//FIXME remove it from here duplication with jsyaml2lowLevel.ts\nfunction stripIndent(text, indent) {\n    var lines = splitOnLines(text);\n    var rs = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (i == 0) {\n            rs.push(lines[0]);\n        }\n        else {\n            rs.push(lines[i].substring(indent.length));\n        }\n    }\n    return rs.join(\"\");\n}\nvar leadingIndent = function (node, text) {\n    var leading = \"\";\n    var pos = node.start() - 1;\n    while (pos > 0) {\n        var ch = text[pos];\n        if (ch == '\\r' || ch == '\\n')\n            break;\n        leading = ch + leading;\n        pos--;\n    }\n    return leading;\n};\nfunction indent(line) {\n    var rs = \"\";\n    for (var i = 0; i < line.length; i++) {\n        var c = line[i];\n        if (c == '\\r' || c == '\\n') {\n            continue;\n        }\n        if (c == ' ' || c == '\\t') {\n            rs += c;\n            continue;\n        }\n        break;\n    }\n    return rs;\n}\nfunction getActiveEditor() {\n    var activeEditor = atom.workspace.getActiveTextEditor();\n    if (activeEditor) {\n        return activeEditor;\n    }\n    if (editorTools.aquireManager())\n        return editorTools.aquireManager().getCurrentEditor();\n    return null;\n}\nexports.getActiveEditor = getActiveEditor;\nvar MoveToNewFileDialog = (function () {\n    function MoveToNewFileDialog(node) {\n        this.node = node;\n    }\n    MoveToNewFileDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"please enter correct destination path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please enter destination path\"));\n        var txt = UI.texfField(\"\", \"\", function (x) {\n            if (!txt) {\n                return;\n            }\n            _this.destination = txt.getBinding().get();\n            var isError = _this.destination.trim().length == 0;\n            if (!isError) {\n                if (path.extname(_this.destination) != '.raml') {\n                    isError = true;\n                }\n            }\n            if (!isError) {\n                var dir = path.resolve(path.dirname(getActiveEditor().getPath()), path.dirname(_this.destination));\n                if (!fs.existsSync(dir)) {\n                    isError = true;\n                }\n                else {\n                    var st = fs.statSync(dir);\n                    if (!st.isDirectory()) {\n                        isError = true;\n                    }\n                }\n            }\n            errorLabel.setDisplay(isError);\n            okButton.setDisabled(isError);\n        });\n        vc.addChild(UI.vc(txt));\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            var d = path.resolve(path.dirname(getActiveEditor().getPath()), _this.destination);\n            var dump = _this.node.lowLevel().dump();\n            var ci = splitOnLines(dump);\n            var li = ci.length > 1 ? indent(ci[1]) : indent(ci[0]);\n            dump = dump.substring(_this.node.lowLevel().keyEnd() - _this.node.lowLevel().start() + 1).trim();\n            dump = stripIndent(dump, li);\n            dump = \"#%RAML 0.8 \" + _this.node.definition().nameId() + \"\\n\" + dump;\n            fs.writeFileSync(d, dump);\n            //no we need to replace content of the node with text;\n            var txt = node.lowLevel().unit().contents();\n            var endPart = txt.substring(node.lowLevel().end());\n            var startPart = txt.substring(0, node.lowLevel().keyEnd() + 1);\n            var vl = startPart + \" !include \" + _this.destination + endPart;\n            getActiveEditor().setText(vl);\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveToNewFileDialog;\n}());\nexports.MoveToNewFileDialog = MoveToNewFileDialog;\nfunction moveOut(h) {\n    new MoveToNewFileDialog(h).show();\n}\nexports.moveOut = moveOut;\nfunction revalidate() {\n    var currentEditor = getActiveEditor();\n    if (!currentEditor)\n        return;\n    linterUI.relint(currentEditor);\n}\nexports.revalidate = revalidate;\nfunction renameRAMLElement() {\n    var ed = getActiveEditor();\n    var quickFixes = [];\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var node = provider.getAstNode(request, false);\n            if (!node) {\n                return;\n            }\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var kind = search.determineCompletionKind(ed.getBuffer().getText(), offset);\n            if (kind == search.LocationKind.VALUE_COMPLETION) {\n                var hlnode = node;\n                var attr = _.find(hlnode.attrs(), function (x) { return x.lowLevel().start() < offset && x.lowLevel().end() >= offset && !x.property().getAdapter(services.RAMLPropertyService).isKey(); });\n                if (attr) {\n                    if (attr.value()) {\n                        var p = attr.property();\n                        //FIXME INFRASTRUCTURE NEEDED\n                        var v = attr.value();\n                        var targets = search.referenceTargets(p, hlnode);\n                        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n                        if (t) {\n                            UI.prompt(\"New name for \" + attr.value(), function (newVal) {\n                                findUsagesImpl(function (n, r) {\n                                    //todo update nodes\n                                    r.reverse().forEach(function (x) {\n                                        var ua = x;\n                                        ua.asAttr().setValue(newVal);\n                                    });\n                                    n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n                                    var ed = getActiveEditor();\n                                    ed.getBuffer().setText(n.lowLevel().unit().contents());\n                                });\n                            }, attr.value());\n                        }\n                    }\n                }\n            }\n            if (kind == search.LocationKind.KEY_COMPLETION || kind == search.LocationKind.SEQUENCE_KEY_COPLETION) {\n                var hlnode = node;\n                UI.prompt(\"New name for \" + hlnode.name(), function (newVal) {\n                    findUsagesImpl(function (n, r) {\n                        var oldValue = n.attrValue(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId());\n                        //todo update nodes\n                        r.reverse().forEach(function (x) {\n                            var ua = x;\n                            renameInProperty(ua.asAttr(), oldValue, newVal);\n                        });\n                        n.attr(n.definition().getAdapter(services.RAMLService).getKeyProp().nameId()).setValue(newVal);\n                        var ed = getActiveEditor();\n                        ed.getBuffer().setText(n.lowLevel().unit().contents());\n                    });\n                }, hlnode.name());\n            }\n        }\n    }\n}\nexports.renameRAMLElement = renameRAMLElement;\nfunction renameInProperty(property, contentToReplace, replaceWith) {\n    var oldPropertyValue = property.value();\n    if (typeof oldPropertyValue == 'string') {\n        var oldPropertyStringValue = oldPropertyValue;\n        var newPropertyStringValue = oldPropertyStringValue.replace(contentToReplace, replaceWith);\n        property.setValue(newPropertyStringValue);\n        if (oldPropertyStringValue.indexOf(contentToReplace) == -1) {\n            if (property.name().indexOf(contentToReplace) != -1) {\n                var newValue = property.name().replace(contentToReplace, replaceWith);\n                property.setKey(newValue);\n            }\n        }\n        return;\n    }\n    else if (oldPropertyValue && (typeof oldPropertyValue === \"object\")) {\n        var structuredValue = oldPropertyValue;\n        var oldPropertyStringValue = structuredValue.valueName();\n        if (oldPropertyStringValue.indexOf(contentToReplace) != -1) {\n            var convertedHighLevel = structuredValue.toHighLevel();\n            if (convertedHighLevel) {\n                var found = false;\n                if (convertedHighLevel.definition().isAnnotationType()) {\n                    var prop = getKey(convertedHighLevel.definition(), structuredValue.lowLevel());\n                    prop.setValue(\"(\" + replaceWith + \")\");\n                    return;\n                }\n                convertedHighLevel.attrs().forEach(function (attribute) {\n                    if (attribute.property().getAdapter(services.RAMLPropertyService).isKey()) {\n                        var oldValue = attribute.value();\n                        if (typeof oldValue == 'string') {\n                            found = true;\n                            var newValue = oldValue.replace(contentToReplace, replaceWith);\n                            attribute.setValue(newValue);\n                        }\n                    }\n                });\n                return;\n            }\n        }\n    }\n    //default case\n    property.setValue(replaceWith);\n}\nfunction getKey(t, n) {\n    var up = new def.UserDefinedProp(\"name\", null);\n    //up.withDomain(this);\n    up.withRange(this.universe().type(universes.Universe10.StringType.name));\n    up.withFromParentKey(true);\n    var node = t.getAdapter(services.RAMLService).getDeclaringNode();\n    //node:ll.ILowLevelASTNode, parent:hl.IHighLevelNode, private _def:hl.IValueTypeDefinition, private _prop:hl.IProperty, private fromKey:boolean = false\n    return stubs.createASTPropImpl(n, node, up.range(), up, true);\n    //rs.push(up);\n}\nvar getKeyValue = function (offset, txt) {\n    var m = offset;\n    for (var i = offset; i >= 0; i--) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t') {\n            m = i + 1;\n            break;\n        }\n    }\n    var res = \"\";\n    for (var i = m; m < txt.length; i++) {\n        var c = txt.charAt(i);\n        if (c == ' ' || c == '\\r' || c == '\\n' || c == '\\t' || c == ':') {\n            break;\n        }\n        res += c;\n    }\n    return res;\n};\nfunction select() {\n    var ed = getActiveEditor();\n    var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n    var node = provider.getAstNode(request, false);\n    if (!node) {\n        return;\n    }\n    var start = ed.getBuffer().positionForCharacterIndex(node.lowLevel().start());\n    var end = ed.getBuffer().positionForCharacterIndex(node.lowLevel().end());\n    ed.setSelectedBufferRange({ start: start, end: end }, {});\n}\nexports.select = select;\n//export function expandSignature(attr:hl.IAttribute){\n//    var tr=signature.convertToTrait(signature.parse(attr));\n//    //console.log('trait:\\n' + tr.highLevel().lowLevel().dump());\n//    var res = attr.parent();\n//    //pr.remove(attr); // incorrect usage!!! remove attributes as below\n//    attr.remove();\n//    tr.highLevel().elements().forEach(x=>{\n//        res.add(<any>x)\n//    });\n//    var ed=getActiveEditor();\n//    ed.setText(attr.root().lowLevel().unit().contents());\n//}\nfunction findUsagesImpl(f) {\n    if (f === void 0) { f = display; }\n    var ed = getActiveEditor();\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var p = request.editor.getPath();\n            var prj = rp.project.createProject(path.dirname(p));\n            var unit = prj.unit(path.basename(p));\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var text = request.editor.getBuffer().getText();\n            unit.updateContent(text);\n            var decl = search.findUsages(unit, offset);\n            if (decl.node) {\n                f(decl.node, _.filter(decl.results, function (result) { return (result && result.parent && result.parent() !== decl.node); }));\n            }\n        }\n    }\n}\nexports.findUsagesImpl = findUsagesImpl;\nfunction findUsages() {\n    findUsagesImpl(display);\n}\nexports.findUsages = findUsages;\nvar SearchResultView = (function (_super) {\n    __extends(SearchResultView, _super);\n    function SearchResultView(query, _result) {\n        _super.call(this);\n        this.query = query;\n        this._result = _result;\n        this.isAttached = false;\n    }\n    SearchResultView.prototype.initialize = function () {\n        _super.prototype.initialize.apply(this, arguments);\n        return true;\n    };\n    SearchResultView.content = function () {\n        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n    };\n    SearchResultView.prototype.attached = function () {\n        if (this.isAttached) {\n            return;\n        }\n        this.load();\n        this.isAttached = true;\n    };\n    SearchResultView.prototype.setInput = function (query, _result) {\n        this.query = query;\n        this._result = _result;\n        this.load();\n    };\n    SearchResultView.prototype.load = function () {\n        var _this = this;\n        var section = UI.section(\"Find usages for \" + this.query, UI.Icon.SEARCH);\n        var view = UI.list(this._result, function (x) {\n            var p1 = getActiveEditor().getBuffer().positionForCharacterIndex(x.getLowLevelStart());\n            var res = UI.hc(UI.a(x.id(), function (y) {\n                openPropertyNode(getActiveEditor(), x);\n            }), UI.label(x.lowLevel().unit().path() + \" line:\", UI.Icon.NONE, UI.TextClasses.SUBTLE).pad(5, 5), UI.label(\"\" + p1.row, UI.Icon.NONE, UI.TextClasses.SUCCESS));\n            return res;\n        });\n        view.setStyle(\"max-height\", \"400px\");\n        section.addChild(view);\n        section.addChild(UI.button(\"Close\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.PRIMARY, UI.Icon.NONE, function (x) { _this.panel.destroy(); sv = null; }));\n        this.html(section.renderUI());\n    };\n    return SearchResultView;\n}(SpacePenViews.ScrollView));\nvar sv;\nfunction display(query, n) {\n    if (sv) {\n        sv.setInput(query.name(), n);\n    }\n    else {\n        sv = new SearchResultView(query.name() + \":\" + query.definition().nameId(), n);\n        sv.panel = atom.workspace.addBottomPanel({ item: sv });\n    }\n}\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openPropertyNode = function (ed, t) {\n    var p1 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelStart());\n    var p2 = ed.getBuffer().positionForCharacterIndex(t.getLowLevelEnd());\n    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n};\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openNode = function (ed, t) {\n    openLowLevelNode(ed, t.lowLevel());\n};\n//TODO REFACTOR COMMON LOGIC TO COFE\nvar openLowLevelNode = function (ed, t) {\n    if (t.unit().absolutePath() != ed.getPath()) {\n        atom.workspace.open(t.unit().absolutePath(), {}).then(function (x) {\n            ed = getActiveEditor();\n            openLowLevelNode(ed, t);\n        });\n        return;\n    }\n    var p1 = ed.getBuffer().positionForCharacterIndex(t.start());\n    var p2 = ed.getBuffer().positionForCharacterIndex(t.end());\n    p2.column = p1.column + t.key() ? t.key().length : 0;\n    p2.row = p1.row;\n    ed.setSelectedBufferRange({ start: p1, end: p2 }, {});\n};\nfunction gotoDeclaration() {\n    var ed = getActiveEditor();\n    if (ed) {\n        if (path.extname(ed.getPath()) == '.raml') {\n            var request = { editor: ed, bufferPosition: ed.getCursorBufferPosition() };\n            var p = request.editor.getPath();\n            var prj = rp.project.createProject(path.dirname(p));\n            var unit = prj.unit(path.basename(p));\n            var offset = request.editor.getBuffer().characterIndexForPosition(request.bufferPosition);\n            var text = request.editor.getBuffer().getText();\n            unit.updateContent(text);\n            var decl = search.findDeclaration(unit, offset);\n            if (!decl) {\n                var canBeReference = search.deepFindNode(unit.highLevel(), offset, offset, false);\n                var parentProperty = canBeReference && canBeReference.parent() && canBeReference.parent().property();\n                decl = index_1.universeHelpers.isUsesProperty(parentProperty) && search.findDeclaration(unit, offset, search.LocationKind.PATH_COMPLETION);\n            }\n            if (decl) {\n                if (!decl.absolutePath) {\n                    openLowLevelNode(ed, decl.lowLevel());\n                }\n                else {\n                    var absolutePath = decl.absolutePath();\n                    if (absolutePath && absolutePath.toLowerCase().indexOf('http') === 0) {\n                        return;\n                    }\n                    atom.workspace.open(absolutePath, {});\n                }\n            }\n        }\n    }\n}\nexports.gotoDeclaration = gotoDeclaration;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/assist-utils.js\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar utils = rp.utils;\nvar rr = rp.utils;\nvar unitUtils = require(\"../util/unit\");\nvar TextBuffer = require(\"basarat-text-buffer\");\nvar editorManager = require(\"./editorManager\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nexports.grammarScopes = ['source.raml'];\nexports.scope = 'file';\nexports.lintOnFly = true;\nvar lintersToDestroy = [];\nvar linterApiProxy = {};\nexports.relint = function (editor) {\n    var editorPath = editor.getPath && editor.getPath();\n    var extName = editorPath && path.extname(editorPath);\n    var lowerCase = extName && extName.toLowerCase();\n    var linter = linterApiProxy.getEditorLinter(editor);\n    lintersToDestroy.push(linter);\n    if (lowerCase === '.raml' || lowerCase === '.yaml') {\n        var res = lint(editor);\n        if (!rr.hasAsyncRequests()) {\n            linterApiProxy.setMessages(linter, res);\n        }\n        setupLinterCallback(editor, function () { return linterApiProxy.deleteMessages(linter); });\n        linter.onDidDestroy(function () {\n            removeLinterCallback(editor);\n        });\n        editor.onDidDestroy(function () {\n            destroyLinter(linterApiProxy, linter);\n        });\n    }\n};\nfunction relintLater(editor) {\n    Promise.resolve(editor).then(function (editor) {\n        exports.relint(editor);\n    });\n}\nfunction initEditorObservers(linterApi) {\n    linterApiProxy = linterApi;\n    rr.addLoadCallback(function (x) {\n        atom.workspace.getTextEditors().forEach(function (x) { return relintLater(x); });\n        var manager = editorTools.aquireManager();\n        if (manager) {\n            manager.updateDetails();\n        }\n    });\n    atom.workspace.observeTextEditors(relintLater);\n    return {\n        dispose: function () {\n            lintersToDestroy.forEach(function (linter) {\n                destroyLinter(linterApi, linter);\n            });\n        }\n    };\n}\nexports.initEditorObservers = initEditorObservers;\nfunction destroyLinter(linterApi, linter) {\n    linterApi.deleteMessages(linter);\n    linterApi.deleteLinter(linter);\n}\n;\nfunction setupLinterCallback(editor, callback) {\n    editor.linterCallback = callback;\n}\nfunction removeLinterCallback(editor) {\n    editor.linterCallback = null;\n}\nfunction execLinterCallback(editor) {\n    if (editor.linterCallback) {\n        editor.linterCallback();\n        removeLinterCallback(editor);\n    }\n}\nfunction lint(textEditor) {\n    var result = actualLint(textEditor);\n    if (rr.hasAsyncRequests()) {\n        return [];\n    }\n    return result;\n}\nexports.lint = lint;\nfunction isRAMLUnit(editor) {\n    var contents = editor.getBuffer().getText();\n    return unitUtils.isRAMLUnit(contents);\n}\nvar combErrors = function (result) {\n    var map = {};\n    result.forEach(function (x) {\n        var original = JSON.parse(JSON.stringify(x));\n        original.trace = null;\n        var newKey = JSON.stringify(original);\n        var tr = map[newKey];\n        if (tr) {\n            tr.push(x);\n        }\n        else {\n            map[newKey] = [x];\n        }\n    });\n    var rs = [];\n    for (var i in map) {\n        var mes = JSON.parse(i);\n        mes.trace = [];\n        var ms = map[i];\n        ms.forEach(function (x) {\n            if (x.trace) {\n                mes.trace = mes.trace.concat(x.trace);\n            }\n        });\n        mes.trace = combErrors(mes.trace);\n        rs.push(mes);\n    }\n    return rs;\n};\nfunction actualLint(textEditor) {\n    execLinterCallback(textEditor);\n    if (rr.hasAsyncRequests()) {\n        return [];\n    }\n    if (!isRAMLUnit(textEditor))\n        return [];\n    var l = new Date().getTime();\n    var astNode = editorManager.ast(textEditor);\n    if (astNode == null) {\n        return [];\n    }\n    var result = [];\n    var acceptor = new Acceptor(textEditor, result, astNode.root());\n    var c = astNode.lowLevel() ? astNode.lowLevel().unit().contents() : \"\";\n    var tab = 0;\n    while (true) {\n        var tab = c.indexOf('\\t', tab);\n        if (tab != -1) {\n            var p1 = textEditor.getBuffer().positionForCharacterIndex(tab);\n            var p2 = textEditor.getBuffer().positionForCharacterIndex(tab + 1);\n            var t = \"Using tabs  can lead to unpredictable results\";\n            var message = {\n                type: (\"Warning\"),\n                filePath: textEditor.getPath(),\n                text: t,\n                trace: [],\n                range: [[p1.row, p1.column], [p2.row, p2.column]]\n            };\n            result.push(message);\n            tab++;\n        }\n        else {\n            break;\n        }\n    }\n    if (!astNode.lowLevel()) {\n        return [];\n    }\n    gatherValidationErrors(astNode, result, textEditor);\n    var l1 = new Date().getTime();\n    var rs = combErrors(result);\n    if (editorTools.aquireManager()) {\n        if (editorTools.aquireManager().performanceDebug) {\n            console.log(\"Linting took:\" + (l1 - l));\n        }\n    }\n    var warnings = 0;\n    return rs.filter(function (x) {\n        return x;\n    })\n        .filter(function (x) {\n        if (x.type === \"Warning\") {\n            if (warnings >= 20) {\n                return false;\n            }\n            warnings++;\n        }\n        return x;\n    });\n}\nvar Acceptor = (function (_super) {\n    __extends(Acceptor, _super);\n    function Acceptor(editor, errors, primaryUnit) {\n        _super.call(this, errors, primaryUnit);\n        this.editor = editor;\n        this.buffers = {};\n    }\n    Acceptor.prototype.accept = function (issue) {\n        var _this = this;\n        if (!issue) {\n            return;\n        }\n        this.transformIssue(issue);\n        var issueType = issue.isWarning ? \"Warning\" : 'Error';\n        var issuesArray = [];\n        while (issue) {\n            issuesArray.push(issue);\n            if (issue.extras && issue.extras.length > 0) {\n                issue = issue.extras[0];\n            }\n            else {\n                issue = null;\n            }\n        }\n        var issues = issuesArray.reverse().map(function (x) {\n            var result = _this.convertParserIssue(x, issueType);\n            issueType = \"Trace\";\n            return result;\n        });\n        for (var i = 0; i < issues.length - 1; i++) {\n            issues[0].trace.push(issues[i + 1]);\n        }\n        var message = issues[0];\n        this.errors.push(message);\n    };\n    Acceptor.prototype.convertParserIssue = function (x, iType) {\n        var t = x.message;\n        var buf = this.editor.getBuffer();\n        var ps = x.path;\n        if (x.unit) {\n            ps = x.unit.absolutePath();\n        }\n        if (ps) {\n            if (this.buffers[ps]) {\n                buf = this.buffers[ps];\n            }\n            else {\n                buf = new TextBuffer(x.unit.contents());\n                this.buffers[ps] = buf;\n            }\n        }\n        var p1 = buf.positionForCharacterIndex(x.start);\n        var p2 = buf.positionForCharacterIndex(x.end);\n        var trace = {\n            type: iType,\n            filePath: x.path ? ps : this.editor.getPath(),\n            text: t,\n            range: [[p1.row, p1.column], [p2.row, p2.column]],\n            trace: [],\n        };\n        return trace;\n    };\n    Acceptor.prototype.acceptUnique = function (issue) {\n        this.accept(issue);\n    };\n    Acceptor.prototype.end = function () {\n    };\n    return Acceptor;\n}(utils.PointOfViewValidationAcceptorImpl));\nfunction gatherValidationErrors(astNode, errors, editor) {\n    if (astNode) {\n        astNode.validate(new Acceptor(editor, errors, astNode.root()));\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/linter-ui.js\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\n\"use strict\";\nvar editorTools = require(\"./editor-tools/editor-tools\");\nvar commonContextActions = require(\"./context-menu/commonContextActions\");\nvar provider = require(\"./suggestion/provider\");\nvar outlineInitializer = require(\"./editor-tools/outline-initializer\");\nvar path = require('path');\nvar unitUtils = require(\"./util/unit\");\nvar parser = require(\"raml-1-parser\");\nfunction initialize() {\n    var editorProvider = {\n        getCurrentEditor: function () {\n            var gotEditorFromOutline = false;\n            var editor = null;\n            if (atom.workspace.getActiveTextEditor()) {\n                editor = atom.workspace.getActiveTextEditor();\n            }\n            else if (editorTools.aquireManager()) {\n                editor = editorTools.aquireManager().getCurrentEditor();\n                gotEditorFromOutline = true;\n            }\n            return editor;\n        }\n    };\n    var astProvider = {\n        getASTRoot: function () {\n            var selectedNode = this.getSelectedNode();\n            if (selectedNode)\n                return selectedNode.root();\n            var editor = null;\n            if (editorTools.aquireManager()) {\n                editor = editorTools.aquireManager().getCurrentEditor();\n            }\n            if (!editor && atom.workspace.getActiveTextEditor()) {\n                editor = atom.workspace.getActiveTextEditor();\n            }\n            if (!editor)\n                return null;\n            if (!unitUtils.isRAMLUnit(editor.getBuffer().getText()))\n                return null;\n            var filePath = editor.getPath();\n            var prj = parser.project.createProject(path.dirname(filePath));\n            var offset = editor.getBuffer().characterIndexForPosition(editor.getCursorBufferPosition());\n            var text = editor.getBuffer().getText();\n            var unit = prj.setCachedUnitContent(path.basename(filePath), text);\n            return unit.highLevel();\n        },\n        getSelectedNode: function () {\n            var editor = null;\n            var gotEditorFromOutline = false;\n            if (editorTools.aquireManager()) {\n                editor = editorTools.aquireManager().getCurrentEditor();\n                gotEditorFromOutline = true;\n            }\n            if (!editor && atom.workspace.getActiveTextEditor()) {\n                editor = atom.workspace.getActiveTextEditor();\n            }\n            if (!editor)\n                return null;\n            if (path.extname(editor.getPath()) != '.raml')\n                return null;\n            if (!unitUtils.isRAMLUnit(editor.getBuffer().getText()))\n                return null;\n            var request = {\n                editor: editor,\n                bufferPosition: editor.getCursorBufferPosition()\n            };\n            var node = null;\n            if (gotEditorFromOutline) {\n                node = editorTools.aquireManager().getSelectedNode();\n            }\n            else {\n                if (editor.getBuffer()) {\n                    var lastPosition = editor.getBuffer().getEndPosition();\n                    if (lastPosition.column == request.bufferPosition.column\n                        && lastPosition.row == request.bufferPosition.row) {\n                        return null;\n                    }\n                    if (request.bufferPosition.row == 0 && request.bufferPosition.column == 0) {\n                        return null;\n                    }\n                }\n                node = provider.getAstNode(request, false);\n            }\n            return node;\n        }\n    };\n    var astModifier = {\n        deleteNode: function (node) {\n            var editorManager = editorTools.aquireManager();\n            if (editorManager && editorManager._view) {\n                editorManager._view.forEachViewer(function (x) { return x.remove(node); });\n            }\n            var parent = node.parent();\n            if (parent) {\n                parent.remove(node);\n                parent.resetChildren();\n            }\n        },\n        updateText: function (node) {\n            var editorManager = editorTools.aquireManager();\n            if (editorManager) {\n                editorManager.updateText(node);\n            }\n        }\n    };\n    commonContextActions.initialize(editorProvider, astProvider, astModifier);\n    outlineInitializer.initialize(editorProvider, astProvider);\n    provider.initialize(astProvider);\n}\nexports.initialize = initialize;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/shared-ast-initializer.js\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar _ = require(\"underscore\");\nexports.DYNAMIC_COMMAND_TAG = \"DYNAMIC_COMMAND_TAG\";\nvar commandIdToCommandInfo = {};\nvar tagToCommands = {};\n/**\n * Adds new managed command\n * @param selector - command CSS selector\n * @param id - command id. Must be unique across the managed commands.\n * @param callBack - called on command invocation\n * @param tag - optional action tag allowing to perform batch operations\n */\nfunction addCommand(selector, id, callBack, tag) {\n    if (_.find(listCommands(), function (commandId) {\n        if (commandId == id) {\n            return true;\n        }\n        return false;\n    })) {\n        return;\n    }\n    var disposable = atom.commands.add(selector, id, callBack);\n    var commandInfo = {\n        commandId: id,\n        tag: tag,\n        disposable: disposable\n    };\n    commandIdToCommandInfo[id] = commandInfo;\n    if (tag) {\n        var tagCommands = tagToCommands[tag];\n        if (!tagCommands) {\n            tagCommands = [];\n            tagToCommands[tag] = tagCommands;\n        }\n        tagCommands.push(commandInfo);\n    }\n}\nexports.addCommand = addCommand;\n/**\n * Deletes unmanaged command.\n * Generally, should not be called for managed actions, use the managed\n * version instead.\n * @param id - command id\n */\nfunction deleteUnmanagedCommand(id) {\n    atom.commands.registeredCommands[id] = null;\n    atom.commands.selectorBasedListenersByCommandName[id] = null;\n}\nexports.deleteUnmanagedCommand = deleteUnmanagedCommand;\n/**\n * Deletes managed action by id\n * @param id\n */\nfunction deleteManagedCommand(id) {\n    var commandInfo = commandIdToCommandInfo[id];\n    if (!commandInfo)\n        return;\n    commandInfo.disposable.dispose();\n    delete commandIdToCommandInfo[id];\n    if (commandInfo.tag) {\n        var tagCommands = tagToCommands[commandInfo.tag];\n        if (!tagCommands)\n            return;\n        var infoIndex = -1;\n        _.find(tagCommands, function (currentInfo, index) {\n            if (currentInfo.commandId == id) {\n                infoIndex = index;\n                return true;\n            }\n            return false;\n        });\n        if (infoIndex != -1)\n            tagCommands.splice(infoIndex, 1);\n    }\n}\nexports.deleteManagedCommand = deleteManagedCommand;\n/**\n * Deletes all managed commands tagged the the specific tag\n * @param tag\n */\nfunction deleteCommandsByTag(tag) {\n    var tagCommands = tagToCommands[tag];\n    if (!tagCommands)\n        return;\n    for (var index in tagCommands) {\n        var currentInfo = tagCommands[index];\n        currentInfo.disposable.dispose();\n        delete commandIdToCommandInfo[currentInfo.commandId];\n    }\n    delete tagToCommands[tag];\n}\nexports.deleteCommandsByTag = deleteCommandsByTag;\n/**\n * Lists all commands, both managed and unmanaged.\n * @returns {string[]}\n */\nfunction listCommands() {\n    var result = [];\n    for (var commandName in atom.commands.selectorBasedListenersByCommandName) {\n        result.push(commandName);\n    }\n    return result;\n}\nexports.listCommands = listCommands;\nvar initialized = false;\nfunction initialize() {\n    if (initialized)\n        return;\n    initialized = true;\n    try {\n        //forcing command palette to register itself\n        atom.packages.activatePackage('command-palette');\n        //registering our own listener to command palette's command\n        var listener = function () {\n            prePanelDisplay();\n        };\n        listener.commandManager = true;\n        atom.commands.add('atom-workspace', 'command-palette:toggle', listener);\n        ////and now swapping those listeners, so our one is called first\n        //var listenersArray = (<any>atom.commands.selectorBasedListenersByCommandName)\n        //    [\"command-palette:toggle\"]\n        //listenersArray.splice(0,0,listenersArray[1])\n        //listenersArray.splice(1, 1)\n        var listenersArray = atom.commands.selectorBasedListenersByCommandName[\"command-palette:toggle\"];\n        listenersArray.forEach(function (listener) {\n            if (listener.callback.commandManager) {\n                listener.sequenceNumber = 100500000;\n            }\n        });\n    }\n    catch (Error) {\n        console.error(Error.message);\n    }\n}\nexports.initialize = initialize;\nvar contributors = {};\nfunction registerContributor(contributor) {\n    contributors[contributor.id] = contributor;\n}\nexports.registerContributor = registerContributor;\nfunction prePanelDisplay() {\n    deleteCommandsByTag(exports.DYNAMIC_COMMAND_TAG);\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationStarted) {\n            contributor.calculationStarted();\n        }\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        contributor.calculateItems().forEach(function (item) {\n            addCommand(item.selector, \"api-workbench:\" + item.id, item.callBack, exports.DYNAMIC_COMMAND_TAG);\n        });\n    }\n    for (var contributorId in contributors) {\n        var contributor = contributors[contributorId];\n        if (contributor.calculationFinished) {\n            contributor.calculationFinished();\n        }\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/command-manager.js\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar actions = require(\"raml-actions\");\nvar _ = require(\"underscore\");\nvar commandManager = require(\"../quick-commands/command-manager\");\nvar originalShowForEvent;\n/**\n * Must be called first, at startup, before the module is used.\n */\nfunction initialize() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    originalShowForEvent = atom.contextMenu.constructor.prototype.showForEvent;\n    atom.contextMenu.constructor.prototype.showForEvent = function (event) {\n        preMenuDisplay();\n        originalShowForEvent.apply(atom.contextMenu, [event]);\n        postMenuDisplay();\n    };\n}\nexports.initialize = initialize;\nvar initialized = false;\nfunction preMenuDisplay() {\n    try {\n        var treeRoots = actions.calculateMenuItemsTree();\n        var nodeSets = {};\n        cleanExistingSets();\n        commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG);\n        treeRoots.forEach(function (node) {\n            var itemSet = nodeSets[node.selector];\n            if (!itemSet) {\n                itemSet = findOrCreateItemSet(node.selector);\n                nodeSets[node.selector] = itemSet;\n            }\n            var menuItem = constructAtomMenuItem(node);\n            itemSet.items.push(menuItem);\n        });\n    }\n    catch (Error) {\n        console.log(Error.message);\n    }\n}\nfunction constructAtomMenuItem(node) {\n    var result = {\n        label: node.name,\n    };\n    if (node.children.length > 0) {\n        result.submenu = [];\n    }\n    else {\n        var commandName = \"api-workbench:\" + node.name;\n        var existingCommands = commandManager.listCommands();\n        commandManager.addCommand(node.selector, commandName, node.onClick, commandManager.DYNAMIC_COMMAND_TAG);\n        result.command = commandName;\n    }\n    node.children.forEach(function (child) {\n        var childMenuItem = constructAtomMenuItem(child);\n        result.submenu.push(childMenuItem);\n    });\n    return result;\n}\nvar DYNAMIC_SET_TAG = \"DYNAMIC_SET_TAG\";\n/**\n * Selector that were used at least once in the context menu\n * @type {Array}\n */\nvar usedSelectors = [];\nfunction findOrCreateItemSet(selector) {\n    var existingSet = _.find(atom.contextMenu.itemSets, function (currentSet) {\n        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n    });\n    if (!existingSet) {\n        existingSet = {\n            items: [],\n            selector: selector,\n            specificity: 11,\n            tag: DYNAMIC_SET_TAG\n        };\n        atom.contextMenu.itemSets.push(existingSet);\n        //saving used selector name\n        if (!_.find(usedSelectors, function (name) { return name == selector; })) {\n            usedSelectors.push(selector);\n        }\n    }\n    return existingSet;\n}\nfunction cleanExistingSets() {\n    var existingSets = _.filter(atom.contextMenu.itemSets, function (currentSet) {\n        return currentSet.tag && currentSet.tag == DYNAMIC_SET_TAG;\n    });\n    existingSets.forEach(function (existingSet) {\n        existingSet.items = [];\n    });\n}\nfunction postMenuDisplay() {\n    //commandManager.deleteCommandsByTag(commandManager.DYNAMIC_COMMAND_TAG)\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/contextMenu.js\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar contextActions = require(\"raml-actions\");\nvar rp = contextActions.parser;\nvar search = rp.search;\nvar stubs = rp.stubs;\nvar universeHelpers = rp.universeHelpers;\nvar su = rp.schema;\nvar _ = require(\"underscore\");\nvar UI = require(\"atom-ui-lib\");\nvar extract = require(\"../dialogs/extractElementsDialog\");\nvar def = rp.ds;\nvar move = require(\"../dialogs/moveElementsDialog\");\nvar assistUtils = require(\"../dialogs/assist-utils\");\n/**\n * For unknown reason, compiler cant merge highlevel coming from raml-1-parser direct import\n * and the one coming from actions, so we need to convert manually.\n * @param node\n */\nfunction hlConv(node) {\n    return node;\n}\nvar AbstractDialogWithValidation = (function () {\n    function AbstractDialogWithValidation(parentNode, name) {\n        this.parentNode = parentNode;\n        this.name = name;\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractDialogWithValidation.prototype.validate = function () {\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    AbstractDialogWithValidation.prototype.performOk = function () {\n    };\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    AbstractDialogWithValidation.prototype.createBody = function (section) {\n    };\n    /**\n     * Call this to display the dialog.\n     */\n    AbstractDialogWithValidation.prototype.show = function () {\n        console.log(\"Original node tree:\");\n        if (this.getParentNode())\n            console.log(this.getParentNode().printDetails());\n        if (!this.getParentNode()) {\n            return;\n        }\n        var mainSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        this.createValidationIndicator(mainSection);\n        this.createBody(mainSection);\n        this.createButtonBar(mainSection);\n        mainSection.setPercentWidth(100);\n        var html = mainSection.renderUI();\n        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n        this.performValidation();\n    };\n    AbstractDialogWithValidation.prototype.performValidation = function () {\n        var validationMessage = this.validate();\n        if (this.okButton) {\n            if (validationMessage)\n                this.okButton.setDisabled(true);\n            else\n                this.okButton.setDisabled(false);\n        }\n        if (this.errorLabel) {\n            if (validationMessage) {\n                this.errorLabel.setDisplay(true);\n                this.errorLabel.setText(validationMessage);\n            }\n            else {\n                this.errorLabel.setDisplay(false);\n                this.errorLabel.setText(\"\");\n            }\n        }\n    };\n    AbstractDialogWithValidation.prototype.createValidationIndicator = function (vc) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(this.errorLabel));\n    };\n    AbstractDialogWithValidation.prototype.saveUnit = function (unit) {\n        var unitPath = unit.absolutePath();\n        var unitText = unit.contents();\n        //first trying to find an opened text editor\n        var openedEditor = _.find(atom.workspace.getTextEditors(), function (editor) {\n            var editorPath = editor.getPath();\n            return editorPath == unitPath;\n        });\n        if (openedEditor) {\n            openedEditor.setText(unitText);\n        }\n        else {\n            fs.writeFileSync(unitPath, unitText);\n        }\n    };\n    AbstractDialogWithValidation.prototype.createButtonBar = function (parentPanel) {\n        var _this = this;\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            _this.rootAtomPanel.destroy();\n        }).margin(10, 10));\n        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.performOk();\n            _this.rootAtomPanel.destroy();\n        });\n        this.okButton.setDisabled(true);\n        buttonBar.addChild(this.okButton);\n        parentPanel.addChild(buttonBar);\n    };\n    AbstractDialogWithValidation.prototype.getParentNode = function () {\n        return this.parentNode;\n    };\n    AbstractDialogWithValidation.prototype.getActiveEditor = function () {\n        return assistUtils.getActiveEditor();\n    };\n    AbstractDialogWithValidation.prototype.getNodeId = function (node) {\n        if (node.parent()) {\n            var parentId = this.getNodeId(node.parent());\n            parentId += \".\" + node.name();\n            var sameName = node.parent().directChildren().filter(function (x) { return x.name() == node.name(); });\n            if (sameName.length > 1) {\n                var ind = sameName.indexOf(node);\n                parentId += \"[\" + ind + \"]\";\n            }\n            return parentId;\n        }\n        else if (node.name()) {\n            if (node.definition && node.definition() && node.definition().name() == \"Api\") {\n                //no other way to get rid of a fake Api \"key\"\n                return \"\";\n            }\n            return \".\" + node.name();\n        }\n        return \"\";\n    };\n    AbstractDialogWithValidation.prototype.nodesEqualById = function (node1, node2) {\n        return this.getNodeId(node1) == this.getNodeId(node2);\n    };\n    AbstractDialogWithValidation.prototype.isParentOf = function (potentialParent, potentialChild) {\n        var current = potentialChild.parent();\n        while (current != null) {\n            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n                return true;\n            }\n            current = current.parent();\n        }\n        return false;\n    };\n    return AbstractDialogWithValidation;\n}());\nexports.AbstractDialogWithValidation = AbstractDialogWithValidation;\nvar MoveResourceStateCalculator = (function (_super) {\n    __extends(MoveResourceStateCalculator, _super);\n    function MoveResourceStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    MoveResourceStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return MoveResourceStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar CreateGlobalSchemaStateCalculator = (function (_super) {\n    __extends(CreateGlobalSchemaStateCalculator, _super);\n    function CreateGlobalSchemaStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    CreateGlobalSchemaStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION\n            && generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        //FIXME INFRASTRUCTURE NEEDED\n        if (!universeHelpers.isSchemaProperty(p))\n            return null;\n        var v = attr.value();\n        var targets = search.referenceTargets(p, highLevelNode);\n        var t = _.find(targets, function (x) { return x.name() == attr.value(); });\n        if (t)\n            return null;\n        return attr;\n    };\n    return CreateGlobalSchemaStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar ExtractJSONSchemaToTypeDialog = (function (_super) {\n    __extends(ExtractJSONSchemaToTypeDialog, _super);\n    function ExtractJSONSchemaToTypeDialog() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.createBody = function (section) {\n        var _this = this;\n        section.addChild(UI.label(\"Type name:\").pad(5, 0));\n        this.typeNameTextField = UI.texfField(\"\", \"NewType\", function (x) {\n            _this.performValidation();\n        });\n        section.addChild(this.typeNameTextField);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.validate = function () {\n        if (!this.typeNameTextField || !this.typeNameTextField.getBinding()) {\n            return null;\n        }\n        var schemaName = this.typeNameTextField.getBinding().get();\n        if (schemaName.trim().length == 0) {\n            return \"Enter type name\";\n        }\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    ExtractJSONSchemaToTypeDialog.prototype.performOk = function () {\n        var node = this.getParentNode();\n        var api = node.root();\n        var schema = node.attrValue('schema');\n        node.attr('schema').setValue('');\n        var schemaName = this.typeNameTextField.getBinding().get();\n        var types = su.createSchemaModelGenerator().generateTo(api, schema, schemaName);\n        if (types.length > 0) {\n            node.attrOrCreate('type').setValue(types[0]);\n        }\n        this.saveUnit(api.lowLevel().unit());\n    };\n    return ExtractJSONSchemaToTypeDialog;\n}(AbstractDialogWithValidation));\nexports.ExtractJSONSchemaToTypeDialog = ExtractJSONSchemaToTypeDialog;\nvar CreateGlobalSchemaDialog = (function (_super) {\n    __extends(CreateGlobalSchemaDialog, _super);\n    function CreateGlobalSchemaDialog() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * Indended for subclassing\n     * @param vc - parent section\n     */\n    CreateGlobalSchemaDialog.prototype.createBody = function (section) {\n        var _this = this;\n        section.addChild(UI.label(\"Schema name:\").pad(5, 0));\n        this.schemaNameTextField = UI.texfField(\"\", this.getDefaultSchemaName(), function (x) {\n            _this.performValidation();\n        });\n        section.addChild(this.schemaNameTextField);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    CreateGlobalSchemaDialog.prototype.validate = function () {\n        if (!this.schemaNameTextField || !this.schemaNameTextField.getBinding()) {\n            return null;\n        }\n        var schemaName = this.schemaNameTextField.getBinding().get();\n        if (schemaName.trim().length == 0) {\n            return \"Enter schema name\";\n        }\n        var attr = this.getParentNode();\n        var schemaContent = attr.value();\n        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n        if (fs.existsSync(schemaFilePath)) {\n            return \"Schema file \" + schemaFilePath + \" already exists\";\n        }\n        return null;\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     */\n    CreateGlobalSchemaDialog.prototype.performOk = function () {\n        var schemaName = this.schemaNameTextField.getBinding().get();\n        var attr = this.getParentNode();\n        var schemaContent = attr.value();\n        var schemaFilePath = this.getSchemaFilePath(schemaName, schemaContent);\n        var root = attr.parent().root();\n        var globalSchemaType = attr.property().range().universe().type(\"GlobalSchema\");\n        var schemaNode = stubs.createStubNode(globalSchemaType, globalSchemaType.universe().type(\"Api\").property(\"schemas\"), schemaName);\n        schemaNode.attrOrCreate(\"value\").setValue(\"!include \" + this.getSchemaRelativePath(schemaName, schemaContent));\n        root.add(schemaNode);\n        attr.setValue(schemaName);\n        this.saveUnit(attr.lowLevel().unit());\n        var schemaDir = path.dirname(schemaFilePath);\n        if (!fs.existsSync(schemaDir)) {\n            fs.mkdirSync(schemaDir);\n        }\n        fs.writeFileSync(schemaFilePath, schemaContent);\n    };\n    CreateGlobalSchemaDialog.prototype.getSchemaFilePath = function (schemaName, schemaContent) {\n        var parentDirectory = path.resolve(path.dirname(this.getActiveEditor().getPath()), \"schemas\");\n        var schemaExtension = this.determineSchemaExtension(schemaContent);\n        var fileName = schemaName + \".\" + schemaExtension;\n        return path.resolve(parentDirectory, fileName);\n    };\n    CreateGlobalSchemaDialog.prototype.getSchemaRelativePath = function (schemaName, schemaContent) {\n        var schemaExtension = this.determineSchemaExtension(schemaContent);\n        var fileName = schemaName + \".\" + schemaExtension;\n        return \"schemas/\" + fileName;\n    };\n    CreateGlobalSchemaDialog.prototype.determineSchemaExtension = function (schemaContent) {\n        var trim = schemaContent.trim();\n        if (trim.indexOf(\"{\") == 0 || trim.indexOf(\"[\") == 0) {\n            return \"json\";\n        }\n        return \"xsd\";\n    };\n    CreateGlobalSchemaDialog.prototype.getDefaultSchemaName = function () {\n        return \"NewSchema\";\n    };\n    return CreateGlobalSchemaDialog;\n}(AbstractDialogWithValidation));\nexports.CreateGlobalSchemaDialog = CreateGlobalSchemaDialog;\nfunction createGlobalSchema(attr) {\n    new CreateGlobalSchemaDialog(attr, \"Create Global Schema\").show();\n}\nexports.createGlobalSchema = createGlobalSchema;\nvar ExpandSignatureStateCalculator = (function (_super) {\n    __extends(ExpandSignatureStateCalculator, _super);\n    function ExpandSignatureStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExpandSignatureStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        return attr;\n    };\n    return ExpandSignatureStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nfunction updateEditor(node) {\n    var ed = assistUtils.getActiveEditor();\n    ed.setText(assistUtils.cleanEmptyLines(node.root().lowLevel().unit().contents()));\n}\nvar ExtractResourceTypeStateCalculator = (function (_super) {\n    __extends(ExtractResourceTypeStateCalculator, _super);\n    function ExtractResourceTypeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractResourceTypeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return ExtractResourceTypeStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar ExtractTraitStateCalculator = (function (_super) {\n    __extends(ExtractTraitStateCalculator, _super);\n    function ExtractTraitStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractTraitStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isMethodType(highLevelNode.definition()))\n            return null;\n        return highLevelNode;\n    };\n    return ExtractTraitStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar MoveContentStateCalculator = (function (_super) {\n    __extends(MoveContentStateCalculator, _super);\n    function MoveContentStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    MoveContentStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION)\n            return null;\n        var highLevelNode = generalState.node;\n        if (highLevelNode.children().length == 0)\n            return null;\n        return highLevelNode;\n    };\n    return MoveContentStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar ConvertJsonSchemaToTypeStateCalculator = (function (_super) {\n    __extends(ConvertJsonSchemaToTypeStateCalculator, _super);\n    function ConvertJsonSchemaToTypeStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ConvertJsonSchemaToTypeStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        if (generalState.node.isElement()) {\n            if (universeHelpers.isRAML08Node(generalState.node.asElement()))\n                return null;\n        }\n        if (generalState.node.isAttr()) {\n            if (universeHelpers.isRAML08Attribute(generalState.node.asAttr()))\n                return null;\n        }\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        if (!attr.value())\n            return null;\n        var p = attr.property();\n        if (!universeHelpers.isSchemaProperty(p))\n            return null;\n        if (typeof attr.value() != 'string' || attr.value().indexOf(\"{\") == -1) {\n            return null;\n        }\n        return highLevelNode;\n        //var txt=generalState.editor.getText();\n        //var res = getKeyValue(generalState.offset, txt);\n        //if(res != 'schema') return null;\n        //var schema = highLevelNode.attrValue('schema');\n        //if(!schema) return null;\n        //return (schema.length > 0 && schema[0] == '{')? highLevelNode : null;\n        //return true; //res == 'schema'? highLevelNode : null;\n    };\n    return ConvertJsonSchemaToTypeStateCalculator;\n}(contextActions.CommonASTStateCalculator));\n// function indent(line:string) {\n//     var rs = \"\";\n//     for (var i = 0; i < line.length; i++) {\n//         var c = line[i];\n//         if (c == '\\r' || c == '\\n') {\n//             continue;\n//         }\n//         if (c == ' ' || c == '\\t') {\n//             rs += c;\n//             continue;\n//         }\n//         break;\n//     }\n//     return rs;\n// }\n//FIXME remove it from here duplication with jsyaml2lowLevel.ts\n// function stripIndent(text:string, indent:string) {\n//     var lines = assistUtils.splitOnLines(text);\n//     var rs = [];\n//     for (var i = 0; i < lines.length; i++) {\n//         if (i == 0) {\n//             rs.push(lines[0]);\n//         }\n//         else {\n//             rs.push(lines[i].substring(indent.length));\n//         }\n//     }\n//     return rs.join(\"\");\n// }\nvar ExtractLibraryStateCalculator = (function (_super) {\n    __extends(ExtractLibraryStateCalculator, _super);\n    function ExtractLibraryStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractLibraryStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        if (generalState.node.isElement()) {\n            if (universeHelpers.isRAML08Node(generalState.node.asElement()))\n                return null;\n        }\n        if (generalState.node.isAttr()) {\n            if (universeHelpers.isRAML08Attribute(generalState.node.asAttr()))\n                return null;\n        }\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        return current;\n    };\n    return ExtractLibraryStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar ExtractOverlayStateCalculator = (function (_super) {\n    __extends(ExtractOverlayStateCalculator, _super);\n    function ExtractOverlayStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractOverlayStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        return current;\n    };\n    return ExtractOverlayStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar ModifyOverlayStateCalculator = (function (_super) {\n    __extends(ModifyOverlayStateCalculator, _super);\n    function ModifyOverlayStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    ModifyOverlayStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        while (current.parent() != null) {\n            current = current.parent();\n        }\n        if (current.definition\n            && universeHelpers.isOverlayType(current.definition())) {\n            return current;\n        }\n        return null;\n    };\n    return ModifyOverlayStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar AbstractMoveTypePropertiesCalculator = (function (_super) {\n    __extends(AbstractMoveTypePropertiesCalculator, _super);\n    function AbstractMoveTypePropertiesCalculator() {\n        _super.apply(this, arguments);\n    }\n    AbstractMoveTypePropertiesCalculator.prototype.isTypeNode = function (node) {\n        return node.property\n            && node.property().range\n            && universeHelpers.isTypeDeclarationType(node.property().range())\n            && universeHelpers.isTypesProperty(node.property());\n    };\n    return AbstractMoveTypePropertiesCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar PullUpStateCalculator = (function (_super) {\n    __extends(PullUpStateCalculator, _super);\n    function PullUpStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    PullUpStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        if (!current)\n            return null;\n        while (current.parent() != null) {\n            if (this.isTypeNode(current)) {\n                //so, we're inside the type\n                //but we also want to double check that there are superclasses\n                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n                if (superTypes && superTypes.length > 0)\n                    return current;\n                else\n                    return null;\n            }\n            current = current.parent();\n        }\n        return null;\n    };\n    return PullUpStateCalculator;\n}(AbstractMoveTypePropertiesCalculator));\nvar ExtractSupertypeCalculator = (function (_super) {\n    __extends(ExtractSupertypeCalculator, _super);\n    function ExtractSupertypeCalculator() {\n        _super.apply(this, arguments);\n    }\n    ExtractSupertypeCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var current = generalState.node;\n        if (!current)\n            return null;\n        while (current.parent() != null) {\n            if (this.isTypeNode(current)) {\n                //so, we're inside the type\n                //but we also want to double check that there are no superclasses\n                var superTypes = extract.findUserDefinedSupertypes(hlConv(current));\n                if (!superTypes || superTypes.length == 0)\n                    return current;\n                else\n                    return null;\n            }\n            current = current.parent();\n        }\n        return null;\n    };\n    return ExtractSupertypeCalculator;\n}(AbstractMoveTypePropertiesCalculator));\nvar GenerateExampleCalculator = (function (_super) {\n    __extends(GenerateExampleCalculator, _super);\n    function GenerateExampleCalculator() {\n        _super.apply(this, arguments);\n    }\n    GenerateExampleCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        //console.log('definition: ' + highLevelNode.definition().name() + '; ' + generalState.completionKind);\n        if (generalState.completionKind != search.LocationKind.KEY_COMPLETION\n            && generalState.completionKind != search.LocationKind.VALUE_COMPLETION)\n            return null;\n        var txt = generalState.editor.getText();\n        //var res = getKeyValue(generalState.offset, txt);\n        //return (res == 'type')? highLevelNode: null;\n        var attr = _.find(highLevelNode.attrs(), function (x) { return x.lowLevel().start() < generalState.offset && x.lowLevel().end() >= generalState.offset && !x.property().getAdapter(def.RAMLPropertyService).isKey(); });\n        if (!attr)\n            return null;\n        var p = attr.property();\n        if (!universeHelpers.isExampleProperty(p))\n            return null;\n        var typeAttr = highLevelNode.attr('type');\n        if (!typeAttr)\n            return null;\n        var type = typeAttr.value();\n        if (!type)\n            return null;\n        return highLevelNode;\n    };\n    return GenerateExampleCalculator;\n}(contextActions.CommonASTStateCalculator));\nfunction initialize() {\n    contextActions.addAction({\n        name: \"Create global schema\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) { return createGlobalSchema(state); },\n        stateCalculator: new CreateGlobalSchemaStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Move resource\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new move.MoveElementsDialog(hlConv(state), \"Resource Type\", true).show();\n        },\n        stateCalculator: new MoveResourceStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Resource Type\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Resource Type\", true).show();\n        },\n        stateCalculator: new ExtractResourceTypeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Trait\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractTypesAndTraitsDialog(hlConv(state), \"Trait\", false).show();\n        },\n        stateCalculator: new ExtractTraitStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Convert JSON schema to type\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new ExtractJSONSchemaToTypeDialog(state, \"Convert JSON schema to type\").show();\n        },\n        stateCalculator: new ConvertJsonSchemaToTypeStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Library\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractLibraryDialog(hlConv(state), \"Extract Library\").show();\n        },\n        stateCalculator: new ExtractLibraryStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Overlay\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) {\n            new extract.ExtractOverlayDialog(hlConv(state), \"Extract Overlay\").show();\n        },\n        stateCalculator: new ExtractOverlayStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Modify Overlay\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Code\"],\n        onClick: function (state) {\n            new extract.ModifyOverlayDialog(hlConv(state), \"Modify Overlay\").show();\n        },\n        stateCalculator: new ModifyOverlayStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Pull Up\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.PullUpDialog(hlConv(state), \"Pull Up\").show();\n        },\n        stateCalculator: new PullUpStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Extract Supertype\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Refactoring\"],\n        onClick: function (state) {\n            new extract.ExtractSupertypeDialog(hlConv(state), \"Extract Supertype\").show();\n        },\n        stateCalculator: new ExtractSupertypeCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n}\nexports.initialize = initialize;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/quickFix.js\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar fs = require('fs');\nvar path = require('path');\nvar contextActions = require(\"raml-actions\");\nvar rp = contextActions.parser;\nvar su = rp.schema;\nvar UI = require(\"atom-ui-lib\");\nvar xmlutil = require(\"../../util/xmlutil\");\nvar shemagen = require(\"../../util/schemaGenerator\");\nvar assistUtils = require(\"../dialogs/assist-utils\");\nvar MoveToNewFileDialog = (function () {\n    function MoveToNewFileDialog(callback) {\n        this.callback = callback;\n    }\n    MoveToNewFileDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var vc = UI.section(\"Move node content to new file \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"Please enter destination file path\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please enter destination path\"));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            zz.destroy();\n            _this.callback(_this.destination);\n        });\n        var txt = UI.texfField(\"\", \"\", function (x) {\n            if (!txt) {\n                return;\n            }\n            var errorMessage = null;\n            _this.destination = txt.getBinding().get();\n            if (_this.destination.trim().length == 0) {\n                errorMessage = \"Please enter destination file path\";\n            }\n            else if (!path.extname(_this.destination) || path.extname(_this.destination).trim().length <= 2) {\n                errorMessage = \"Please enter destination file extension\";\n            }\n            else {\n                var dir = path.resolve(path.dirname(assistUtils.getActiveEditor().getPath()), path.dirname(_this.destination));\n                if (!fs.existsSync(dir)) {\n                    errorMessage = \"Parent directory does not exist\";\n                }\n                else {\n                    var st = fs.statSync(dir);\n                    if (!st.isDirectory()) {\n                        errorMessage = \"Parent path is not a directory\";\n                    }\n                    if (!errorMessage) {\n                        var canWrite = true;\n                        try {\n                            fs.accessSync(dir, fs.W_OK);\n                        }\n                        catch (exception) {\n                            canWrite = false;\n                        }\n                        if (!canWrite) {\n                            errorMessage = \"Can't write to specified directory, access denied. Please, check your permissions.\";\n                        }\n                    }\n                }\n            }\n            if (errorMessage) {\n                errorLabel.setDisplay(true);\n                errorLabel.setText(errorMessage);\n                okButton.setDisabled(true);\n            }\n            else {\n                errorLabel.setDisplay(false);\n                okButton.setDisabled(false);\n            }\n        });\n        vc.addChild(UI.vc(txt));\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            zz.destroy();\n        }).margin(10, 10));\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveToNewFileDialog;\n}());\nexports.MoveToNewFileDialog = MoveToNewFileDialog;\nvar FillBodyDialog = (function () {\n    function FillBodyDialog(callback, title) {\n        if (title === void 0) { title = \"Fill body\"; }\n        this.callback = callback;\n        this.title = title;\n        this.name = \"\";\n        this.needXML = true;\n        this.needJSON = true;\n        this.jsexample = '{\\n \"message\":\"Hello world\"\\n}';\n        this.xmlexample = \"\";\n        this.xmlschema = \"\";\n        this.jsschema = \"\";\n    }\n    FillBodyDialog.prototype.extraContent = function (s) {\n    };\n    FillBodyDialog.prototype.updateButtons = function () {\n        if (!this.createButton) {\n            return;\n        }\n        if (this.name.length == 0) {\n            this.createButton.setDisabled(true);\n            this.em.setDisplay(true);\n            this.em.setText(\"Please type name of your payload\");\n            return;\n        }\n        if (this.needJSON) {\n            try {\n                JSON.parse(this.jsexample);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"JSON example is not correct\");\n                return;\n            }\n            try {\n                var so = su.getJSONSchema(this.jsschema, null);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"JSON schema is not correct\");\n                return;\n            }\n        }\n        if (this.needXML) {\n            try {\n                xmlutil(this.xmlexample);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"XML example is not correct\");\n                return;\n            }\n            try {\n                var so = su.getXMLSchema(this.xmlschema);\n            }\n            catch (e) {\n                this.createButton.setDisabled(true);\n                this.em.setDisplay(true);\n                this.em.setText(\"XML schema is not correct\");\n                return;\n            }\n        }\n        this.em.setDisplay(false);\n        this.createButton.setDisabled(false);\n    };\n    FillBodyDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        this.em = UI.label(\"Please type name of your payload\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        var section = UI.section(this.title, UI.Icon.BOOK, false, false, this.em, UI.h3(\"Please type name for your payload\")).pad(10, 10);\n        section.addChild(UI.texfField(\"\", this.name, function (x) {\n            _this.name = x.getBinding().get();\n            _this.updateButtons();\n        }));\n        var r1 = UI.checkBox(\"Create XML body\");\n        r1.setValue(this.needXML);\n        r1.getBinding().addListener(function (x) {\n            _this.needXML = r1.getValue();\n            _this.updateButtons();\n        });\n        section.addChild(r1);\n        var r2 = UI.checkBox(\"Create JSON body\");\n        r2.setValue(this.needJSON);\n        r2.getBinding().addListener(function (x) {\n            _this.needJSON = r2.getValue();\n            _this.updateButtons();\n        });\n        section.addChild(r2);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            zz.destroy();\n        }).margin(10, 10));\n        this.createButton = UI.button(\"Create\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.onOk(zz);\n            zz.destroy();\n        });\n        buttonBar.addChild(this.createButton);\n        var tf = new UI.TabFolder();\n        this.createButton.setDisabled(true);\n        this.createTextSection(tf, \"JSON Example\", \"source.json\", \"jsexample\");\n        this.createTextSection(tf, \"JSON Schema\", \"source.json\", \"jsschema\");\n        this.createTextSection(tf, \"XML Example\", \"text.xml\", \"xmlexample\");\n        this.createTextSection(tf, \"XML Schema\", \"text.xml\", \"xmlschema\");\n        tf.setOnSelected(function () {\n            var c = tf.selectedComponent();\n            var te = c.children()[1];\n            te.setText(_this[c.id()]);\n        });\n        section.addChild(tf);\n        section.addChild(buttonBar);\n        zz = atom.workspace.addModalPanel({ item: section.renderUI() });\n    };\n    FillBodyDialog.prototype.createTextSection = function (tf, caption, lang, code) {\n        var _this = this;\n        var hs = UI.vc();\n        hs.setCaption(caption);\n        hs.setId(code);\n        var ts = new UI.AtomEditorElement(\"\", function (x) { return x; });\n        ts.setMini(false);\n        ts.getBinding().addListener(function (x) {\n            _this[code] = ts.getValue();\n            _this.updateButtons();\n        });\n        //ts.setCaption(code)\n        ts.setText(\"\" + this[code]);\n        ts.setCaption(caption);\n        ts.setGrammar(lang);\n        ts.setStyle(\"height\", \"400px\");\n        ts.setStyle(\"border\", \"solid\");\n        ts.setStyle(\"border-width\", \"1px\");\n        hs.addChild(UI.h3(\"Please type your example here:\"));\n        hs.addChild(ts);\n        if (code == 'jsexample') {\n            var b = UI.button(\"Generate JSON schema\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n                try {\n                    var rs = shemagen.generateSchema(_this.jsexample, \"application/json\");\n                    _this.jsschema = rs;\n                    tf.setSelectedIndex(1);\n                }\n                catch (e) {\n                    _this.jsschema = e.message;\n                    tf.setSelectedIndex(1);\n                }\n            });\n            hs.addChild(b.margin(5, 5, 5, 5));\n        }\n        if (code == 'xmlexample') {\n            var b = UI.button(\"Generate JSON example\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n                try {\n                    var rs = xmlutil(_this.xmlexample);\n                    _this.jsexample = JSON.stringify(rs, null, 2);\n                    tf.setSelectedIndex(0);\n                }\n                catch (e) {\n                    _this.jsexample = e.message;\n                    tf.setSelectedIndex(0);\n                }\n            });\n            hs.addChild(b.margin(5, 5, 5, 5));\n        }\n        tf.add(caption, null, hs);\n    };\n    FillBodyDialog.prototype.onOk = function (zz) {\n        var uiState = {\n            name: this.name,\n            needJSON: this.needJSON,\n            needXML: this.needXML,\n            jsexample: this.jsexample,\n            xmlexample: this.xmlexample,\n            jsschema: this.jsschema,\n            xmlschema: this.xmlschema,\n        };\n        this.callback(uiState);\n    };\n    return FillBodyDialog;\n}());\nfunction register() {\n    contextActions.uiActions.registerMoveContentsAction(function (uiFinishedCallback) {\n        new MoveToNewFileDialog(uiFinishedCallback).show();\n    });\n    contextActions.uiActions.registerCompleteBodyAction(function (uiFinishedCallback) {\n        new FillBodyDialog(uiFinishedCallback).show();\n    });\n}\nexports.register = register;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/actions.js\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = require(\"url\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"url\"\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = require(\"atom-ui-lib\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-ui-lib\"\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = require(\"child_process\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"child_process\"\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = require(\"xmlhttprequest\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmlhttprequest\"\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = require(\"mkdirp\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mkdirp\"\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = require(\"raml-1-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-1-parser\"\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = require(\"raml-actions\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-actions\"\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = require(\"atom-space-pen-views\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"atom-space-pen-views\"\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = require(\"underscore\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = require(\"raml-suggestions\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-suggestions\"\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = require(\"raml-1-parser/dist/index\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-1-parser/dist/index\"\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = require(\"basarat-text-buffer\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"basarat-text-buffer\"\n ** module id = 29\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * Created by kor on 22/06/15.\n */\nvar SpacePenViews = require('atom-space-pen-views');\nvar Scrollable = (function (_super) {\n    __extends(Scrollable, _super);\n    function Scrollable() {\n        _super.call(this);\n        this._children = [];\n    }\n    Scrollable.content = function () {\n        var v = this.div({ class: 'scrollpad pane-item padded', tabindex: -1, style: \"overflow:scroll;\" });\n        return v;\n    };\n    Scrollable.prototype.dispose = function () {\n    };\n    Scrollable.prototype.caption = function () { return \"\"; };\n    Scrollable.prototype.scroll = function (top, left) {\n        this.element.scrollTop = top;\n        this.element.scrollLeft = left;\n    };\n    Scrollable.prototype.size = function () {\n        return {\n            top: this.element.scrollTop,\n            left: this.element.scrollLeft,\n            bottom: this.element.scrollTop + this.element.clientHeight,\n            right: this.element.scrollLeft + this.element.clientWidth\n        };\n    };\n    Scrollable.prototype.changed = function () { };\n    Scrollable.prototype.refresh = function () { };\n    Scrollable.prototype.ui = function () {\n        return this.element;\n    };\n    Scrollable.prototype.setParent = function (p) {\n        if (this._parent != null)\n            this._parent.removeChild(this);\n        this._parent = p;\n    };\n    //TODO REMOVE COPY PASTE\n    Scrollable.prototype.addChild = function (child) {\n        child.setParent(this);\n        this._children.push(child);\n        //this.changed();\n    };\n    Scrollable.prototype.removeChild = function (child) {\n        this._children = this._children.filter(function (x) { return x != child; });\n        // this.changed();\n    };\n    Scrollable.prototype.doRender = function () {\n        return this.innerRenderUI();\n    };\n    /**\n     *\n     * @returns not null element;\n     */\n    Scrollable.prototype.selfRender = function () {\n        return document.createElement(\"div\");\n    };\n    Scrollable.prototype.attached = function () {\n        this.html(this.innerRenderUI());\n    };\n    Scrollable.prototype.innerRenderUI = function () {\n        var start = this.selfRender();\n        this._children.forEach(function (x) {\n            var el = x.renderUI();\n            if (el) {\n                start.appendChild(el);\n            }\n        });\n        return start;\n    };\n    Scrollable.prototype.renderUI = function () {\n        return this.element;\n    };\n    Scrollable.prototype.parent = function () {\n        return null;\n    };\n    Scrollable.prototype.children = function () {\n        return this._children;\n    };\n    Scrollable.prototype.isAttached = function () {\n        return true;\n    };\n    return Scrollable;\n}(SpacePenViews.ScrollView));\nexports.Scrollable = Scrollable;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/util/ScrollViewUI.js\n ** module id = 30\n ** module chunks = 0\n **/","\"use strict\";\n/// <reference path=\"../../../typings/main.d.ts\" />\nvar Workspace = (function () {\n    function Workspace() {\n    }\n    Workspace.prototype.onDidChangeActivePaneItem = function (callback) {\n        return atom.workspace.onDidChangeActivePaneItem(callback);\n    };\n    Workspace.prototype.addModalPanel = function (arg) {\n        return atom.workspace.addModalPanel(arg);\n    };\n    Workspace.prototype.getActiveTextEditor = function () {\n        return atom.workspace.getActiveTextEditor();\n    };\n    Workspace.prototype.getActivePane = function () {\n        return atom.workspace.getActivePane();\n    };\n    Workspace.prototype.getActiveEditor = function () {\n        return atom.workspace.getActiveEditor();\n    };\n    Workspace.prototype.addRightPanel = function (arg) {\n        return atom.workspace.addRightPanel(arg);\n    };\n    Workspace.prototype.paneForItem = function (arg) {\n        return atom.workspace.paneForItem(arg);\n    };\n    Workspace.prototype.getPaneItems = function () {\n        return atom.workspace.getPaneItems();\n    };\n    Workspace.prototype.onDidAddPaneItem = function (callback) {\n        return atom.workspace.onDidAddPaneItem(callback);\n    };\n    Workspace.prototype.onDidDestroyPane = function (callback) {\n        return atom.workspace.onDidDestroyPane(callback);\n    };\n    Workspace.prototype.open = function (path, args) {\n        atom.workspace.open(path, args);\n    };\n    return Workspace;\n}());\nexports.Workspace = Workspace;\nfunction open(pathsToOpen) {\n    atom.open(pathsToOpen);\n}\nexports.open = open;\nexports.workspace = new Workspace();\nvar CommandManager = (function () {\n    function CommandManager() {\n    }\n    CommandManager.prototype.add = function (selector, type, callback) {\n        return atom.commands.add(selector, type, callback);\n    };\n    return CommandManager;\n}());\nexports.CommandManager = CommandManager;\nexports.commands = new CommandManager();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/atomWrapper.js\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar atom = require('../core/atomWrapper');\nvar aspv = require('atom-space-pen-views');\n/*\n * List viewer for commands. accepts confirmation function, label function and key for fuzzy filtering.\n */\nvar SelectListView = (function (_super) {\n    __extends(SelectListView, _super);\n    function SelectListView(_confirmed, label, filterKey) {\n        if (filterKey === void 0) { filterKey = ''; }\n        _super.call(this, []);\n        this._confirmed = _confirmed;\n        this.label = label;\n        this.filterKey = filterKey;\n    }\n    SelectListView.prototype.getFilterKey = function () { return this.filterKey; };\n    SelectListView.prototype.viewForItem = function (item) {\n        return \"<li>\" + this.label(item) + \"</li>\";\n    };\n    SelectListView.prototype.cancel = function () {\n        this.panel.hide();\n        _super.prototype.cancel.call(this);\n    };\n    SelectListView.prototype.hide = function () {\n        if (!this.panel)\n            return;\n        this.panel.hide();\n    };\n    SelectListView.prototype.confirmed = function (item) {\n        this._confirmed(item);\n        this.hide();\n        return this.getSelectedItemView();\n    };\n    SelectListView.prototype.show = function (commands) {\n        this.storeFocusedElement();\n        if (!this.panel)\n            this.panel = atom.workspace.addModalPanel({ item: this });\n        this.setItems(commands);\n        this.panel.show();\n        this.focusFilterEditor();\n    };\n    return SelectListView;\n}(aspv.SelectListView));\nexports.SelectListView = SelectListView;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/quick-commands-ui.js\n ** module id = 32\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar contextActions = require(\"raml-actions\");\nvar dialogs = require(\"../dialogs/dialogs\");\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar services = rp.ds;\nvar universeHelpers = rp.universeHelpers;\nvar AddNewResourceStateCalculator = (function (_super) {\n    __extends(AddNewResourceStateCalculator, _super);\n    function AddNewResourceStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    AddNewResourceStateCalculator.prototype.calculate = function () {\n        //usually we dont need to check the editor, CommonASTStateCalculator does this for us\n        //but in this case we accept null generalState, so double-checking for opened file\n        var editor = this.getEditor();\n        if (!editor)\n            return null;\n        if (path.extname(editor.getPath() || '') != '.raml')\n            return null;\n        var generalState = this.getGeneralState();\n        if (!generalState)\n            return null;\n        var highLevelNode = generalState.node;\n        if (!universeHelpers.isResourceType(highLevelNode.definition()) &&\n            !universeHelpers.isApiType(highLevelNode.definition()))\n            return null;\n        if (!highLevelNode.lowLevel()) {\n            return null;\n        }\n        return highLevelNode;\n    };\n    return AddNewResourceStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nvar CreateNewAPIStateCalculator = (function (_super) {\n    __extends(CreateNewAPIStateCalculator, _super);\n    function CreateNewAPIStateCalculator() {\n        _super.apply(this, arguments);\n    }\n    CreateNewAPIStateCalculator.prototype.calculate = function () {\n        var generalState = this.getGeneralState();\n        if (generalState)\n            return null;\n        var editor = this.getEditor();\n        if (!editor)\n            return null;\n        if (path.extname(editor.getPath() || '') != '.raml')\n            return null;\n        var text = editor.getText().trim();\n        if (text != \"\")\n            return null;\n        return {};\n    };\n    return CreateNewAPIStateCalculator;\n}(contextActions.CommonASTStateCalculator));\nfunction getResourceParent(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n        return node;\n    return getResourceParent(node.parent());\n}\nexports.getResourceParent = getResourceParent;\nfunction getMethodParent(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isMethodType(node.definition()) || universeHelpers.isTraitType(node.definition())) && !node.definition().getAdapter(services.RAMLService).isUserDefined()) {\n        return node;\n    }\n    return null;\n}\nfunction getParent(node, name) {\n    if (!node || !node.property())\n        return null;\n    if ((node.definition().isAssignableFrom(name))) {\n        return node;\n    }\n    return null;\n}\nfunction getResourceParentOrRoot(node) {\n    var rp = getResourceParent(node);\n    return rp ? rp : editorTools.aquireManager().ast;\n}\nfunction toResource(node) {\n    if (!node || !node.property())\n        return null;\n    if ((universeHelpers.isResourcesProperty(node.property()) || universeHelpers.isResourceTypesProperty(node.property()))\n        && (universeHelpers.isResourceType(node.definition()) || universeHelpers.isResourceTypeType(node.definition())))\n        return node;\n    return null;\n}\nexports.toResource = toResource;\nfunction registerQuickCommands(cm) {\n    if (!editorTools.aquireManager())\n        editorTools.initEditorTools(false);\n    var commands = [];\n    commands.forEach(function (x) { return x['__module__'] = 'editorTools'; });\n    contextActions.addAction({\n        name: \"Add new resource\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Add new...\"],\n        onClick: function (state) { return dialogs.newResource(editorTools.aquireManager().getSelectedNode()); },\n        stateCalculator: new AddNewResourceStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addAction({\n        name: \"Create new API\",\n        target: contextActions.TARGET_RAML_EDITOR_NODE,\n        category: [\"Add new...\"],\n        onClick: function (state) { return dialogs.newApi(); },\n        stateCalculator: new CreateNewAPIStateCalculator(),\n        shouldDisplay: function (state) { return state != null; }\n    });\n    contextActions.addSimpleAction(\"Add new method\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newMethod(toResource(editorTools.aquireManager().getSelectedNode())); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && toResource(editorTools.aquireManager().getSelectedNode()) != null; });\n    contextActions.addSimpleAction(\"Create new URI Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(toResource(editorTools.aquireManager().getSelectedNode()), \"Create new URI Parameter\", \"uriParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (toResource(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Query Parameter\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Query Parameter\", \"queryParameters\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Response Header\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Header\", \"headers\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n    contextActions.addSimpleAction(\"Create new Response Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"Response\"), \"Create new Response Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"Response\") != null); });\n    contextActions.addSimpleAction(\"Create new Property\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\"), \"Create new Property\", \"properties\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getParent(editorTools.aquireManager().getSelectedNode(), \"ObjectTypeDeclaration\") != null); });\n    contextActions.addSimpleAction(\"Create new Body\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Body\", \"body\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n    contextActions.addSimpleAction(\"Create new Response\", [\"Add new...\"], contextActions.TARGET_RAML_EDITOR_NODE, function () { return dialogs.newNode(getMethodParent(editorTools.aquireManager().getSelectedNode()), \"Create new Response\", \"responses\", \"200\"); }, function () { return editorTools.aquireManager() && editorTools.aquireManager().getCurrentEditor() && (getMethodParent(editorTools.aquireManager().getSelectedNode()) != null); });\n}\nexports.registerQuickCommands = registerQuickCommands;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/quick-commands/code-commands.js\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar CompositeDisposable = UI.CompositeDisposable;\nvar rp = require(\"raml-1-parser\");\nvar universes = rp.universes;\nvar editorTools = require(\"./editor-tools\");\nvar ramlOutline = require(\"raml-outline\");\nvar outlineCommon = require(\"./outline-common\");\nvar RamlOutline = (function (_super) {\n    __extends(RamlOutline, _super);\n    function RamlOutline() {\n        _super.call(this);\n        this.disposables = new CompositeDisposable();\n        this.fire = true;\n        this.createTree(null);\n        this.addClass('raml-outline');\n        this.addChild(this._rs);\n    }\n    RamlOutline.prototype.createTree = function (p) {\n        var _this = this;\n        this._rs = createTree(p, function (sender) {\n            if (editorTools.aquireManager()._details && sender.selection && sender.selection.elements && _this.fire == true) {\n                if (sender.selection.elements.length > 0 && sender.selection.elements[0]) {\n                    editorTools.aquireManager().setSelectedNode(sender.selection.elements[0].getSource());\n                }\n            }\n        });\n        this._viewers = [0, 1, 2, 3].map(function (i) { return _this._rs.get(i).content; });\n    };\n    RamlOutline.prototype.getTitle = function () { return \"Outline\"; };\n    RamlOutline.prototype.getNodePType = function (node) {\n        while (node.parent() && node.parent().parent()) {\n            node = node.parent();\n        }\n        return getNodeType(node);\n    };\n    RamlOutline.prototype.setSelection = function (node) {\n        //if (this._selectedNode == node) return;\n        this._selectedNode = node;\n        this.fire = false;\n        try {\n            var index = this.getNodePType(node);\n            var viewer = this._viewers[index];\n            if (viewer != null) {\n                viewer.setSelection(node);\n                this._rs.setSelectedIndex(index);\n            }\n        }\n        finally {\n            this.fire = true;\n        }\n    };\n    RamlOutline.prototype.setUnit = function (unit, force) {\n        if (force === void 0) { force = false; }\n        this._children = [];\n        this.createTree(unit);\n        this.addClass('raml-outline');\n        this.addChild(this._rs);\n        this.html(this.innerRenderUI());\n    };\n    RamlOutline.prototype.attach = function () {\n        if (!this._isAttached) {\n            var $this = $(this);\n            $this.html(this._rs.renderUI().outerHTML);\n            this._isAttached = true;\n        }\n    };\n    RamlOutline.prototype.forEachViewer = function (command) {\n        this._viewers.forEach(command);\n    };\n    RamlOutline.prototype.refresh = function () {\n        var unit = this.unit;\n        this.setUnit(null);\n        this.setUnit(unit);\n    };\n    RamlOutline.prototype.destroy = function () {\n        editorTools.aquireManager()._view = null;\n        this._selectedNode = null;\n        this.unit = null;\n        this._viewers = [];\n        this._rs = null;\n        this._children = [];\n        this.disposables.dispose();\n    };\n    return RamlOutline;\n}(SC.Scrollable));\nexports.RamlOutline = RamlOutline;\n/*\n *\n */\n// export function treeSection(input: hl.IParseResult,\n//                             name: string,\n//                             icon: UI.Icon,\n//                             filterFunc: (x:hl.IHighLevelNode)=>boolean,\n//                             l: UI.ISelectionListener<any>,\n//                             opener: (x:hl.IParseResult)=>void=null) : UI.TreePanel<any,any> {\n//\n//     var v = UI.treeViewerSection(name,icon,input,x=>getChildren(x).filter(x=>filterFunc(<hl.IHighLevelNode> x)),new HLRenderer(opener));\n//\n//     v.viewer.setBasicLabelFunction(x=>x ? x.name() : '');\n//     v.viewer.setKeyProvider({\n//         key:(p:hl.IParseResult):string=>{\n//             return \"\"+p.lowLevel().start();\n//         }\n//\n//     });\n//     v.viewer.addSelectionListener(l)\n//     return v;\n// }\nvar HLNodeType;\n(function (HLNodeType) {\n    HLNodeType[HLNodeType[\"Resource\"] = 0] = \"Resource\";\n    HLNodeType[HLNodeType[\"Schema\"] = 1] = \"Schema\";\n    HLNodeType[HLNodeType[\"Type\"] = 2] = \"Type\";\n    HLNodeType[HLNodeType[\"Trait\"] = 3] = \"Trait\";\n    HLNodeType[HLNodeType[\"Unknown\"] = 4] = \"Unknown\";\n})(HLNodeType || (HLNodeType = {}));\nfunction getNodeType(node) {\n    if (outlineCommon.isResource(node))\n        return HLNodeType.Resource;\n    else if (outlineCommon.isOther(node))\n        return HLNodeType.Trait;\n    else if (outlineCommon.isResourceTypeOrTrait(node))\n        return HLNodeType.Type;\n    else if (outlineCommon.isSchemaOrType(node))\n        return HLNodeType.Schema;\n    else\n        return HLNodeType.Unknown;\n}\nfunction isApi(p) {\n    var pc = p.definition().key();\n    return pc === universes.Universe08.Api || pc === universes.Universe10.Api;\n}\nfunction isDocumentation(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem);\n}\nfunction fullStructurePath(model) {\n    if (!model)\n        return \"\";\n    var node = model.getSource();\n    return fullPath(node);\n}\nfunction fullPath(node) {\n    if (node == null)\n        return \"\";\n    else\n        return fullPath(node.parent()) + \"/\" + node.name();\n}\nfunction simpleTree(input, selectionListener, categoryName, opener) {\n    if (opener === void 0) { opener = null; }\n    var viewer = UI.treeViewer(function (x) {\n        return x.children;\n    }, new HLRenderer(opener), fullStructurePath);\n    viewer.setBasicLabelFunction(function (x) { return x.text; });\n    viewer.setKeyProvider({ key: function (x) { return x.key; } });\n    viewer.addSelectionListener(selectionListener);\n    viewer.getBinding().set(input);\n    return viewer;\n}\nfunction createTree(p, selectionListener, opener) {\n    if (opener === void 0) { opener = null; }\n    var subTrees = ramlOutline.getStructureForAllCategories();\n    var resourcesModel = (p != null && subTrees != null) ? subTrees[outlineCommon.ResourcesCategory] : null;\n    var typesModel = (p != null && subTrees != null) ? subTrees[outlineCommon.SchemasAndTypesCategory] : null;\n    var traitsModel = (p != null && subTrees != null) ? subTrees[outlineCommon.ResourceTypesAndTraitsCategory] : null;\n    var otherModel = (p != null && subTrees != null) ? subTrees[outlineCommon.OtherCategory] : null;\n    // var resourcesModel = p!=null?ramlOutline.getStructure(outlineCommon.ResourcesCategory):null;\n    // var typesModel = p!=null?ramlOutline.getStructure(outlineCommon.SchemasAndTypesCategory):null;\n    // var traitsModel = p!=null?ramlOutline.getStructure(outlineCommon.ResourceTypesAndTraitsCategory):null;\n    // var otherModel = p!=null?ramlOutline.getStructure(outlineCommon.OtherCategory):null;\n    var outline = resourcesModel != null ? simpleTree(resourcesModel, { selectionChanged: selectionListener }, outlineCommon.ResourcesCategory, opener) : null;\n    var schemas = typesModel != null ? simpleTree(typesModel, { selectionChanged: selectionListener }, outlineCommon.SchemasAndTypesCategory, opener) : null;\n    var types = traitsModel != null ? simpleTree(traitsModel, { selectionChanged: selectionListener }, outlineCommon.ResourceTypesAndTraitsCategory, opener) : null;\n    var other = otherModel != null ? simpleTree(otherModel, { selectionChanged: selectionListener }, outlineCommon.OtherCategory, opener) : null;\n    var folder = new UI.TabFolder();\n    folder.add(outlineCommon.ResourcesCategory, UI.Icon.SEARCH, outline, 'raml-icon-custom');\n    folder.add(outlineCommon.SchemasAndTypesCategory, UI.Icon.SEARCH, schemas, 'raml-icon-custom');\n    folder.add(outlineCommon.ResourceTypesAndTraitsCategory, UI.Icon.SEARCH, types, 'raml-icon-custom');\n    folder.add(outlineCommon.OtherCategory, UI.Icon.SEARCH, other, 'raml-icon-custom');\n    folder.setSelectedIndex(0);\n    folder.setOnSelected(function () {\n        var selectedTab = folder.selectedComponent();\n        if (selectedTab) {\n            var selection = selectedTab.getSelection();\n            if (selection && selection.elements && selection.elements.length > 0) {\n                selectionListener(new UI.SelectionChangedEvent(selectedTab, null, selection));\n            }\n            selectedTab.customizePanel(true);\n        }\n    });\n    return folder;\n}\nexports.createTree = createTree;\nvar HLRenderer = (function () {\n    function HLRenderer(opener) {\n        this.opener = opener;\n    }\n    HLRenderer.prototype.iconNameToIconEnum = function (iconName) {\n        if (!iconName)\n            return null;\n        return UI.Icon[iconName];\n    };\n    HLRenderer.prototype.textHighlightNameToTextClass = function (highlightName) {\n        if (!highlightName)\n            return null;\n        return UI.TextClasses[highlightName];\n    };\n    HLRenderer.prototype.render = function (model) {\n        try {\n            if (ramlOutline.isTypedStructureNode(model)\n                && model.type\n                && model.type == ramlOutline.NodeType.ATTRIBUTE) {\n                var attr = model.getSource();\n                //TODO check if we really need custom selection here, otherwise the whole \"is attribute\" condition is redundant\n                return UI.hc(UI.label(model.text), UI.a(\"\", function (x) {\n                    var p1 = editorTools.aquireManager().getCurrentEditor().\n                        getBuffer().positionForCharacterIndex(attr.lowLevel().start());\n                    var p2 = editorTools.aquireManager().getCurrentEditor().\n                        getBuffer().positionForCharacterIndex(attr.lowLevel().end());\n                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n            }\n            var icon = UI.Icon.DASH;\n            var highLight = UI.TextClasses.NORMAL;\n            if (this.iconNameToIconEnum(model.icon)) {\n                icon = this.iconNameToIconEnum(model.icon);\n            }\n            if (this.textHighlightNameToTextClass(model.textStyle)) {\n                highLight = this.textHighlightNameToTextClass(model.textStyle);\n            }\n            var extraText = \"\";\n            var extraClass = UI.TextClasses.NORMAL;\n            var hc = UI.hc(UI.label(model.text, icon, highLight));\n            if (model.typeText) {\n                hc.addChild(UI.label(model.typeText, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n            }\n            if (model.getSource().lowLevel().unit() != model.getSource().root().lowLevel().unit()) {\n                highLight = UI.TextClasses.SUBTLE;\n                hc.addChild(UI.label(\"(\" + model.getSource().lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n            }\n            hc.addClass(\"outline\");\n            return hc;\n        }\n        catch (e) {\n            console.log(e);\n            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n        }\n    };\n    return HLRenderer;\n}());\nexports.HLRenderer = HLRenderer;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/outline-view.js\n ** module id = 34\n ** module chunks = 0\n **/","\"use strict\";\nvar emissary = require('emissary');\nvar Subscriber = emissary.Subscriber;\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar sp = require(\"atom-space-pen-views\");\nvar $ = sp.$;\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View(options) {\n        _super.call(this);\n        this.options = options;\n        this.init();\n    }\n    Object.defineProperty(View.prototype, \"$\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    View.content = function () {\n        throw new Error('Must override the base View static content member');\n    };\n    View.prototype.init = function () { };\n    return View;\n})(sp.View);\nvar ScrollView = (function (_super) {\n    __extends(ScrollView, _super);\n    function ScrollView(options) {\n        _super.call(this);\n        this.options = options;\n        this.init();\n    }\n    Object.defineProperty(ScrollView.prototype, \"$\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScrollView.content = function () {\n        throw new Error('Must override the base View static content member');\n    };\n    ScrollView.prototype.init = function () { };\n    return ScrollView;\n})(sp.ScrollView);\nvar TooltipView = (function (_super) {\n    __extends(TooltipView, _super);\n    function TooltipView(rect) {\n        _super.call(this, rect);\n        this.rect = rect;\n        $(document.body).append(this.$);\n        this.updatePosition();\n    }\n    TooltipView.content = function () {\n        var _this = this;\n        return this.div({ class: 'atom-typescript-tooltip tooltip' }, function () {\n            _this.div({ class: 'tooltip-inner', outlet: 'inner' });\n        });\n    };\n    TooltipView.prototype.updateText = function (text) {\n        this.inner.html(text);\n        this.updatePosition();\n        this.$.fadeTo(300, 1);\n    };\n    TooltipView.prototype.updatePosition = function () {\n        var offset = 10;\n        var left = this.rect.right;\n        var top = this.rect.bottom;\n        var right = undefined;\n        if (left + this.$[0].offsetWidth >= $(document.body).width())\n            left = $(document.body).width() - this.$[0].offsetWidth - offset;\n        //this.$.css({ 'max-width': '500px'})\n        if (left < 0) {\n            this.$.css({ 'white-space': 'pre-wrap' });\n            left = offset;\n            right = offset;\n        }\n        if (top + this.$[0].offsetHeight >= $(document.body).height()) {\n            top = this.rect.top - this.$[0].offsetHeight;\n        }\n        this.$.css({ left: left, top: top });\n    };\n    return TooltipView;\n})(View);\nfunction getFromShadowDom(element, selector) {\n    var el = element[0];\n    var found = el.rootElement.querySelectorAll(selector);\n    return sp.$(found[0]);\n}\nexports.getFromShadowDom = getFromShadowDom;\nfunction getEditorPositionForBufferPosition(editor, bufferPos) {\n    var buffer = editor.getBuffer();\n    return buffer.characterIndexForPosition(bufferPos);\n}\nfunction isAllowedExtension(ext) {\n    return (ext == '.raml' || ext == '.yaml');\n}\nexports.isAllowedExtension = isAllowedExtension;\nfunction attach(editorView, editor) {\n    //console.log(\"Attach\")\n    //console.log(editorView)\n    //var rawView = editorView;\n    //var filePath = editor.getPath();\n    //var filename = path.basename(filePath);\n    //var ext = path.extname(filename);\n    //if (!isAllowedExtension(ext))\n    //    return;\n    //if (!fs.existsSync(filePath)) {\n    //    return;\n    //}\n    //var scroll = getFromShadowDom([editorView], '.scroll-view');\n    //var subscriber = new Subscriber();\n    //var exprTypeTimeout = null;\n    //var exprTypeTooltip = null;\n    //var lastExprTypeBufferPt;\n    //subscriber.subscribe(scroll, 'mousemove', function (e) {\n    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n    //    if (lastExprTypeBufferPt && lastExprTypeBufferPt.isEqual(bufferPt) && exprTypeTooltip)\n    //        return;\n    //    lastExprTypeBufferPt = bufferPt;\n    //    clearExprTypeTimeout();\n    //    exprTypeTimeout = setTimeout(function () { return showExpressionType(e); }, 1000);\n    //});\n    //subscriber.subscribe(scroll, 'mouseout', function (e) { return clearExprTypeTimeout(); });\n    //subscriber.subscribe(scroll, 'keydown', function (e) { return clearExprTypeTimeout(); });\n    //editor.onDidDestroy(function () { return deactivate(); });\n    //function showExpressionType(e) {\n    //    if (exprTypeTooltip)\n    //        return;\n    //    var pixelPt = pixelPositionFromMouseEvent(editorView, e);\n    //    pixelPt.top += editor.displayBuffer.getScrollTop();\n    //    pixelPt.left += editor.displayBuffer.getScrollLeft();\n    //    var screenPt = editor.screenPositionForPixelPosition(pixelPt);\n    //    var bufferPt = editor.bufferPositionForScreenPosition(screenPt);\n    //    var curCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column]);\n    //    var nextCharPixelPt = rawView.pixelPositionForBufferPosition([bufferPt.row, bufferPt.column + 1]);\n    //    if (curCharPixelPt.left >= nextCharPixelPt.left)\n    //        return;\n    //    var offset = editor.getLineHeightInPixels() * 0.7;\n    //    var tooltipRect = {\n    //        left: e.clientX,\n    //        right: e.clientX,\n    //        top: e.clientY - offset,\n    //        bottom: e.clientY + offset\n    //    };\n    //    exprTypeTooltip = new TooltipView(tooltipRect);\n    //    // var position = getEditorPositionForBufferPosition(editor, bufferPt);\n    //    var node=provider.getAstNode({\n    //        editor:editor,\n    //        bufferPosition:bufferPt\n    //    },false);\n    //    if (node) {\n    //        var hl=<hl.IHighLevelNode>node;\n    //        var pos=getEditorPositionForBufferPosition(editor,bufferPt);\n    //        var doc=docHelper.getDocumentation(hl,pos);\n    //        if (doc){\n    //            exprTypeTooltip.updateText(doc);\n    //        }\n    //    }\n    //\n    //}\n    //function deactivate() {\n    //    subscriber.unsubscribe();\n    //    clearExprTypeTimeout();\n    //}\n    //function clearExprTypeTimeout() {\n    //    if (exprTypeTimeout) {\n    //        clearTimeout(exprTypeTimeout);\n    //        exprTypeTimeout = null;\n    //    }\n    //    hideExpressionType();\n    //}\n    //function hideExpressionType() {\n    //    if (!exprTypeTooltip)\n    //        return;\n    //    exprTypeTooltip.$.remove();\n    //    exprTypeTooltip = null;\n    //}\n}\nexports.attach = attach;\nfunction pixelPositionFromMouseEvent(editorView, event) {\n    var clientX = event.clientX, clientY = event.clientY;\n    var linesClientRect = getFromShadowDom([editorView], '.lines')[0].getBoundingClientRect();\n    var top = clientY - linesClientRect.top;\n    var left = clientX - linesClientRect.left;\n    return { top: top, left: left };\n}\nfunction screenPositionFromMouseEvent(editorView, event) {\n    return editorView.getModel().screenPositionForPixelPosition(pixelPositionFromMouseEvent(editorView, event));\n}\nexports.screenPositionFromMouseEvent = screenPositionFromMouseEvent;\nfunction screenPositionFromMouse(editor, event) {\n    var editorView = sp.$(atom.views)[0].getView(editor);\n    var pos = pixelPositionFromMouseEvent(editorView, event);\n    pos.top -= editor.displayBuffer.getScrollTop();\n    pos.left -= editor.displayBuffer.getScrollLeft();\n    var clientRect = editorView.getBoundingClientRect();\n    pos.top += clientRect.top;\n    pos.left += clientRect.left;\n    return pos;\n}\nexports.screenPositionFromMouse = screenPositionFromMouse;\n//export function turnOn()\n//{\n//    (<any>atom.workspace).observeTextEditors(editor=> {\n//        var editorView = (<any>sp.$((<any>atom).views))[0].getView(editor);\n//        attach(editorView, editor);\n//    });\n//}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/tooltip-manager.js\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar commandManager = require(\"../quick-commands/command-manager\");\nvar contextActions = require(\"raml-actions\");\nfunction initializeActionSupport() {\n    contextActions.intializeStandardActions();\n    contextActions.initializeActionBasedMenu('atom-text-editor[data-grammar=\"source raml\"],.raml-outline');\n    var editorCommandContributor = {\n        id: \"editorContextActionContributor\",\n        calculateItems: function () {\n            var currentActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n            if (!currentActions)\n                return [];\n            var result = [];\n            currentActions.forEach(function (action) {\n                result.push({\n                    selector: 'atom-text-editor[data-grammar=\"source raml\"],.raml-outline',\n                    id: action.label ? action.label : action.name,\n                    callBack: action.onClick\n                });\n            });\n            return result;\n        }\n    };\n    commandManager.registerContributor(editorCommandContributor);\n}\nfunction initialize(editorProvider, astProvider, astModifier) {\n    contextActions.setEditorProvider(editorProvider);\n    contextActions.setASTProvider(astProvider);\n    contextActions.setASTModifier(astModifier);\n    initializeActionSupport();\n}\nexports.initialize = initialize;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/context-menu/commonContextActions.js\n ** module id = 36\n ** module chunks = 0\n **/","\"use strict\";\nvar ramlOutline = require(\"raml-outline\");\nvar rp = require(\"raml-1-parser\");\nvar universes = rp.universes;\nvar outlineCommon = require(\"./outline-common\");\nvar UI = require(\"atom-ui-lib\");\nfunction initialize(editorProvider, astProvider) {\n    ramlOutline.setASTProvider(astProvider);\n    ramlOutline.initialize();\n    ramlOutline.setKeyProvider(outlineCommon.keyProvider);\n    createCategories();\n    createDecorations();\n}\nexports.initialize = initialize;\nfunction createCategories() {\n    ramlOutline.addCategoryFilter(outlineCommon.ResourcesCategory, outlineCommon.isResource);\n    ramlOutline.addCategoryFilter(outlineCommon.SchemasAndTypesCategory, outlineCommon.isSchemaOrType);\n    ramlOutline.addCategoryFilter(outlineCommon.ResourceTypesAndTraitsCategory, outlineCommon.isResourceTypeOrTrait);\n    ramlOutline.addCategoryFilter(outlineCommon.OtherCategory, outlineCommon.isOther);\n}\nfunction createDecorations() {\n    ramlOutline.addDecoration(ramlOutline.NodeType.ATTRIBUTE, {\n        icon: UI.Icon[UI.Icon.ARROW_SMALL_LEFT],\n        textStyle: UI.TextClasses[UI.TextClasses.NORMAL]\n    });\n    ramlOutline.addDecoration(ramlOutline.NodeType.RESOURCE, {\n        icon: UI.Icon[UI.Icon.PRIMITIVE_SQUARE],\n        textStyle: UI.TextClasses[UI.TextClasses.HIGHLIGHT]\n    });\n    ramlOutline.addDecoration(ramlOutline.NodeType.METHOD, {\n        icon: UI.Icon[UI.Icon.PRIMITIVE_DOT],\n        textStyle: UI.TextClasses[UI.TextClasses.WARNING]\n    });\n    ramlOutline.addDecoration(ramlOutline.NodeType.SECURITY_SCHEME, {\n        icon: UI.Icon[UI.Icon.FILE_SUBMODULE],\n        textStyle: UI.TextClasses[UI.TextClasses.NORMAL]\n    });\n    ramlOutline.addDecoration(ramlOutline.NodeType.ANNOTATION_DECLARATION, {\n        icon: UI.Icon[UI.Icon.TAG],\n        textStyle: UI.TextClasses[UI.TextClasses.HIGHLIGHT]\n    });\n    ramlOutline.addDecoration(ramlOutline.NodeType.TYPE_DECLARATION, {\n        icon: UI.Icon[UI.Icon.FILE_BINARY],\n        textStyle: UI.TextClasses[UI.TextClasses.SUCCESS]\n    });\n    ramlOutline.addDecoration(ramlOutline.NodeType.DOCUMENTATION_ITEM, {\n        icon: UI.Icon[UI.Icon.BOOK],\n        textStyle: UI.TextClasses[UI.TextClasses.NORMAL]\n    });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/outline-initializer.js\n ** module id = 37\n ** module chunks = 0\n **/","\"use strict\";\n/**\n * Returns whether the current text matches RAML unit.\n * @param contents\n * @returns {RegExpMatchArray}\n */\nfunction isRAMLUnit(contents) {\n    return contents.match(/^\\s*#%RAML\\s+(\\d\\.\\d)\\s*(\\w*)\\s*$/m);\n}\nexports.isRAMLUnit = isRAMLUnit;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/util/unit.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * Created by kor on 24/07/15.\n */\n/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar path = require('path');\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar rp = require(\"raml-1-parser\");\nvar project = rp.project;\nfunction ast(editor) {\n    var man = editorTools.aquireManager();\n    if (editorTools.aquireManager()) {\n        if (man.getCurrentEditor() == editor) {\n            return man.ast;\n        }\n    }\n    var p = editor.getPath();\n    var prj = project.createProject(path.dirname(p));\n    var unit = prj.unit(path.basename(p));\n    var text = editor.getBuffer().getText();\n    if (!unit) {\n        return null;\n    }\n    unit.updateContent(text);\n    var ast = unit.highLevel();\n    return ast;\n}\nexports.ast = ast;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/core/editorManager.js\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar path = require('path');\nvar rp = require(\"raml-1-parser\");\nvar stubs = rp.stubs;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar def = rp.ds;\nvar assist = require(\"./assist-utils\");\nvar yaml = require(\"yaml-ast-parser\");\nvar universeHelpers = rp.universeHelpers;\nvar universeModule = rp.universes;\nvar search = rp.search;\nvar universes = rp.universes;\nvar util = require(\"../../util/index\");\nvar ExtractTypesAndTraitsDialog = (function () {\n    function ExtractTypesAndTraitsDialog(node, name, _resourceType) {\n        this.node = node;\n        this.name = name;\n        this._resourceType = _resourceType;\n        this.filters = new NodeFilters();\n    }\n    ExtractTypesAndTraitsDialog.prototype.getActiveEditor = function () {\n        return assist.getActiveEditor();\n    };\n    ExtractTypesAndTraitsDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Extract \" + this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        vc.addChild(UI.label(\"Extracted element name:\").pad(5, 0));\n        var errorLabel = UI.label(\"Please type valid name for \" + this.name, UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        var tf = UI.texfField(\"\", \"\", function (x) {\n            if (!okButton) {\n                return;\n            }\n            var isErr = tf.getBinding().get().trim().length == 0;\n            okButton.setDisabled(isErr);\n            errorLabel.setDisplay(isErr);\n            stub.attr(\"name\").setValue(tf.getBinding().get());\n        });\n        vc.addChild(tf);\n        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n        var el = UI.hc();\n        vc.setPercentWidth(100);\n        el.setPercentWidth(100);\n        var filterFunc = function (x) {\n            if (_this._resourceType) {\n                if (universeHelpers.isResourceType(x.definition())) {\n                    return false;\n                }\n            }\n            if (_.find(_this.filters.removals, function (y) { return x == y; })) {\n                return false;\n            }\n            return true;\n        };\n        var stub = this.createNodeStub(node);\n        var v = createSmallSelectionPanel(node, filterFunc, \"400px\", \"47%\");\n        var v1 = createSmallSelectionPanel(stub, function (x) { return true; }, \"400px\", \"47%\", \"right\");\n        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = v.getSelection().elements;\n            _this.moveRight(z, stub, node, v, v1);\n        });\n        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = v1.getSelection().elements;\n            _this.moveLeft(z, stub, node, v, v1);\n        });\n        var allRight = UI.button(\">>\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = node.elements().filter(function (x) { return filterFunc(x); });\n            _this.moveRight(z, stub, node, v, v1);\n        });\n        var allLeft = UI.button(\"<<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = stub.elements();\n            _this.moveLeft(z, stub, node, v, v1);\n        });\n        el.addChild(UI.vc(moveRight, moveLeft, allRight, allLeft));\n        el.addChild(v);\n        el.addChild(v1);\n        vc.addChild(el);\n        v.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                var m = (_.find(rs, function (x) { return x.parent() != node; }) != undefined);\n                moveRight.setDisabled(m || (rs.length == 0));\n            }\n        });\n        v1.addSelectionListener({\n            selectionChanged: function (ev) {\n                var nodesToMove = ev.selection.elements;\n                var unregisteredNode = _.find(nodesToMove, function (nodeToMove) {\n                    var registeredNode = _.find(_this.filters.removals, function (movedNode) { return nodeToMove.id() == movedNode.id(); });\n                    return registeredNode == undefined;\n                }) != undefined;\n                //var m=(_.find(rs, x=>x.parent() != stub)!=undefined )\n                moveLeft.setDisabled(unregisteredNode || (nodesToMove.length == 0));\n            }\n        });\n        moveLeft.setDisabled(true);\n        moveRight.setDisabled(true);\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.apply(node, stub, tf.getBinding().get());\n            //this.onOk(zz);\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    ExtractTypesAndTraitsDialog.prototype.apply = function (node, stub, newTypeName) {\n        this.filters.removals.forEach(function (x) { return node.remove(x); });\n        var stub2 = this.createNodeStub(node);\n        stub.elements().forEach(function (child) { return stub2.add(child); });\n        stub2.attr(\"name\").setValue(newTypeName);\n        var typeOrTraitValueToReplace = \"_________TEMPORARY_TYPE_OR_TRAIT_VALUE_________\";\n        var replacements = [];\n        var superAttributeName = this._resourceType ?\n            universeModule.Universe10.ResourceType.properties.type.name :\n            universeModule.Universe10.Trait.properties.is.name;\n        var superAttributes = node.attributes(superAttributeName);\n        var superAttrProperty = stub2.definition().property(superAttributeName);\n        if (superAttributes && superAttributes.length > 0) {\n            for (var i = 0; i < superAttributes.length; i++) {\n                var superAttribute = superAttributes[i];\n                var superAttributeLL = superAttribute.lowLevel();\n                var start = superAttributeLL.valueStart();\n                var end = superAttributeLL.valueEnd();\n                if (start <= 0) {\n                    start = superAttributeLL.start();\n                    end = superAttributeLL.end();\n                }\n                var typeOrTraitValueToReplaceWith = superAttributeLL.unit().contents().substr(start, end - start);\n                replacements.push(typeOrTraitValueToReplaceWith);\n            }\n            for (var i = 0; i < superAttributes.length; i++) {\n                var superAttribute = superAttributes[i];\n                node.remove(superAttribute);\n            }\n            var stubAttributeValue = typeOrTraitValueToReplace;\n            if (superAttributes.length > 1) {\n                stubAttributeValue = \"[\" + stubAttributeValue + \"]\";\n            }\n            var stubSuperAttribute = stubs.createAttr(superAttrProperty, stubAttributeValue);\n            stub2.add(stubSuperAttribute);\n            node.resetChildren();\n            stub2.resetChildren();\n        }\n        if (this._resourceType) {\n            node.add(stubs.createAttr(node.definition().property(superAttributeName), stub.name()));\n        }\n        else {\n            node.add(stubs.createAttr(node.definition().property(superAttributeName), \"[\" + stub.name() + \"]\"));\n        }\n        node.root().add(stub2);\n        var cl = node.lowLevel().unit().contents();\n        if (replacements.length == 1) {\n            var totalRepalcement = replacements[0];\n            if (superAttrProperty.isMultiValue()) {\n                totalRepalcement = \"[\" + totalRepalcement + \"]\";\n            }\n            cl = cl.replace(typeOrTraitValueToReplace, totalRepalcement);\n        }\n        else if (replacements.length > 1) {\n            var totalReplacement = \"\";\n            for (var i = 0; i < replacements.length - 1; i++) {\n                totalReplacement += replacements[i] + \", \";\n            }\n            totalReplacement += replacements[replacements.length - 1];\n            cl = cl.replace(typeOrTraitValueToReplace, totalReplacement);\n        }\n        this.getActiveEditor().setText(assist.cleanEmptyLines(cl));\n    };\n    ExtractTypesAndTraitsDialog.prototype.createNodeStub = function (node) {\n        var universe = node.definition().universe();\n        var rtypes = node.root().definition().property(\"resourceTypes\");\n        var traits = node.root().definition().property(\"traits\");\n        var stub = stubs.createStubNode(universe.type(\"ResourceType\"), rtypes);\n        if (!this._resourceType) {\n            stub = stubs.createStubNode(universe.type(\"Trait\"), traits);\n        }\n        return stub;\n    };\n    ExtractTypesAndTraitsDialog.prototype.moveLeft = function (z, stub, node, v, v1) {\n        var _this = this;\n        if (z.length > 0) {\n            z.forEach(function (x) { return _this.filters.removals = _this.filters.removals.filter(function (y) { return y.id() != x.id(); }); });\n            z.forEach(function (x) {\n                stub.remove(x);\n                var k = 0;\n                k++;\n            });\n        }\n        stub.resetChildren();\n        v.setInput(node);\n        v1.setInput(stub);\n    };\n    ExtractTypesAndTraitsDialog.prototype.moveRight = function (z, stub, node, v, v1) {\n        if (z.length > 0) {\n            this.filters.removals = this.filters.removals.concat(z);\n        }\n        z.forEach(function (x) { return stub.add(x.copy()); });\n        stub.resetChildren();\n        v.setInput(node);\n        v1.setInput(stub);\n    };\n    return ExtractTypesAndTraitsDialog;\n}());\nexports.ExtractTypesAndTraitsDialog = ExtractTypesAndTraitsDialog;\nvar NodeFilters = (function () {\n    function NodeFilters() {\n        this.removals = [];\n    }\n    return NodeFilters;\n}());\nfunction createSmallSelectionPanel(node, filter, height, width, float) {\n    if (float === void 0) { float = \"left\"; }\n    var v = createVIewer(node, filter);\n    v.setTagName(\"atom-panel\");\n    v.setStyle(\"width\", width);\n    v.setStyle(\"border\", \"solid\");\n    v.setStyle(\"border-width\", \"1px\");\n    v.setStyle(\"height\", height);\n    v.setStyle(\"overflow\", \"scroll\");\n    if (float) {\n        v.setStyle(\"float\", float);\n    }\n    v.margin(3, 3, 3, 3);\n    return v;\n}\nexports.createSmallSelectionPanel = createSmallSelectionPanel;\nvar HLRenderer = (function () {\n    function HLRenderer(opener) {\n        this.opener = opener;\n    }\n    HLRenderer.prototype.render = function (model) {\n        try {\n            if (model.isAttr()) {\n                var attr = model;\n                return UI.hc(UI.label(attr.name() + \":\" + attr.value()), UI.a(\"\", function (x) {\n                    var p1 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().start());\n                    var p2 = editorTools.aquireManager().getCurrentEditor().getBuffer().positionForCharacterIndex(model.lowLevel().end());\n                    editorTools.aquireManager().getCurrentEditor().setSelectedBufferRange({ start: p1, end: p1 }, {});\n                }, UI.Icon.ARROW_SMALL_LEFT, null, null));\n            }\n            if (model.isUnknown()) {\n                return UI.label(\"unknown\");\n            }\n            var icon = UI.Icon.DASH;\n            var highLight = UI.TextClasses.NORMAL;\n            var node = model;\n            var pc = node.definition().key();\n            if (pc === universes.Universe08.Resource || pc === universes.Universe10.Resource) {\n                icon = UI.Icon.PRIMITIVE_SQUARE;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (pc === universes.Universe08.Method || pc === universes.Universe10.Method) {\n                icon = UI.Icon.PRIMITIVE_DOT;\n                highLight = UI.TextClasses.WARNING;\n            }\n            if (pc === universes.Universe08.AbstractSecurityScheme || pc === universes.Universe10.AbstractSecurityScheme) {\n                icon = UI.Icon.LOCK;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (pc === universes.Universe08.AbstractSecurityScheme || pc == universes.Universe10.AbstractSecurityScheme) {\n                icon = UI.Icon.FILE_SUBMODULE;\n                highLight = UI.TextClasses.NORMAL;\n            }\n            if (pc == universes.Universe10.TypeDeclaration && universeHelpers.isAnnotationTypesProperty(node.property())) {\n                icon = UI.Icon.TAG;\n                highLight = UI.TextClasses.HIGHLIGHT;\n            }\n            if (node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name) ||\n                node.definition().isAssignableFrom(universes.Universe08.Parameter.name)) {\n                if (node.property() && node.property().nameId() == universes.Universe10.ObjectTypeDeclaration.properties.properties.name) {\n                    icon = UI.Icon.FILE_BINARY;\n                    highLight = UI.TextClasses.SUCCESS;\n                }\n                else {\n                    icon = UI.Icon.FILE_BINARY;\n                    highLight = UI.TextClasses.SUCCESS;\n                }\n            }\n            var nm = model.name();\n            var hnode = model;\n            if (pc === universes.Universe08.DocumentationItem || pc === universes.Universe10.DocumentationItem) {\n                icon = UI.Icon.BOOK;\n                var a = hnode.attr(\"title\");\n                if (a) {\n                    nm = a.value();\n                }\n            }\n            var extraText = \"\";\n            var extraClass = UI.TextClasses.NORMAL;\n            var hc = UI.hc(UI.label(nm, icon, highLight));\n            var tp = node.attr(\"type\");\n            if (tp) {\n                var vl = tp.value();\n                if (vl == null) {\n                    vl = \"\";\n                }\n                var sv = \"\";\n                if (typeof vl === \"object\") {\n                    sv = \":\" + vl.valueName();\n                }\n                else {\n                    sv = \":\" + vl;\n                }\n                hc.addChild(UI.label(sv, UI.Icon.NONE, UI.TextClasses.WARNING).margin(2, 0, 0, 0));\n            }\n            if (node.lowLevel().unit() != node.root().lowLevel().unit()) {\n                highLight = UI.TextClasses.SUBTLE;\n                hc.addChild(UI.label(\"(\" + node.lowLevel().unit().path() + \")\", UI.Icon.NONE, highLight).margin(5, 0, 0, 0));\n            }\n            hc.addClass(\"outline\");\n            return hc;\n        }\n        catch (e) {\n            console.log(e);\n            return UI.hc(UI.label(\"Illegal node\", UI.Icon.ARROW_SMALL_LEFT, null, null));\n        }\n    };\n    return HLRenderer;\n}());\nexports.HLRenderer = HLRenderer;\nfunction createVIewer(h, filter) {\n    var v = UI.treeViewer(function (x) {\n        return x.elements().filter(function (x) { return filter(x); });\n    }, new HLRenderer(function (model) {\n    }));\n    v.setInput(h);\n    return v;\n}\nexports.createVIewer = createVIewer;\nvar AbstractlMoveElementsDialog = (function () {\n    function AbstractlMoveElementsDialog(parentNode, name) {\n        this.parentNode = parentNode;\n        this.name = name;\n        /**\n         * A list of moved nodes.\n         */\n        this.movedNodes = [];\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    AbstractlMoveElementsDialog.prototype.checkNode = function (nodeToFilter) {\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractlMoveElementsDialog.prototype.validate = function () {\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    AbstractlMoveElementsDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    AbstractlMoveElementsDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n    };\n    /**\n     * Call this to display the dialog.\n     */\n    AbstractlMoveElementsDialog.prototype.show = function () {\n        console.log(\"Original file tree:\");\n        if (this.getParentNode())\n            console.log(this.getParentNode().printDetails());\n        if (!this.getParentNode()) {\n            return;\n        }\n        var extractSection = UI.section(this.name + \":\", UI.Icon.GIST_NEW, false, false);\n        this.stubRoot = this.createStub(this.getParentNode());\n        this.createValidationIndicator(extractSection);\n        this.createHeader(extractSection);\n        this.createPanels(extractSection);\n        this.createButtonBar(extractSection);\n        extractSection.setPercentWidth(100);\n        var html = extractSection.renderUI();\n        this.rootAtomPanel = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n        this.performValidation();\n    };\n    AbstractlMoveElementsDialog.prototype.performValidation = function () {\n        var validationMessage = this.validate();\n        if (this.okButton) {\n            if (validationMessage)\n                this.okButton.setDisabled(true);\n            else\n                this.okButton.setDisabled(false);\n        }\n        if (this.errorLabel) {\n            if (validationMessage) {\n                this.errorLabel.setDisplay(true);\n                this.errorLabel.setText(validationMessage);\n            }\n            else {\n                this.errorLabel.setDisplay(false);\n                this.errorLabel.setText(\"\");\n            }\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.createValidationIndicator = function (vc) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(this.errorLabel));\n    };\n    AbstractlMoveElementsDialog.prototype.getNodeId = function (node) {\n        if (node.parent()) {\n            var parentId = this.getNodeId(node.parent());\n            parentId += \".\" + node.name();\n            var sameName = (node.parent()).asElement().directChildren().filter(function (x) { return x.name() == node.name(); });\n            if (sameName.length > 1) {\n                var ind = sameName.indexOf(node);\n                parentId += \"[\" + ind + \"]\";\n            }\n            return parentId;\n        }\n        else if (node.name()) {\n            if (node.definition && node.definition() && universeHelpers.isApiType(node.definition())) {\n                //no other way to get rid of a fake Api \"key\"\n                return \"\";\n            }\n            return \".\" + node.name();\n        }\n        return \"\";\n    };\n    AbstractlMoveElementsDialog.prototype.nodesEqualById = function (node1, node2) {\n        return this.getNodeId(node1) == this.getNodeId(node2);\n    };\n    /**\n     * The root of the tree, which is being dynamically build from the moved nodes.\n     * The parents of the moved nodes are being copied to the tree, so the temp AST\n     * is complete. The root itself is always a stub (not copy) of the root node provided at the dialog open.\n     */\n    AbstractlMoveElementsDialog.prototype.createMovedNodesTree = function () {\n        //cleaning the current tree by removing all the children of the root\n        //this.stubRoot.children().forEach(x=>(<any>this.stubRoot).remove(x))\n        var _this = this;\n        //instead just re-creating parent stub node\n        this.stubRoot = this.createStub(this.getParentNode());\n        this.movedNodes.forEach(function (movedNode) {\n            //collecting node parents till we meet the dialog root\n            var parents = [];\n            var currentParent = movedNode.parent();\n            while (currentParent) {\n                if (currentParent == _this.getParentNode())\n                    break;\n                parents.push(currentParent);\n                currentParent = currentParent.parent();\n            }\n            parents.reverse();\n            //now creating copies of parents\n            var currentStubPointer = _this.stubRoot;\n            parents.forEach(function (currentParent) {\n                var stubAnalogueOfParent = _.find(currentStubPointer.children(), function (currentStubElement) {\n                    return _this.nodesEqualById(currentStubElement, currentParent);\n                });\n                if (!stubAnalogueOfParent) {\n                    //we did not find an analogue, so we should create one\n                    stubAnalogueOfParent = _this.createStub(currentParent);\n                    //lets add the new parent to the stub hierarchy\n                    currentStubPointer.add(stubAnalogueOfParent);\n                    stubAnalogueOfParent.setParent(currentStubPointer);\n                }\n                currentStubPointer = stubAnalogueOfParent;\n            });\n            //okay, we found or created all parents of the new moved node, lets create the node itself\n            var newNode = _this.createMovedNode(movedNode);\n            /*(<hl.IHighLevelNode>movedNode)*/\n            currentStubPointer.add(newNode);\n            newNode.setParent(currentStubPointer);\n        });\n        console.log(\"New tree moved:\");\n        console.log(this.stubRoot.printDetails());\n    };\n    AbstractlMoveElementsDialog.prototype.createMovedNode = function (originalNode) {\n        return originalNode.copy();\n    };\n    AbstractlMoveElementsDialog.prototype.saveUnit = function (unit) {\n        provider.saveUnit(unit);\n    };\n    AbstractlMoveElementsDialog.prototype.createStub = function (node) {\n        var stub = stubs.createStubNode(node.definition(), node.property(), node.lowLevel().key());\n        //if (node.parent() == null && node.lowLevel().key() == null){\n        //    //cleaning out the fake key\n        //    stub.children().forEach(x=>(<any>stub).remove(x))\n        //}\n        return stub;\n    };\n    AbstractlMoveElementsDialog.prototype.createStubRoot = function (node, type) {\n        var lowLevel = stubs.createMap();\n        var result = stubs.createASTNodeImpl(lowLevel, null, type, null);\n        result.children();\n        return result;\n    };\n    AbstractlMoveElementsDialog.prototype.createPanels = function (vc) {\n        var _this = this;\n        var el = UI.hc();\n        vc.addChild(UI.label(\"Move elements which should be extracted to the right panel\"));\n        var leftDisplayFilter = function (nodeToCheck) {\n            if (!_this.checkNode(nodeToCheck).display)\n                return false;\n            if (_.find(_this.movedNodes, function (movedNode) {\n                return movedNode == nodeToCheck; /*|| this.isParentOf(nodeToCheck, movedNode)*/\n            }))\n                return false;\n            return true;\n        };\n        this.leftPanel = createSmallSelectionPanel(this.getParentNode(), leftDisplayFilter, \"400px\", \"47%\");\n        var rightDisplayFilter = function (nodeToCheck) {\n            if (!_this.checkNode(nodeToCheck).display)\n                return false;\n            //if (_.find(this.movedNodes, movedNode => movedNode == nodeToCheck)) return false\n            return true;\n        };\n        this.rightPanel = createSmallSelectionPanel(this.stubRoot, rightDisplayFilter, \"400px\", \"47%\", \"right\");\n        var moveRight = UI.button(\">\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = _this.leftPanel.getSelection().elements;\n            _this.moveRight(z);\n        });\n        var moveLeft = UI.button(\"<\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) {\n            var z = _this.rightPanel.getSelection().elements;\n            _this.moveLeft(z);\n        });\n        //var allRight=UI.button(\">>\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n        //    var z=this.parentNode.elements().filter(x=>leftFilter(x));\n        //    this.moveRight(z);\n        //});\n        //\n        //var allLeft=UI.button(\"<<\",UI.ButtonSizes.NORMAL,UI.ButtonHighlights.NO_HIGHLIGHT,UI.Icon.NONE,x=>{\n        //    var z=stub.elements();\n        //    this.moveLeft(z);\n        //\n        //});\n        el.addChild(UI.vc(moveRight, moveLeft /*,allRight,allLeft*/));\n        el.addChild(this.leftPanel);\n        el.addChild(this.rightPanel);\n        vc.addChild(el);\n        this.leftPanel.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                //var m=(_.find(rs, x=>x.parent() != this.getParentNode())!=undefined )\n                moveRight.setDisabled((rs.length == 0));\n            }\n        });\n        this.rightPanel.addSelectionListener({\n            selectionChanged: function (ev) {\n                var rs = ev.selection.elements;\n                //var m=(_.find(rs, x=>x.parent() != this.stubRoot)!=undefined )\n                moveLeft.setDisabled(rs.length == 0);\n            }\n        });\n        moveLeft.setDisabled(true);\n        moveRight.setDisabled(true);\n        el.setPercentWidth(100);\n    };\n    AbstractlMoveElementsDialog.prototype.createButtonBar = function (parentPanel) {\n        var _this = this;\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { _this.rootAtomPanel.destroy(); }).margin(10, 10));\n        this.okButton = UI.button(\"Extract\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            _this.performOk(_this.movedNodes, _this.stubRoot);\n            _this.rootAtomPanel.destroy();\n        });\n        this.okButton.setDisabled(true);\n        buttonBar.addChild(this.okButton);\n        parentPanel.addChild(buttonBar);\n    };\n    AbstractlMoveElementsDialog.prototype.getParentNode = function () {\n        return this.parentNode;\n    };\n    AbstractlMoveElementsDialog.prototype.isParentOf = function (potentialParent, potentialChild) {\n        var current = potentialChild.parent();\n        while (current != null) {\n            if (current == potentialParent || this.nodesEqualById(current, potentialParent)) {\n                return true;\n            }\n            current = current.parent();\n        }\n        return false;\n    };\n    AbstractlMoveElementsDialog.prototype.mergeTrees = function (sourceTreeRoot, targetTreeRoot, mergeProperties) {\n        var _this = this;\n        if (mergeProperties === void 0) { mergeProperties = false; }\n        if (sourceTreeRoot.directChildren()) {\n            sourceTreeRoot.directChildren().forEach(function (child) {\n                _this.mergeNode(child, targetTreeRoot);\n            });\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.getActiveEditor = function () {\n        return assist.getActiveEditor();\n    };\n    AbstractlMoveElementsDialog.prototype.mergeNode = function (sourceNode, targetParent, mergeProperties) {\n        var _this = this;\n        if (mergeProperties === void 0) { mergeProperties = false; }\n        if (!mergeProperties && !(sourceNode.isElement())) {\n            return;\n        }\n        var targetChildren = targetParent.directChildren();\n        if (!targetChildren) {\n            targetParent.add(sourceNode);\n            sourceNode.setParent(targetParent);\n            return;\n        }\n        var analogueChild = _.find(targetChildren, function (child) {\n            return _this.nodesEqualById(child, sourceNode);\n        });\n        if (!analogueChild) {\n            targetParent.add(sourceNode);\n            sourceNode.setParent(targetParent);\n            return;\n        }\n        if (sourceNode.directChildren()) {\n            sourceNode.directChildren().forEach(function (sourceChild) {\n                return _this.mergeNode(sourceChild, analogueChild);\n            });\n        }\n    };\n    AbstractlMoveElementsDialog.prototype.moveLeft = function (nodesToMove) {\n        var _this = this;\n        if (nodesToMove.length > 0) {\n            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n                if (_.find(nodesToMove, function (nodeToMove) {\n                    //removing the node itself and all of its children subsequently\n                    return _this.nodesEqualById(nodeToMove, currentNode)\n                        || _this.isParentOf(nodeToMove, currentNode);\n                }))\n                    return false;\n                return true;\n            });\n            this.createMovedNodesTree();\n        }\n        this.leftPanel.setInput(this.getParentNode());\n        this.stubRoot.resetChildren();\n        this.rightPanel.setInput(this.stubRoot);\n        this.performValidation();\n    };\n    AbstractlMoveElementsDialog.prototype.moveRight = function (nodesToMove) {\n        var _this = this;\n        if (nodesToMove.length > 0) {\n            //removing from already moved nodes any children of the nodes to move\n            this.movedNodes = this.movedNodes.filter(function (currentNode) {\n                if (_.find(nodesToMove, function (nodeToMove) { return _this.isParentOf(nodeToMove, currentNode); }))\n                    return false;\n                return true;\n            });\n            nodesToMove.forEach(function (x) { return _this.movedNodes.push(x); });\n            //this.movedNodes = this.movedNodes.concat(nodesToMove)\n            this.createMovedNodesTree();\n        }\n        this.leftPanel.setInput(this.getParentNode());\n        this.stubRoot.resetChildren();\n        this.rightPanel.setInput(this.stubRoot);\n        this.performValidation();\n    };\n    return AbstractlMoveElementsDialog;\n}());\nexports.AbstractlMoveElementsDialog = AbstractlMoveElementsDialog;\nvar ExtractLibraryDialog = (function (_super) {\n    __extends(ExtractLibraryDialog, _super);\n    function ExtractLibraryDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ExtractLibraryDialog.prototype.checkNode = function (nodeToFilter) {\n        var range = null;\n        if (nodeToFilter.property() && nodeToFilter.property().range()) {\n            range = nodeToFilter.property().range();\n        }\n        var prrr = nodeToFilter.property();\n        var blah = universeHelpers.isTypesProperty(prrr);\n        var isTp = universeHelpers.isTypeDeclarationType(range)\n            && blah;\n        if (range &&\n            (universeHelpers.isResourceTypeType(range) ||\n                universeHelpers.isTraitType(range) ||\n                universeHelpers.isGlobalSchemaType(range) ||\n                universeHelpers.isSecuritySchemaType(range) ||\n                isTp)) {\n            return {\n                visitChildren: false,\n                display: true,\n                canBeMoved: true\n            };\n        }\n        return {\n            visitChildren: false,\n            display: false,\n            canBeMoved: false\n        };\n    };\n    ExtractLibraryDialog.prototype.createStub = function (node) {\n        if (node.definition().key() == universeModule.Universe10.Api ||\n            node.definition().key() == universeModule.Universe08.Api) {\n            var universe = rp.ds.getUniverse(\"RAML10\");\n            var nodeClass = universe.type(universeModule.Universe10.Library.name);\n            var stub = this.createStubRoot(node, nodeClass);\n            return stub;\n        }\n        return _super.prototype.createStub.call(this, node);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractLibraryDialog.prototype.validate = function () {\n        if (!this.libraryPath)\n            return null;\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        if (!this.libraryNamespace)\n            return null;\n        if (!this.getLibraryQualifier()) {\n            return \"Enter library namespace\";\n        }\n        if (this.getLibraryQualifier().trim().length == 0) {\n            return \"Enter library namespace\";\n        }\n        var originalValue = this.libraryPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return \"Empty library path\";\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return \"Library path should be a RAML file\";\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return \"Library path directory does not exist\";\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return \"Library path parent is not a directory\";\n        }\n        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n        if (fs.existsSync(absolutePath)) {\n            return \"Destination library already exists\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractLibraryDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Library namespace:\").pad(5, 0));\n        this.libraryNamespace = UI.texfField(\"\", this.getDefaultLibraryNamespace(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.libraryNamespace);\n        parentPanel.addChild(UI.label(\"Library path:\").pad(5, 0));\n        this.libraryPath = UI.texfField(\"\", this.generateDefaultLibraryPath(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.libraryPath);\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ExtractLibraryDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var _this = this;\n        var project = this.createProject();\n        var libraryUnit = this.createLibraryUnit(project);\n        var libraries = search.globalDeclarations(this.getParentNode()).filter(function (found) { return found && found.definition && found.definition().nameId() === universeModule.Universe10.Library.name; });\n        var universe = this.getParentNode().definition().universe();\n        var libraryClass = universe.type(universeModule.Universe10.Library.name);\n        movedNodes.forEach(function (movedNode) {\n            var librariesToExport = libraries.filter(function (library) {\n                return _.find(library.findReferences(), function (reference) { return _this.isParentOf(movedNode, reference); }) ? true : false;\n            });\n            librariesToExport.forEach(function (library) {\n                var currentPath = library.lowLevel()._node.value && library.lowLevel()._node.value.value;\n                if (!currentPath) {\n                    return;\n                }\n                var relativePath;\n                if (isWebPath(currentPath) || path.isAbsolute(currentPath)) {\n                    relativePath = currentPath;\n                }\n                else {\n                    var currentDirectory = path.dirname(_this.getParentNode().lowLevel().unit().absolutePath());\n                    var relativePath = path.relative(path.dirname(libraryUnit.absolutePath()), path.resolve(currentDirectory, currentPath));\n                }\n                var lowLevel = stubs.createMapping(library.lowLevel().key(), \"!include \" + relativePath);\n                var stubLibrary = stubs.createASTNodeImpl(lowLevel, null, libraryClass, null);\n                stubTreeRoot.wrapperNode().addToProp(stubLibrary.wrapperNode(), universeModule.Universe10.FragmentDeclaration.properties.uses.name);\n            });\n        });\n        this.updateLibraryUnit(libraryUnit, stubTreeRoot);\n        this.saveUnit(libraryUnit);\n        var modifiedUnits = [];\n        modifiedUnits.push(this.getParentNode().lowLevel().unit());\n        var libraryQualifier = this.getLibraryQualifier();\n        movedNodes.forEach(function (movedNode) {\n            //changing node references\n            var movedNodeReferences = movedNode.findReferences();\n            if (movedNodeReferences) {\n                movedNodeReferences.forEach(function (reference) {\n                    if (!(reference.isAttr())) {\n                        return;\n                    }\n                    if (_.find(movedNodes, function (movedNode) { return _this.isParentOf(movedNode, reference); })) {\n                        return;\n                    }\n                    var property = reference;\n                    var oldValue = property.value();\n                    if (typeof oldValue != \"string\") {\n                        return;\n                    }\n                    var oldStringValue = oldValue;\n                    var textToReplace = movedNode.name();\n                    var textToReplanceWith = libraryQualifier + \".\" + textToReplace;\n                    var newStringValue = oldStringValue.replace(textToReplace, textToReplanceWith);\n                    property.setValue(newStringValue);\n                    var modifiedPropertyUnit = property.lowLevel().unit();\n                    if (_.find(modifiedUnits, function (modifiedUnit) { return modifiedUnit == modifiedPropertyUnit; })) {\n                        modifiedUnits.push(modifiedPropertyUnit);\n                    }\n                });\n            }\n            //deleting the node itself\n            movedNode.parent().remove(movedNode);\n        });\n        modifiedUnits.forEach(function (modifiedUnit) { return _this.saveUnit(modifiedUnit); });\n        this.addUsesNode(libraryQualifier, this.getLibraryPath());\n    };\n    ExtractLibraryDialog.prototype.generateDefaultLibraryPath = function () {\n        var node = this.getParentNode();\n        var currentFilePath = node.lowLevel().unit().absolutePath();\n        var parent = path.dirname(currentFilePath);\n        return path.resolve(parent, \"NewLibrary.raml\");\n    };\n    ExtractLibraryDialog.prototype.getLibraryName = function () {\n        return this.libraryNamespace.getBinding().get();\n    };\n    ExtractLibraryDialog.prototype.getLibraryQualifier = function () {\n        return this.libraryNamespace.getBinding().get();\n    };\n    ExtractLibraryDialog.prototype.getDefaultLibraryNamespace = function () {\n        return \"NewLibrary\";\n    };\n    ExtractLibraryDialog.prototype.getLibraryPath = function () {\n        var originalValue = this.libraryPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return null;\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return null;\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return null;\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return null;\n        }\n        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n    };\n    ExtractLibraryDialog.prototype.createProject = function () {\n        var targetLibraryPath = this.getLibraryPath();\n        return rp.project.createProject(path.dirname(targetLibraryPath));\n    };\n    ExtractLibraryDialog.prototype.createLibraryUnit = function (project) {\n        var targetLibraryPath = this.getLibraryPath();\n        fs.writeFileSync(targetLibraryPath, \"#%RAML 1.0 Library\\n\");\n        return project.unit(path.basename(targetLibraryPath));\n    };\n    ExtractLibraryDialog.prototype.updateLibraryUnit = function (libraryUnit, stubTreeRoot) {\n        var targetLibraryAst = libraryUnit.highLevel();\n        //adding top-level children from stub AST to the target library AST\n        stubTreeRoot.children().forEach(function (child) {\n            if (!child.getKind()) {\n                return;\n            }\n            targetLibraryAst.add(child);\n        });\n    };\n    ExtractLibraryDialog.prototype.addUsesNode = function (libraryQualifier, fileName) {\n        //TODO this must be done via AST manipulation, but it is impossible atm due to AST bugs\n        var relativePath = path.relative(path.dirname(this.getParentNode().lowLevel().unit().absolutePath()), fileName);\n        var existingFirstUsesNode = _.find(this.getParentNode().children(), function (child) {\n            var childAny = child;\n            return childAny.definition &&\n                universeHelpers.isLibraryType(childAny.definition()) &&\n                childAny.property() &&\n                universeHelpers.isUsesProperty(childAny.property());\n        });\n        var usesMapping = null;\n        var sequenceFound = false;\n        if (existingFirstUsesNode) {\n            var currentNode = existingFirstUsesNode.lowLevel();\n            while (currentNode != null) {\n                if (currentNode.kind() == yaml.Kind.MAPPING\n                    && currentNode.key() == universeModule.Universe10.FragmentDeclaration.properties.uses.name) {\n                    usesMapping = currentNode;\n                    break;\n                }\n                if (currentNode.kind() == yaml.Kind.SEQ) {\n                    sequenceFound = true;\n                }\n                currentNode = currentNode.parent();\n            }\n        }\n        if (usesMapping) {\n            //existing \"uses\" found, inserting there\n            var positionToInsert = usesMapping.keyEnd() + 1;\n            var text = \"\\n  \" + (sequenceFound ? \"- \" : \"\") + libraryQualifier + \": \" + relativePath;\n            this.insertTextToActiveEditor(positionToInsert, text);\n        }\n        else {\n            var titleNode = _.find(this.getParentNode().children(), function (child) {\n                var childAny = child;\n                return childAny.definition &&\n                    universeHelpers.isStringTypeType(childAny.definition()) &&\n                    childAny.property() &&\n                    universeHelpers.isTitleProperty(childAny.property());\n            });\n            if (titleNode) {\n                //title node found, inserting after it\n                var positionToInsert = titleNode.lowLevel().valueEnd();\n                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n                this.insertTextToActiveEditor(positionToInsert, text);\n            }\n            else {\n                //nothing happens, inserting in the end of the file\n                var positionToInsert = this.getParentNode().lowLevel().end();\n                var text = \"\\n\" + \"uses:\" + \"\\n  \" + libraryQualifier + \": \" + relativePath;\n                this.insertTextToActiveEditor(positionToInsert, text);\n            }\n        }\n    };\n    ExtractLibraryDialog.prototype.insertTextToActiveEditor = function (positionToInsert, text) {\n        var txt = this.getParentNode().lowLevel().unit().contents();\n        var endPart = txt.substring(positionToInsert);\n        var startPart = txt.substring(0, positionToInsert);\n        var vl = startPart + text + endPart;\n        this.getActiveEditor().setText(vl);\n    };\n    ExtractLibraryDialog.prototype.createUsesNode = function (libraryQualifier, fileName) {\n        var universe = this.getParentNode().definition().universe();\n        var usesProperty = this.getParentNode().root().definition().property(\"uses\");\n        var usesNode = stubs.createStubNode(universe.type(\"Library\"), usesProperty, libraryQualifier);\n        return usesNode;\n    };\n    return ExtractLibraryDialog;\n}(AbstractlMoveElementsDialog));\nexports.ExtractLibraryDialog = ExtractLibraryDialog;\nvar ExtractOverlayDialog = (function (_super) {\n    __extends(ExtractOverlayDialog, _super);\n    function ExtractOverlayDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    ExtractOverlayDialog.prototype.createStub = function (node) {\n        if (node.definition().key() == universeModule.Universe10.Api ||\n            node.definition().key() == universeModule.Universe08.Api) {\n            var universe = rp.ds.getUniverse(\"RAML10\");\n            var nodeClass = universe.type(universeModule.Universe10.Overlay.name);\n            var stub = this.createStubRoot(node, nodeClass);\n            return stub;\n        }\n        return _super.prototype.createStub.call(this, node);\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ExtractOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n        //we can move everything\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ExtractOverlayDialog.prototype.validate = function () {\n        if (!this.overlayPath)\n            return null;\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        var originalValue = this.overlayPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return \"Empty overlay path\";\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return \"Overlay path should be a RAML file\";\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return \"Overlay path directory does not exist\";\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return \"Overlay path parent is not a directory\";\n        }\n        var absolutePath = path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n        if (fs.existsSync(absolutePath)) {\n            return \"Destination overlay already exists\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractOverlayDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Overlay path:\").pad(5, 0));\n        this.overlayPath = UI.texfField(\"\", this.generateDefaultOverlayPath(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.overlayPath);\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ExtractOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var project = this.createProject();\n        var overlayUnit = this.createOverlayUnit(project);\n        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n        var overlayPath = this.getOverlayPath();\n        var originalUnitPath = this.getParentNode().lowLevel().unit().absolutePath();\n        var relativePath = path.relative(path.dirname(overlayPath), originalUnitPath);\n        this.addMasterReference(overlayUnit, relativePath);\n        this.saveUnit(overlayUnit);\n    };\n    ExtractOverlayDialog.prototype.generateDefaultOverlayPath = function () {\n        var node = this.getParentNode();\n        var currentFilePath = node.lowLevel().unit().absolutePath();\n        var parent = path.dirname(currentFilePath);\n        return path.resolve(parent, \"NewOverlay.raml\");\n    };\n    ExtractOverlayDialog.prototype.createProject = function () {\n        var targetOverlayPath = this.getOverlayPath();\n        return rp.project.createProject(path.dirname(targetOverlayPath));\n    };\n    ExtractOverlayDialog.prototype.createOverlayUnit = function (project) {\n        var targetOverlayPath = this.getOverlayPath();\n        fs.writeFileSync(targetOverlayPath, \"#%RAML 1.0 Overlay\\ntitle: Extension\\n\");\n        return project.unit(path.basename(targetOverlayPath));\n    };\n    ExtractOverlayDialog.prototype.updateOverlayUnit = function (overlayUnit, stubTreeRoot) {\n        var targetOverlayAst = overlayUnit.highLevel();\n        //adding top-level children from stub AST to the target overlay AST\n        stubTreeRoot.children().forEach(function (child) {\n            if (!child.getKind()) {\n                return;\n            }\n            targetOverlayAst.add(child);\n        });\n    };\n    ExtractOverlayDialog.prototype.getOverlayPath = function () {\n        var originalValue = this.overlayPath.getBinding().get();\n        var trimmed = originalValue.trim();\n        if (trimmed.length == 0) {\n            return null;\n        }\n        if (path.extname(trimmed) != '.raml') {\n            return null;\n        }\n        var dir = path.resolve(path.dirname(this.getActiveEditor().getPath()), path.dirname(trimmed));\n        if (!fs.existsSync(dir)) {\n            return null;\n        }\n        var st = fs.statSync(dir);\n        if (!st.isDirectory()) {\n            return null;\n        }\n        return path.resolve(path.dirname(this.getActiveEditor().getPath()), trimmed);\n    };\n    ExtractOverlayDialog.prototype.addMasterReference = function (overlayUnit, path) {\n        var targetLibraryAst = overlayUnit.highLevel();\n        var masterRefAttribute = targetLibraryAst.attrOrCreate(universeModule.Universe10.Overlay.properties.extends.name);\n        masterRefAttribute.setValue(path);\n    };\n    ExtractOverlayDialog.prototype.createMovedNode = function (originalNode) {\n        //we do not want to make a complete copy of the moved node.\n        //instead, we want an empty stub\n        return this.createStub(originalNode);\n    };\n    return ExtractOverlayDialog;\n}(AbstractlMoveElementsDialog));\nexports.ExtractOverlayDialog = ExtractOverlayDialog;\nvar ModifyOverlayDialog = (function (_super) {\n    __extends(ModifyOverlayDialog, _super);\n    function ModifyOverlayDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.overlayASTRoot = parentNode;\n        console.log(\"Overlay AST root:\");\n        console.log(this.overlayASTRoot.printDetails());\n        this.masterASTRoot = this.createMasterAST();\n        this.overlayASTLeafNodes = [];\n        this.calculateLeafNodes(this.overlayASTRoot, this.overlayASTLeafNodes);\n    }\n    ModifyOverlayDialog.prototype.getParentNode = function () {\n        return this.masterASTRoot;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    ModifyOverlayDialog.prototype.checkNode = function (nodeToFilter) {\n        var _this = this;\n        //we can move everything except leaf nodes already defined in out AST\n        if (_.find(this.overlayASTLeafNodes, function (currentNode) {\n            return currentNode == nodeToFilter || _this.nodesEqualById(currentNode, nodeToFilter);\n        })) {\n            return {\n                visitChildren: false,\n                display: false,\n                canBeMoved: false\n            };\n        }\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    ModifyOverlayDialog.prototype.validate = function () {\n        if (!this.stubRoot)\n            return null;\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ModifyOverlayDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    ModifyOverlayDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var overlayUnit = this.getOverlayUnit();\n        this.updateOverlayUnit(overlayUnit, stubTreeRoot);\n        this.saveUnit(overlayUnit);\n    };\n    ModifyOverlayDialog.prototype.createMasterAST = function () {\n        var masterAbsolutePath = this.findMasterAbsolutePath();\n        if (!masterAbsolutePath) {\n            return null;\n        }\n        var project = this.createProject(masterAbsolutePath);\n        var masterUnit = project.unit(path.basename(masterAbsolutePath));\n        return masterUnit.highLevel();\n    };\n    ModifyOverlayDialog.prototype.calculateLeafNodes = function (root, toReportTo) {\n        var _this = this;\n        if (!root)\n            return;\n        var children = root.directChildren() ? root.directChildren() : null;\n        if (root.isElement()) {\n            if (children) {\n                if (!_.find(children, function (child) { return child.isElement(); })) {\n                    toReportTo.push(root);\n                    return;\n                }\n            }\n            else {\n                toReportTo.push(root);\n                return;\n            }\n        }\n        if (children)\n            children.forEach(function (child) { return _this.calculateLeafNodes(child, toReportTo); });\n    };\n    ModifyOverlayDialog.prototype.findMasterAbsolutePath = function () {\n        try {\n            var masterRefAttribute = this.overlayASTRoot.attr(\"masterRef\");\n            if (!masterRefAttribute) {\n                return null;\n            }\n            var reference = masterRefAttribute.value();\n            if (!reference) {\n                return null;\n            }\n            var overlayAbsolutePath = this.getOverlayUnit().absolutePath();\n            var masterAbsolutePath = path.resolve(path.dirname(overlayAbsolutePath), reference);\n            //if (!fs.existsSync(masterAbsolutePath)) {\n            //    return null\n            //}\n            return masterAbsolutePath;\n        }\n        catch (Error) {\n            console.error(Error.message);\n            return null;\n        }\n    };\n    ModifyOverlayDialog.prototype.createProject = function (targetPath) {\n        return rp.project.createProject(path.dirname(targetPath));\n    };\n    ModifyOverlayDialog.prototype.getOverlayUnit = function () {\n        return this.overlayASTRoot.lowLevel().unit();\n    };\n    ModifyOverlayDialog.prototype.updateOverlayUnit = function (libraryUnit, stubTreeRoot) {\n        var targetLibraryAst = libraryUnit.highLevel();\n        //merging the new nodes into existing overlay tree\n        this.mergeTrees(stubTreeRoot, this.overlayASTRoot);\n    };\n    ModifyOverlayDialog.prototype.createMovedNode = function (originalNode) {\n        //we do not want to make a complete copy of the moved node.\n        //instead, we want an empty stub\n        return this.createStub(originalNode);\n    };\n    return ModifyOverlayDialog;\n}(AbstractlMoveElementsDialog));\nexports.ModifyOverlayDialog = ModifyOverlayDialog;\n/**\n * Intended for subclassing, should not be instantiated.\n */\nvar AbstractMoveTypePropertiesDialog = (function (_super) {\n    __extends(AbstractMoveTypePropertiesDialog, _super);\n    function AbstractMoveTypePropertiesDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.sourceType = parentNode;\n    }\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    AbstractMoveTypePropertiesDialog.prototype.getTargetType = function () {\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Is called for each node to check whether to display it, whether the node can be moved,\n     * and whether node children needs to be checked.\n     *\n     * @param nodeToFilter\n     * @returns {{visitChildren: boolean, display: boolean, canBeMove: boolean}}\n     */\n    AbstractMoveTypePropertiesDialog.prototype.checkNode = function (nodeToFilter) {\n        //we can move everything inside the type\n        //and as the type is our root, we can move just everything\n        return {\n            visitChildren: true,\n            display: true,\n            canBeMoved: true\n        };\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Checks if everything is valid.\n     * This particular method should be called in a subclass before or after\n     * its own check, and the results should be joined.\n     * @returns {null} if validation passed ok, error message otherwise\n     */\n    AbstractMoveTypePropertiesDialog.prototype.validate = function () {\n        if (this.movedNodes.length == 0) {\n            return \"Add elements to move\";\n        }\n        return null;\n    };\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    AbstractMoveTypePropertiesDialog.prototype.createHeader = function (parentPanel) {\n    };\n    /**\n     * Is called when \"Ok\" is pressed.\n     * @param movedNodes - nodes, which were moved. Plain list, original nodes.\n     * @param stubTreeRoot - nodes, which were moved, as a stub tree with a root\n     * being a stub of the original dialog parent node. Nodes original hierarchy is preserved.\n     */\n    AbstractMoveTypePropertiesDialog.prototype.performOk = function (movedNodes, stubTreeRoot) {\n        var sourceUnit = this.sourceType.lowLevel().unit();\n        var targetType = this.getTargetType();\n        if (!targetType) {\n            return;\n        }\n        var targetUnit = targetType.lowLevel().unit();\n        this.mergeTrees(stubTreeRoot, targetType);\n        this.movedNodes.forEach(function (movedNode) {\n            movedNode.parent().remove(movedNode);\n        });\n        this.postMerge();\n        this.saveUnit(sourceUnit);\n        if (targetUnit)\n            this.saveUnit(targetUnit);\n    };\n    AbstractMoveTypePropertiesDialog.prototype.postMerge = function () {\n    };\n    return AbstractMoveTypePropertiesDialog;\n}(AbstractlMoveElementsDialog));\nexports.AbstractMoveTypePropertiesDialog = AbstractMoveTypePropertiesDialog;\nfunction findUserDefinedSupertypes(typeNode) {\n    var result = [];\n    var nodeType = typeNode.localType();\n    if (!nodeType || !nodeType.isUserDefined()) {\n        return result;\n    }\n    addUserDefinedSupertypes(nodeType, result);\n    return result;\n}\nexports.findUserDefinedSupertypes = findUserDefinedSupertypes;\nfunction addUserDefinedSupertypes(type, typesToAddTo) {\n    if (!type.isUserDefined()) {\n        return;\n    }\n    var superTypes = (type).superTypes();\n    if (superTypes)\n        superTypes.forEach(function (superType) {\n            if (superType.isUserDefined()) {\n                typesToAddTo.push(superType);\n            }\n            addUserDefinedSupertypes(superType, typesToAddTo);\n        });\n}\nvar PullUpDialog = (function (_super) {\n    __extends(PullUpDialog, _super);\n    function PullUpDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n        this.superTypeNames = [];\n        this.superTypeNames = this.findSuperTypeNames();\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    PullUpDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Select supertype:\").pad(5, 0));\n        var select = new UI.Select(\"\", function (selection) {\n            _this.selectedSuperType = select.getValue();\n        });\n        select.setOptions(this.superTypeNames);\n        select.setValue(this.superTypeNames[0]);\n        this.selectedSuperType = this.superTypeNames[0];\n        parentPanel.addChild(select);\n    };\n    PullUpDialog.prototype.show = function () {\n        //if no supertypes are found, we're not displaying anything\n        //Actually, state calculator should not allow action launching in this case\n        if (this.superTypeNames.length == 0) {\n            return;\n        }\n        _super.prototype.show.call(this);\n    };\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    PullUpDialog.prototype.getTargetType = function () {\n        var _this = this;\n        var foundSuperType = _.find(this.superTypes, function (superType) {\n            return superType.nameId() == _this.selectedSuperType;\n        });\n        if (!foundSuperType)\n            return null;\n        return foundSuperType.getAdapter(def.RAMLService).getDeclaringNode();\n    };\n    PullUpDialog.prototype.findSuperTypeNames = function () {\n        var result = [];\n        this.superTypes = findUserDefinedSupertypes(this.sourceType);\n        this.superTypes.forEach(function (superType) {\n            result.push(superType.nameId());\n        });\n        return result;\n    };\n    return PullUpDialog;\n}(AbstractMoveTypePropertiesDialog));\nexports.PullUpDialog = PullUpDialog;\nvar ExtractSupertypeDialog = (function (_super) {\n    __extends(ExtractSupertypeDialog, _super);\n    function ExtractSupertypeDialog(parentNode, name) {\n        _super.call(this, parentNode, name);\n    }\n    /**\n     * Intended for overriding in subclass.\n     * Add any UI here to be displayed above the node moving panels.\n     * @param parentPanel\n     */\n    ExtractSupertypeDialog.prototype.createHeader = function (parentPanel) {\n        var _this = this;\n        parentPanel.addChild(UI.label(\"Supertype name:\").pad(5, 0));\n        this.superTypeName = UI.texfField(\"\", this.generateDefaultSupertypeName(), function (x) {\n            _this.performValidation();\n        });\n        parentPanel.addChild(this.superTypeName);\n    };\n    /**\n     * Intended for overriding, should return the target type.\n     * Will only be called during performOk() execution, so it is assumed that\n     * UI already have required user input before the calowLevel.\n     * @returns {null}\n     */\n    ExtractSupertypeDialog.prototype.getTargetType = function () {\n        var astRoot = this.sourceType.root();\n        var universe = astRoot.definition().universe();\n        var rtypes = astRoot.root().definition().property(universeModule.Universe10.LibraryBase.properties.types.name);\n        //var typeStub=(<def.NodeClass>universe.getType(\"ObjectField\")).createStubNode(rtypes, this.superTypeName.getBinding().get());\n        var typeWrapper = rp.parser.modify.createObjectTypeDeclaration(this.superTypeName.getBinding().get());\n        var typeStub = typeWrapper.highLevel();\n        this.typeWrapper = typeWrapper;\n        this.astRoot = astRoot;\n        //astRoot.add(typeStub);\n        //var unit = astRoot.lowLevel().unit();\n        //this.saveUnit(unit);\n        //\n        //var newAstRoot = <hl.IHighLevelNode>hl.fromUnit(unit);\n        //this.sourceType = <hl.IHighLevelNode> _.find(newAstRoot.children(), child=>{\n        //    return (<hl.IHighLevelNode>child).property\n        //    && (<hl.IHighLevelNode>child).property().range\n        //    && (<hl.IHighLevelNode>child).property().range().name() == \"DataElement\"\n        //    && (<hl.IHighLevelNode>child).property().name() == \"types\"\n        //    && (<hl.IHighLevelNode>child).name() == this.superTypeName.getBinding().get()\n        //})\n        return typeStub;\n    };\n    ExtractSupertypeDialog.prototype.validate = function () {\n        var superValidate = _super.prototype.validate.call(this);\n        if (superValidate) {\n            return superValidate;\n        }\n        if (!this.superTypeName.getBinding().get() ||\n            this.superTypeName.getBinding().get().trim().length == 0) {\n            return \"Enter supertype name\";\n        }\n        return null;\n    };\n    ExtractSupertypeDialog.prototype.postMerge = function () {\n        this.astRoot.wrapperNode().addToProp(this.typeWrapper, 'types');\n        this.sourceType.attrOrCreate(\"type\").setValue(this.typeWrapper.highLevel().name());\n        //var runtimeDef = this.typeWrapper.highLevel().definition().toRuntime()\n        //(<hlimpl.ASTNodeImpl>this.sourceType).patchType(runtimeDef)\n    };\n    ExtractSupertypeDialog.prototype.generateDefaultSupertypeName = function () {\n        return this.sourceType.name() + \"SuperType\";\n    };\n    return ExtractSupertypeDialog;\n}(AbstractMoveTypePropertiesDialog));\nexports.ExtractSupertypeDialog = ExtractSupertypeDialog;\nfunction isWebPath(str) {\n    if (str == null)\n        return false;\n    return util.stringStartsWith(str, \"http://\") || util.stringStartsWith(str, \"https://\");\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/extractElementsDialog.js\n ** module id = 40\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar hl = require(\"raml-1-parser\");\nvar UI = require(\"atom-ui-lib\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar extract = require(\"./extractElementsDialog\");\nvar assist = require(\"./assist-utils\");\nvar universes = hl.universes;\nvar MoveElementsDialog = (function () {\n    function MoveElementsDialog(node, name, _resourceType) {\n        this.node = node;\n        this.name = name;\n        this._resourceType = _resourceType;\n    }\n    MoveElementsDialog.prototype.getActiveEditor = function () {\n        var activeEditor = atom.workspace.getActiveTextEditor();\n        if (activeEditor) {\n            return activeEditor;\n        }\n        if (editorTools.aquireManager())\n            return editorTools.aquireManager().getCurrentEditor();\n        return null;\n    };\n    MoveElementsDialog.prototype.show = function () {\n        var _this = this;\n        var zz = null;\n        var node = this.node;\n        var vc = UI.section(\"Move resource \", UI.Icon.GIST_NEW, false, false);\n        var errorLabel = UI.label(\"please select destination resource\", UI.Icon.BUG, UI.TextClasses.ERROR, UI.HighLightClasses.NONE);\n        vc.addChild(UI.vc(errorLabel));\n        vc.addChild(UI.label(\"Please select destination resource\"));\n        var el = UI.hc();\n        vc.setPercentWidth(100);\n        el.setPercentWidth(100);\n        var filterFunc = function (x) {\n            if (_this._resourceType) {\n                if (x.definition().key() != universes.Universe08.Resource &&\n                    x.definition().key() != universes.Universe10.Resource) {\n                    return false;\n                }\n                if (x == node || x == node.parent()) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        var universe = node.definition().universe();\n        var v = extract.createSmallSelectionPanel(node.root(), filterFunc, \"400px\", \"100%\");\n        el.addChild(v);\n        vc.addChild(el);\n        v.addSelectionListener({\n            selectionChanged: function (ev) {\n                errorLabel.setDisplay(ev.selection.isEmpty());\n                okButton.setDisabled(ev.selection.isEmpty());\n            }\n        });\n        var buttonBar = UI.hc().setPercentWidth(100).setStyle(\"display\", \"flex\");\n        buttonBar.addChild(UI.label(\"\", null, null, null).setStyle(\"flex\", \"1\"));\n        buttonBar.addChild(UI.button(\"Cancel\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, UI.Icon.NONE, function (x) { zz.destroy(); }).margin(10, 10));\n        var okButton = UI.button(\"Move\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.SUCCESS, UI.Icon.NONE, function (x) {\n            var target = v.getSelection().elements[0];\n            node.parent().remove(node);\n            target.add(node);\n            var rs = node.lowLevel().unit().contents();\n            _this.getActiveEditor().setText(assist.cleanEmptyLines(rs));\n            zz.destroy();\n        });\n        okButton.setDisabled(true);\n        buttonBar.addChild(okButton);\n        vc.addChild(buttonBar);\n        var html = vc.renderUI();\n        zz = atom.workspace.addModalPanel({ item: html });\n        html.focus();\n    };\n    return MoveElementsDialog;\n}());\nexports.MoveElementsDialog = MoveElementsDialog;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/moveElementsDialog.js\n ** module id = 41\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\n\"use strict\";\nvar DomParser = require(\"xmldom\");\nfunction xmlToJson(xml) {\n    // Create the return object\n    var obj = {};\n    if (xml.nodeType == 1) {\n        // do attributes\n        if (xml.attributes.length > 0) {\n            for (var j = 0; j < xml.attributes.length; j++) {\n                var attribute = xml.attributes.item(j);\n                obj[\"@\" + attribute.nodeName] = attribute.nodeValue;\n            }\n        }\n    }\n    else if (xml.nodeType == 3) {\n        obj = xml.nodeValue;\n    }\n    // do children\n    if (xml.hasChildNodes()) {\n        for (var i = 0; i < xml.childNodes.length; i++) {\n            var item = xml.childNodes.item(i);\n            var nodeName = item.nodeName;\n            if (nodeName == undefined) {\n                continue;\n            }\n            if (typeof (obj[nodeName]) == \"undefined\") {\n                obj[nodeName] = xmlToJson(item);\n            }\n            else {\n                if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                }\n                obj[nodeName].push(xmlToJson(item));\n            }\n        }\n    }\n    return obj;\n}\n;\nfunction cleanupText(j) {\n    for (var p in j) {\n        if (typeof (j[p]) == \"object\") {\n            for (var k in j[p]) {\n                if (k == '#text') {\n                    var txt = j[p]['#text'];\n                    if (typeof (txt) != 'string') {\n                        txt = txt.join(\"\");\n                    }\n                    txt = txt.trim();\n                    if (txt.length == 0) {\n                        delete j[p]['#text'];\n                    }\n                }\n            }\n            cleanupText(j[p]);\n        }\n    }\n    return j;\n}\nfunction cleanupJson(j) {\n    for (var p in j) {\n        if (typeof (j[p]) == \"object\") {\n            var keys = Object.keys(j[p]);\n            if (keys.length == 1) {\n                if (keys[0] == '#text') {\n                    j[p] = j[p]['#text'];\n                }\n            }\n            cleanupJson(j[p]);\n        }\n    }\n    return j;\n}\nfunction parseXML(value) {\n    var v = new DomParser.DOMParser();\n    if (!value || value.trim().indexOf(\"<<\") == 0)\n        return null;\n    var parsed = v.parseFromString(value);\n    return cleanupJson(cleanupText(xmlToJson(parsed)));\n}\nmodule.exports = parseXML;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/xmlutil.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * Created by Sviridov on 5/1/2015.\n */\n/// <reference path=\"../../typings/main.d.ts\" />\n\"use strict\";\nvar JsonSchemaGenerator = (function () {\n    function JsonSchemaGenerator() {\n    }\n    JsonSchemaGenerator.prototype.generateSchema = function (obj) {\n        var sch = {};\n        sch['required'] = true;\n        sch['$schema'] = 'http://json-schema.org/draft-03/schema';\n        this.pass(obj, sch);\n        return sch;\n    };\n    JsonSchemaGenerator.prototype.pass = function (value, property) {\n        var valueType = this.detectType(value);\n        property['type'] = valueType;\n        if (!value || value == null) {\n        }\n        else if (Array.isArray(value)) {\n            this.passArray(value, property);\n        }\n        else if (value instanceof Object) {\n            this.passObject(value, property);\n        }\n    };\n    JsonSchemaGenerator.prototype.passObject = function (obj, sch) {\n        var _this = this;\n        Object.keys(obj).forEach(function (x) { return _this.registerProperty(x, obj[x], sch); });\n    };\n    JsonSchemaGenerator.prototype.registerProperty = function (propName, value, sch) {\n        var properties = sch['properties'];\n        if (!properties) {\n            properties = {};\n            sch['properties'] = properties;\n        }\n        var property = properties[propName];\n        if (!property) {\n            property = {};\n            properties[propName] = property;\n        }\n        property['required'] = false;\n        this.pass(value, property);\n    };\n    JsonSchemaGenerator.prototype.passArray = function (array, property) {\n        var _this = this;\n        var items = property['items'];\n        if (!items) {\n            items = [];\n            property['items'] = items;\n        }\n        var l = array.length;\n        var itemSet = [];\n        array.forEach(function (value) {\n            var item = {};\n            _this.pass(value, item);\n            itemSet.push(item);\n        });\n        items.push(itemSet[0]);\n    };\n    JsonSchemaGenerator.prototype.detectType = function (value) {\n        if (Array.isArray(value)) {\n            return 'array';\n        }\n        return typeof value;\n    };\n    return JsonSchemaGenerator;\n}());\nexports.JsonSchemaGenerator = JsonSchemaGenerator;\nfunction generateSchema(text, mediaType) {\n    var generator = new JsonSchemaGenerator();\n    var obj = JSON.parse(text);\n    var schemaObject = generator.generateSchema(obj);\n    var schemaString = JSON.stringify(schemaObject, null, 2);\n    return schemaString;\n}\nexports.generateSchema = generateSchema;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/schemaGenerator.js\n ** module id = 43\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar Atom = require('atom');\nvar React = require('react');\nvar SpacePenViews = require('atom-space-pen-views');\nvar pathwatcher = require('../../util/pathwatcherProxy');\nvar extend = require('xtend');\nvar path = require('path');\nvar popsicle = require('popsicle');\nvar AtomUtil = require('../util/atom');\nvar rp = require(\"raml-1-parser\");\nvar Render = require('./render');\nvar CompositeDisposable = Atom.CompositeDisposable;\nfunction template(str, replace, defaults) {\n    return str.replace(/\\{([^{}]+)\\}/g, function (match, key) {\n        if (replace && replace[key] != null) {\n            return replace[key];\n        }\n        if (defaults && defaults[key] != null) {\n            return defaults[key];\n        }\n        return '';\n    });\n}\n/**\n * Export the console view instance which provides rendering and live-updating.\n */\nvar RAMLConsoleView = (function (_super) {\n    __extends(RAMLConsoleView, _super);\n    function RAMLConsoleView(options) {\n        var _this = this;\n        _super.call(this);\n        this.loaded = false;\n        this.isAttached = false;\n        this.isParsing = false;\n        this.disposables = new CompositeDisposable();\n        this.pageState = {};\n        // Track files and editor watchers.\n        this.paths = {};\n        this.editors = {};\n        this.resolver = new ConsoleResolver(function (path) { return _this.readFileSync(path); });\n        this.state = extend({\n            view: {},\n            parameters: {},\n            headers: {},\n            uriParameters: {},\n            baseUriParameters: {},\n            queryParameters: {},\n            bodies: {}\n        }, options.state);\n        this.filename = options.filename;\n        this.editorId = options.editorId;\n        // Handle manually passed in RAML wrapper.\n        if (options.raml) {\n            this.raml = rp.expander.expandTraitsAndResourceTypes(options.raml);\n            this.project = options.raml.highLevel().lowLevel().unit().project().cloneWithResolver(this.resolver);\n            this.loaded = true;\n        }\n    }\n    /**\n     * Atom uses the `content` as the wrapper element.\n     */\n    RAMLConsoleView.content = function () {\n        return this.div({ class: 'raml-console pane-item', tabindex: -1 });\n    };\n    RAMLConsoleView.getUriForFilename = function (path) {\n        return 'raml-console://file/' + path;\n    };\n    RAMLConsoleView.getUriForEditor = function (editor) {\n        return 'raml-console://editor/' + editor.id;\n    };\n    RAMLConsoleView.prototype.attached = function () {\n        var _this = this;\n        if (this.isAttached) {\n            return;\n        }\n        this.render();\n        this.isAttached = true;\n        if (this.editorId) {\n            this.resolveEditor(this.editorId);\n        }\n        else if (this.filename) {\n            this.resolveFilename(this.filename);\n        }\n        this.disposables.add(atom.workspace.observeTextEditors(function (editor) {\n            var path = editor.getPath();\n            // Upgrade from file watching to editor watching.\n            if (_this.paths[path]) {\n                _this.watchEditor(editor);\n                _this.stopWatchingPath(path);\n            }\n        }));\n    };\n    RAMLConsoleView.prototype.resolveEditor = function (editorId) {\n        var _this = this;\n        var resolve = function () {\n            _this.editor = AtomUtil.getEditorById(editorId);\n            if (_this.editor) {\n                _this.trigger('title-changed');\n                _this.loadRAML();\n                return;\n            }\n            var view = _this.parents('.pane').view();\n            return view && view.destroyItem(_this);\n        };\n        if (atom.workspace) {\n            resolve();\n        }\n        else {\n            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n        }\n    };\n    RAMLConsoleView.prototype.resolveFilename = function (filename) {\n        var _this = this;\n        var resolve = function () {\n            _this.file = new pathwatcher.File(filename);\n            _this.trigger('title-changed');\n            _this.loadRAML();\n        };\n        if (atom.workspace) {\n            resolve();\n        }\n        else {\n            this.disposables.add(atom.packages.onDidActivateInitialPackages(resolve));\n        }\n    };\n    RAMLConsoleView.prototype.readFileSync = function (path) {\n        var editor = AtomUtil.getEditorByPath(path);\n        var contents;\n        if (editor) {\n            contents = editor.getText();\n            this.watchEditor(editor);\n        }\n        else {\n            try {\n                contents = fs.readFileSync(path, 'utf8');\n            }\n            catch (err) {\n                if (err.code === 'ENOENT') {\n                    this.watchForFile(path);\n                    return;\n                }\n                throw err;\n            }\n            this.watchFile(path);\n        }\n        return contents;\n    };\n    RAMLConsoleView.prototype.watchEditor = function (editor) {\n        var _this = this;\n        var path = editor.getPath();\n        if (this.editors[path]) {\n            return;\n        }\n        var disposables = new CompositeDisposable();\n        this.editors[path] = disposables;\n        // Changes can be as simple as updating the cache.\n        disposables.add(editor.onDidStopChanging(function () {\n            _this.updateUnit(path, editor.getText());\n        }));\n        // Callback to dispose of listeners and force an update. This happens\n        // because the updated path or file may not be used by the RAML parser.\n        var cb = function () {\n            _this.stopWatchingEditor(path);\n            _this.updateUnit(path, _this.readFileSync(path));\n        };\n        disposables.add(editor.onDidDestroy(cb));\n        disposables.add(editor.onDidChangePath(cb));\n    };\n    RAMLConsoleView.prototype.getActiveEditor = function () {\n        return atom.workspace.getActiveTextEditor();\n    };\n    RAMLConsoleView.prototype.stopWatchingPath = function (path) {\n        var watcher = this.paths[path];\n        if (watcher) {\n            watcher.close();\n            delete this.paths[path];\n        }\n    };\n    RAMLConsoleView.prototype.stopWatchingEditor = function (path) {\n        var disposables = this.editors[path];\n        if (disposables) {\n            disposables.dispose();\n            delete this.editors[path];\n        }\n    };\n    RAMLConsoleView.prototype.watchFile = function (path) {\n        var _this = this;\n        if (this.paths[path]) {\n            return;\n        }\n        var watcher = pathwatcher.watch(path, function (event) {\n            if (event === 'change') {\n                _this.updateUnit(path, _this.readFileSync(path));\n            }\n            else {\n                _this.stopWatchingPath(path);\n                _this.deleteUnit(path);\n            }\n        });\n        this.paths[path] = watcher;\n    };\n    RAMLConsoleView.prototype.watchForFile = function (filename) {\n        var _this = this;\n        this.watchForPath(filename, function () {\n            _this.updateUnit(filename, _this.readFileSync(filename));\n        });\n    };\n    RAMLConsoleView.prototype.watchForPath = function (filename, cb) {\n        var _this = this;\n        var parent = path.dirname(filename);\n        var watch = function () {\n            var watcher = pathwatcher.watch(parent, function (event, newFilename) {\n                if (event === 'change') {\n                    if (newFilename === filename) {\n                        _this.stopWatchingPath(parent);\n                        cb();\n                    }\n                }\n                else {\n                    _this.watchForPath(parent, watch);\n                    _this.stopWatchingPath(parent);\n                }\n            });\n            _this.paths[parent] = watcher;\n        };\n        try {\n            watch();\n        }\n        catch (e) {\n            this.watchForPath(parent, watch);\n        }\n    };\n    RAMLConsoleView.prototype.stopWatching = function () {\n        var _this = this;\n        Object.keys(this.paths).forEach(function (path) {\n            _this.stopWatchingPath(path);\n        });\n        Object.keys(this.editors).forEach(function (path) {\n            _this.stopWatchingEditor(path);\n        });\n    };\n    RAMLConsoleView.prototype.navigate = function (state) {\n        var view = typeof state === 'string' ? { id: state } : extend(this.state.view, state);\n        // Reset `pageState` before re-render.\n        this.pageState = {};\n        this.setState({ view: view }, function () {\n            // Scroll the view to the top, as if we'd just navigated.\n            document.getElementById('raml-console-view').scrollTop = 0;\n        });\n        this.abortRequest();\n    };\n    /**\n     * Render the UI with React.\n     */\n    RAMLConsoleView.prototype.render = function (cb) {\n        var _this = this;\n        var props = {\n            state: this.state,\n            raml: this.raml,\n            loaded: this.loaded,\n            errors: this.errors,\n            pageState: this.pageState,\n            setParameter: function (group, name, value) { return _this.setParameter(group, name, value); },\n            setState: function (state) { return _this.setState(state); },\n            navigate: function (view) { return _this.navigate(view); },\n            execRequest: function () { return _this.execRequest(); }\n        };\n        React.render(React.createElement(Render.Console, props), this.element, cb);\n    };\n    RAMLConsoleView.prototype.execRequest = function () {\n        var _this = this;\n        this.abortRequest();\n        var baseUri = this.raml.baseUri();\n        var node = this.raml.highLevel().findById(this.state.view.id).wrapperNode();\n        // Remove old request errors.\n        this.setPageState({ requestError: undefined });\n        if (baseUri == null) {\n            this.setPageState({ requestError: 'Unable to execute request, `baseUri` is missing' });\n            return;\n        }\n        var securityScheme = this.state.securityScheme ?\n            this.raml.securitySchemes().filter(function (x) { return x.name() === _this.state.securityScheme; })[0] : undefined;\n        var defaultBaseUriParameters = this.toDefaultParameters(this.raml.allBaseUriParameters());\n        var defaultUriParameters = this.toDefaultParameters(node.parent().allUriParameters());\n        var methodHeaders = node.headers();\n        var methodQuery = node.queryParameters();\n        var url = template(baseUri.value() || '', this.state.baseUriParameters, defaultBaseUriParameters).replace(/\\/$/, '');\n        var path = template(node.parent().completeRelativeUri(), this.state.uriParameters, defaultUriParameters);\n        if (securityScheme) {\n            methodQuery = methodQuery.concat(securityScheme.describedBy().queryParameters());\n            methodHeaders = methodHeaders.concat(securityScheme.describedBy().headers());\n        }\n        var requestOptions = {\n            url: url + path,\n            method: node.method(),\n            headers: extend({ 'User-Agent': 'API Workbench: Console' }, this.usedParameters(this.state.headers, methodHeaders)),\n            query: this.usedParameters(this.state.queryParameters, methodQuery),\n            body: this.state.bodies[this.state.body],\n            use: [\n                popsicle.plugins.headers(),\n                popsicle.plugins.unzip(),\n                popsicle.plugins.concatStream('string')\n            ]\n        };\n        if (this.state.body && requestOptions.headers && !requestOptions.headers['Content-Type']) {\n            requestOptions.headers['Content-Type'] = this.state.body;\n        }\n        this.request = popsicle.request(requestOptions);\n        this.request.progress(function () {\n            _this.setPageState({ requestProgress: _this.request.completed });\n        });\n        // Handle request completion.\n        this.request.then(function (response) {\n            _this.setPageState({ requestResponse: response.toJSON(), requestProgress: undefined });\n            _this.request = undefined;\n        }, function (error) {\n            _this.setPageState({ requestError: error.message, requestProgress: undefined });\n            _this.request = undefined;\n        });\n    };\n    RAMLConsoleView.prototype.toDefaultParameters = function (parameters) {\n        var params = {};\n        parameters.forEach(function (parameter) {\n            if (parameter.default()) {\n                params[parameter.name()] = parameter.default();\n            }\n        });\n        return params;\n    };\n    RAMLConsoleView.prototype.usedParameters = function (state, parameters) {\n        var params = {};\n        parameters.forEach(function (param) {\n            if (state[param.name()]) {\n                params[param.name()] = state[param.name()];\n            }\n        });\n        return params;\n    };\n    RAMLConsoleView.prototype.abortRequest = function () {\n        if (this.request) {\n            this.request.abort();\n            this.request = undefined;\n        }\n    };\n    RAMLConsoleView.prototype.updateRAML = function () {\n        this.isParsing = true;\n        try {\n            var baseUnit = this.getUnit(this.getFilename());\n            var errors = baseUnit.ast().errors();\n            this.errors = errors;\n            if (!errors.length) {\n                var originalRoot = baseUnit.highLevel().asElement().wrapperNode();\n                this.raml = rp.expander.expandTraitsAndResourceTypes(originalRoot);\n            }\n        }\n        catch (error) {\n            this.raml = undefined;\n            this.errors = [error];\n        }\n        finally {\n            this.loaded = true;\n            this.isParsing = false;\n            this.render();\n            this.trigger('title-changed');\n        }\n    };\n    RAMLConsoleView.prototype.loadRAML = function () {\n        // Reset all watchers, consider it a fresh parse.\n        this.stopWatching();\n        this.project = rp.project.createProject(path.dirname(this.getFilename()), this.resolver);\n        this.updateRAML();\n    };\n    RAMLConsoleView.prototype.serialize = function () {\n        return {\n            deserializer: 'RAMLConsoleView',\n            filename: this.getFilename(),\n            state: this.state\n        };\n    };\n    RAMLConsoleView.prototype.getFilename = function () {\n        if (this.file) {\n            return this.file.getPath();\n        }\n        if (this.editor) {\n            return this.editor.getPath();\n        }\n    };\n    RAMLConsoleView.prototype.getTitle = function () {\n        var name = 'RAML';\n        if (this.raml && this.raml.title() != null) {\n            name = this.raml.title();\n        }\n        else if (this.file) {\n            name = path.basename(this.getFilename());\n        }\n        else if (this.editor) {\n            name = this.editor.getTitle();\n        }\n        return name + ' Console';\n    };\n    RAMLConsoleView.prototype.destroy = function () {\n        this.stopWatching();\n        this.disposables.dispose();\n        React.unmountComponentAtNode(this.element);\n    };\n    RAMLConsoleView.prototype.setState = function (state, cb) {\n        this.state = extend(this.state, state);\n        this.render(cb);\n    };\n    RAMLConsoleView.prototype.setPageState = function (pageState, cb) {\n        this.pageState = extend(this.pageState, pageState);\n        this.render(cb);\n    };\n    RAMLConsoleView.prototype.setParameter = function (group, name, value) {\n        // TODO(blakeembrey): Use computed properties on TypeScript 1.5+.\n        var state = {};\n        var groupState = extend(this.state[group]);\n        // Remove falsy values from view.\n        if (value) {\n            groupState[name] = value;\n        }\n        else {\n            delete groupState[name];\n        }\n        state[group] = groupState;\n        this.setState(state);\n    };\n    RAMLConsoleView.prototype.getURI = function () {\n        return RAMLConsoleView.getUriForFilename(this.getFilename());\n    };\n    RAMLConsoleView.prototype.getUnit = function (path) {\n        return this.project.unit(path, true);\n    };\n    RAMLConsoleView.prototype.deleteUnit = function (path) {\n        this.project.deleteUnit(path);\n        this.updateRAML();\n    };\n    RAMLConsoleView.prototype.updateUnit = function (path, contents) {\n        this.getUnit(path).updateContent(this.readFileSync(path));\n        this.updateRAML();\n    };\n    return RAMLConsoleView;\n}(SpacePenViews.ScrollView));\nexports.RAMLConsoleView = RAMLConsoleView;\nvar FSResolverImpl = (function () {\n    function FSResolverImpl() {\n    }\n    FSResolverImpl.prototype.content = function (path) {\n        if (!fs.existsSync(path)) {\n            return null;\n        }\n        try {\n            return fs.readFileSync(path).toString();\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    FSResolverImpl.prototype.list = function (path) {\n        return fs.readdirSync(path);\n    };\n    FSResolverImpl.prototype.contentAsync = function (path) {\n        return new Promise(function (resolve, reject) {\n            fs.readFile(path, function (err, data) {\n                if (err != null) {\n                    return reject(err);\n                }\n                var content = data.toString();\n                resolve(content);\n            });\n        });\n    };\n    FSResolverImpl.prototype.listAsync = function (path) {\n        return new Promise(function (reject, resolve) {\n            fs.readdir(path, function (err, files) {\n                if (err != null) {\n                    return reject(err);\n                }\n                resolve(files);\n            });\n        });\n    };\n    return FSResolverImpl;\n}());\nexports.FSResolverImpl = FSResolverImpl;\n/**\n * Create a console resolver class.\n */\nvar ConsoleResolver = (function (_super) {\n    __extends(ConsoleResolver, _super);\n    function ConsoleResolver(readFileSync) {\n        _super.call(this);\n        this.readFileSync = readFileSync;\n    }\n    ConsoleResolver.prototype.content = function (path) {\n        return this.readFileSync(path);\n    };\n    return ConsoleResolver;\n}(FSResolverImpl));\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/console-view.js\n ** module id = 44\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar SC = require(\"../util/ScrollViewUI\");\nvar path = require('path');\nvar CompositeDisposable = UI.CompositeDisposable;\nvar hl = require(\"raml-1-parser\");\nvar details = require(\"./details\");\nvar schemaUI = require(\"./schemaUI\");\nvar editorTools = require(\"./editor-tools\");\nvar dialogs = require(\"../dialogs/dialogs\");\nvar fs = require(\"fs\");\nvar universeHelpers = hl.universeHelpers;\nvar RamlDetails = (function (_super) {\n    __extends(RamlDetails, _super);\n    function RamlDetails(allowStructureChanges) {\n        if (allowStructureChanges === void 0) { allowStructureChanges = true; }\n        _super.call(this);\n        this.allowStructureChanges = allowStructureChanges;\n        this.disposables = new CompositeDisposable();\n        this.addClass('raml-details');\n    }\n    RamlDetails.prototype.getTitle = function () {\n        return \"Details\";\n    };\n    RamlDetails.prototype.attached = function () {\n        try {\n            this.element.innerHTML = \"<div></div>\";\n            this._children = [];\n            this.container = UI.vc();\n            this.addChild(this.container);\n            this.ui().appendChild(this.container.ui());\n            _super.prototype.attached.call(this);\n        }\n        catch (e) {\n        }\n    };\n    RamlDetails.prototype.setSchema = function (node) {\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        var key = node.attr(\"key\"), value = node.attr(\"value\");\n        var ssto = 12;\n        if (value == null) {\n            this.container.clear();\n            var errLabel = UI.h3(\"Selected schema has incorrect node so cannot be displayed.\");\n            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n            this.container.addChild(errLabel);\n            return;\n        }\n        //FIXME\n        setInterval(function () {\n            if (ssto++ != 12)\n                return;\n            if (value) {\n                value.setValue(schemaText);\n                schemaUI._updatePreview(treeView, schemaText);\n            }\n        }, 100);\n        var schemaText = value.value();\n        this.container.clear();\n        var textView = dialogs.smallEditor(function (e, v) {\n            if (value.lowLevel().includePath()) {\n                try {\n                    var sm = path.dirname(node.lowLevel().unit().absolutePath());\n                    var relative = path.resolve(sm, value.lowLevel().includePath());\n                    if (!value.lowLevel().includeReference()) {\n                        fs.writeFileSync(relative, v);\n                    }\n                }\n                catch (e) {\n                    console.log(e);\n                }\n            }\n            // if (v!=schemaText) textView.setText(schemaText); // read-only variant\n            schemaText = v;\n            ssto = 0;\n        });\n        dialogs._updateEditor(textView, schemaText);\n        var treeView = schemaUI._schemaPreview();\n        schemaUI._updatePreview(treeView, schemaText);\n        var schemaTab = new UI.TabFolder();\n        schemaTab.add(\"Tree view\", UI.Icon.GIT_MERGE, treeView);\n        schemaTab.add(\"Text view\", UI.Icon.FILE_TEXT, textView);\n        this.container.addChild(schemaTab);\n        window['detailsnode'] = node;\n        if (details.oldItem) {\n            details.oldItem.detach();\n            details.oldItem = null;\n        }\n        this.schemaView = textView;\n        this.wasSchema = true;\n    };\n    RamlDetails.prototype.setResource = function (node) {\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        this.wasSchema = false;\n        var hnode = node;\n        window[\"detailsnode\"] = hnode;\n        if (hnode == null || hnode.lowLevel() == null)\n            this.displayEmpty();\n        console.log(\"Displaying details for node \" + hnode.name());\n        details.updateDetailsPanel(hnode, this.container, true);\n    };\n    RamlDetails.prototype.update = function () {\n        if (window[\"detailsnode\"]) {\n            this.setResource(window[\"detailsnode\"]);\n        }\n    };\n    RamlDetails.prototype.displayEmpty = function () {\n        this.container.clear();\n        if (!editorTools.aquireManager().ast) {\n            this.container.addChild(UI.h3(\"Our API is fabulously empty\").margin(8, 8, 20, 8));\n            var create = new UI.Button(\"Create new API\", UI.ButtonSizes.LARGE, UI.ButtonHighlights.SUCCESS, UI.Icon.REPO_CLONE, function () { return dialogs.newApi(); });\n            create.margin(8, 8, 20, 0);\n            this.container.addChild(create);\n        }\n    };\n    RamlDetails.prototype.destroy = function () {\n        editorTools.aquireManager()._details = null;\n        this.disposables.dispose();\n        this._node = null;\n        this.container.dispose();\n        this.container = null;\n        window[\"detailsnode\"] = null;\n        this._children = [];\n        if (details.oldItem) {\n            details.oldItem.detach();\n        }\n        if (this.wasSchema) {\n            this.schemaView.dispose();\n            this.schemaView = null;\n        }\n        details.oldItem = null;\n    };\n    RamlDetails.prototype.show = function (node) {\n        if (this._node == node)\n            return;\n        this._node = node;\n        try {\n            if (isSchema(node))\n                this.setSchema(this._node);\n            else\n                this.setResource(node);\n        }\n        catch (e) { }\n    };\n    return RamlDetails;\n}(SC.Scrollable));\nexports.RamlDetails = RamlDetails;\nfunction isSchema(p) {\n    if (!p) {\n        return false;\n    }\n    return universeHelpers.isGlobalSchemaType(p.definition());\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details-view.js\n ** module id = 45\n ** module chunks = 0\n **/","module.exports = require(\"emissary\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"emissary\"\n ** module id = 46\n ** module chunks = 0\n **/","module.exports = require(\"raml-outline\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"raml-outline\"\n ** module id = 47\n ** module chunks = 0\n **/","module.exports = require(\"xmldom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmldom\"\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = require(\"yaml-ast-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"yaml-ast-parser\"\n ** module id = 49\n ** module chunks = 0\n **/","module.exports = require(\"react\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 50\n ** module chunks = 0\n **/","module.exports = require(\"xtend\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xtend\"\n ** module id = 51\n ** module chunks = 0\n **/","module.exports = require(\"popsicle\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"popsicle\"\n ** module id = 52\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar UI = require(\"atom-ui-lib\");\nvar khttp = require(\"know-your-http-well\");\n/**\n * Created by kor on 13/05/15.\n */\nvar rp = require(\"raml-1-parser\");\nvar path = require('path');\nvar defs = rp.ds;\nvar stubs = rp.stubs;\nvar services = defs;\nvar search = rp.search;\nvar fs = require(\"fs\");\nvar assistUtils = require(\"./assist-utils\");\nvar details2 = require(\"../editor-tools/details2\");\nvar details = require(\"../editor-tools/details\");\nvar editorTools = require(\"../editor-tools/editor-tools\");\nvar schemaUI = require(\"../editor-tools/schemaUI\");\nvar pair = require(\"../../util/pair\");\nvar universeModule = rp.universes;\nvar universeHelpers = rp.universeHelpers;\nvar _dialogPanels = [];\nvar remote = require(\"remote\");\nvar dialog;\nfunction getDialog() {\n    if (!dialog) {\n        try {\n            dialog = remote.require(\"electron\").dialog;\n        }\n        catch (e) {\n            console.log(e.message);\n        }\n    }\n    return dialog;\n}\ndialog = getDialog();\nfunction showError(message, details) {\n    getDialog().showMessageBox(remote.getCurrentWindow(), { type: 'error', buttons: ['Okay'], title: 'Error', message: message, detail: details });\n}\nexports.showError = showError;\nvar _methodDescriptions = null;\nfunction getMethodDescriptions() {\n    if (!_methodDescriptions) {\n        _methodDescriptions = Object.create(null);\n        var methodsProperty = editorTools.aquireManager().ast.definition().property(universeModule.Universe10.Api.properties.resources.name)\n            .range().property(universeModule.Universe10.ResourceBase.properties.methods.name);\n        var list = methodsProperty.enumOptions();\n        khttp.methods.filter(function (x) { return list.indexOf(x.method.toLowerCase()) > -1; }).forEach(function (method) {\n            var desc = method.description.trim().match(/^\\\"(.*)\\\"$/)[1];\n            _methodDescriptions[method.method.toLowerCase()] = desc ? desc : method.description;\n        });\n    }\n    return _methodDescriptions;\n}\nvar _statusCodeDescriptions = null;\nfunction getStatusCodeDescriptions() {\n    if (!_statusCodeDescriptions) {\n        _statusCodeDescriptions = Object.create(null);\n        khttp.statusCodes.forEach(function (code) {\n            var m, desc = code.description.trim();\n            if (m = desc.match(/^\\\"(.*)\\\"/))\n                desc = m[1];\n            _statusCodeDescriptions[code.code] = desc;\n        });\n        _statusCodeDescriptions['7xx'] = \"is for developer errors.\";\n    }\n    return _statusCodeDescriptions;\n}\nexports.getStatusCodeDescriptions = getStatusCodeDescriptions;\nfunction newApi() {\n    var title = \"\", version = \"\", baseUri = \"\", sample = true, raml1 = true;\n    var tfTitle = new UI.TextField(\"API Title*\", title, function (e, v) { return title = v; });\n    var tfVersion = new UI.TextField(\"Version\", version, function (e, v) { return version = v; });\n    var tfBaseURI = new UI.TextField(\"Base URI\", baseUri, function (e, v) { return baseUri = v; });\n    tfTitle.setTabIndex(100);\n    tfTitle.margin(0, 0, 8, 0);\n    tfVersion.setTabIndex(101);\n    tfVersion.margin(0, 0, 8, 0);\n    tfBaseURI.setTabIndex(102);\n    tfBaseURI.margin(0, 0, 8, 0);\n    var cbSample = new UI.CheckBox(\"Create sample resource\", null, function (e, v) { return sample = v; });\n    cbSample.setValue(sample);\n    var cbRaml1 = new UI.CheckBox(\"Generate 1.0 model\", null, function (e, v) { return raml1 = v; });\n    cbRaml1.setValue(raml1);\n    var panel = UI.section(\"Create new API\", UI.Icon.DASHBOARD, false, false, tfTitle, tfVersion, tfBaseURI, UI.hc(cbSample, cbRaml1).margin(0, 0, 12, 12));\n    _dialog(panel, function () {\n        if (title == '') {\n            showError(\"Cannot create API\", \"Title must not be empty\");\n            return false;\n        }\n        editorTools.aquireManager().setText(assistUtils.createRAMLFile(title, version, baseUri, sample, raml1));\n        return true;\n    }, tfTitle)(this);\n    tfTitle.getActualField().ui().focus();\n}\nexports.newApi = newApi;\nvar typeValues = function (parent) {\n    var isSchema = false;\n    var tp = parent.definition().universe().type(universeModule.Universe10.TypeDeclaration.name);\n    if (!tp) {\n        isSchema = true;\n        tp = parent.definition().universe().type(universeModule.Universe08.BodyLike.name);\n    }\n    var sh = tp.property(universeModule.Universe10.TypeDeclaration.properties.schema.name);\n    var types = [];\n    if (sh) {\n        types = search.enumValues(sh, parent);\n    }\n    return { isSchema: isSchema, types: types };\n};\nfunction newMethod(parent, method) {\n    var mdesc = getMethodDescriptions();\n    var cdesc = getStatusCodeDescriptions();\n    var NO_RESPONCE = \"No response\";\n    var NO_RESPONCE_BT = \"No response body type\";\n    var code = null, bodyType = null;\n    if (method == null)\n        method = \"get\";\n    var mdescLabel = new UI.LabelField();\n    var cdescLabel = new UI.LabelField();\n    [mdescLabel, cdescLabel].forEach(function (x) { return x.addClass('wizard-description'); });\n    mdescLabel.getActualField().margin(0, 0, 18, 8);\n    cdescLabel.getActualField().margin(0, 0, 8, 8);\n    var methodSelect = new UI.SelectField(\"Method:\", function (e, v) {\n        method = v;\n        mdescLabel.setText(\"Method \" + v + \" \" + mdesc[v]);\n    }, null);\n    methodSelect.getActualField().setOptions(Object.keys(mdesc));\n    methodSelect.getActualField().setValue(method, true);\n    var responseSelect = new UI.SelectField(\"Status code:\", function (e, v) {\n        if (v == NO_RESPONCE) {\n            v = null;\n            responseTypeSelect.getActualField().setValue(NO_RESPONCE_BT);\n        }\n        code = v;\n        responseTypeSelect.setDisabled(v == null);\n        cdescLabel.setText(v ? \"Status code \" + v + \" \" + cdesc[v] : '');\n    }, null);\n    responseSelect.getActualField().setOptions([NO_RESPONCE].concat(Object.keys(cdesc)));\n    var responseTypeSelect = new UI.SelectField(\"Generate default response with media type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT) {\n            v = null;\n            typeOfValue.setDisabled(true);\n        }\n        else\n            typeOfValue.setDisabled(false);\n        bodyType = v;\n    }, null);\n    responseTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n    responseTypeSelect.setDisabled(true);\n    responseTypeSelect.margin(0, 0, 0, 12);\n    var realBodyType = null;\n    var bodyTypeSelect = new UI.SelectField(\"Generate default body with media type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT) {\n            v = null;\n            bodyTypeOfValue.setDisabled(true);\n        }\n        else\n            bodyTypeOfValue.setDisabled(false);\n        realBodyType = v;\n    }, null);\n    bodyTypeSelect.getActualField().setOptions([NO_RESPONCE_BT, \"application/json\", \"application/xml\", \"application/x-www-form-urlencoded\"]);\n    bodyTypeSelect.margin(0, 0, 0, 12);\n    var actualType = null;\n    var bodyTypeString = null;\n    var typeOfValue = new UI.SelectField(\"Generate default response body with type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT)\n            v = null;\n        actualType = v;\n    }, null);\n    typeOfValue.setDisabled(true);\n    typeOfValue.margin(0, 0, 0, 12);\n    var __ret = typeValues(parent);\n    var isSchema = __ret.isSchema;\n    var types = __ret.types;\n    if (types) {\n        types = [\"\"].concat(types);\n        typeOfValue.getActualField().setOptions(types);\n    }\n    var bodyTypeOfValue = new UI.SelectField(\"Generate default body with type:\", function (e, v) {\n        if (v == NO_RESPONCE_BT)\n            v = null;\n        bodyTypeString = v;\n    }, null);\n    bodyTypeOfValue.setDisabled(true);\n    bodyTypeOfValue.margin(0, 0, 0, 12);\n    var isSchema = __ret.isSchema;\n    var types = __ret.types;\n    if (types) {\n        types = [\"\"].concat(types);\n        bodyTypeOfValue.getActualField().setOptions(types);\n    }\n    var responseSection = UI.section(\"\");\n    responseSection.addChild(UI.h3(\"Body\"));\n    responseSection.addChild(bodyTypeSelect);\n    responseSection.addChild(bodyTypeOfValue);\n    responseSection.addChild(UI.h3(\"Response\"));\n    responseSection.addChild(responseSelect);\n    responseSection.addChild(cdescLabel);\n    responseSection.addChild(responseTypeSelect);\n    responseSection.addChild(typeOfValue);\n    responseSection.ui();\n    var panel = UI.section(\"Creating a new method\", UI.Icon.CODE, false, false, methodSelect, mdescLabel, responseSection);\n    var __ret = typeValues(parent);\n    //panel.addChild(typeOfValue)\n    _dialog(panel, function () {\n        var oldNode = parent.elementsOfKind('methods').filter(function (el) { return (el.attr('method').value() == method); })[0];\n        if (oldNode) {\n            showError(\"Method \" + method + \" already exists\", \"Node contents will be overwritten\");\n            parent.remove(oldNode);\n        }\n        var methodNode = stubs.createMethodStub(parent, method);\n        if (realBodyType) {\n            var bodyNode = stubs.createBodyStub(methodNode, realBodyType);\n            if (bodyTypeString) {\n                if (isSchema) {\n                    bodyNode.attrOrCreate(\"schema\").setValue(bodyTypeString);\n                }\n                else\n                    bodyNode.attrOrCreate(\"type\").setValue(bodyTypeString);\n            }\n            methodNode.add(bodyNode);\n        }\n        if (code) {\n            var codeNode = stubs.createResponseStub(methodNode, code);\n            methodNode.add(codeNode);\n            if (bodyType) {\n                var bodyNode = stubs.createBodyStub(codeNode, bodyType);\n                if (actualType) {\n                    if (isSchema) {\n                        bodyNode.attrOrCreate(\"schema\").setValue(actualType);\n                    }\n                    else\n                        bodyNode.attrOrCreate(\"type\").setValue(actualType);\n                }\n                codeNode.add(bodyNode);\n            }\n        }\n        parent.add(methodNode);\n        editorTools.updateAndSelect(methodNode);\n        return true;\n    })(this);\n}\nexports.newMethod = newMethod;\nfunction getStringValue(x) {\n    if (typeof x === \"object\")\n        return x.valueName();\n    else\n        return x;\n}\nexports.getStringValue = getStringValue;\nfunction typeEditDialog(name, value, node, onDone) {\n    var typePanel = UI.vc();\n    typePanel.margin(8, 8, 20, 8);\n    var typeProperty = node.definition().property(name);\n    var toPropagate = svMap(node, name);\n    var typeList = editorTools.aquireManager().ast.elementsOfKind(\"resourceType\").map(function (x) { return x.name(); });\n    var typeName = getStringValue(value);\n    var select = new UI.SelectField('Type: ', function (e, v) {\n        if (v == EMPTY_VALUE) {\n            value = \"\";\n            typePanel.clear();\n            typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n            return;\n        }\n        value = rp.utils.genStructuredValue(v, node, typeProperty);\n        var typeNode = ((typeof value) === \"object\") ? value.toHighLevel(editorTools.aquireManager().ast) : null;\n        propagateValues(typeNode, toPropagate);\n        details.updateDetailsPanel(typeNode, typePanel);\n        if (typeNode && typeNode.definition().allProperties().length == 0) {\n            value = v;\n        }\n    });\n    var EMPTY_VALUE = \"(no value)\";\n    select.getActualField().setOptions([EMPTY_VALUE].concat(typeList));\n    select.setPercentWidth(100);\n    if (typeList.indexOf(typeName) < 0) {\n        select.getActualField().setValue(EMPTY_VALUE);\n        if (typeName != \"\")\n            typePanel.addChild(UI.label(\"Type `\" + typeName + \"` does not exists\", null, UI.TextClasses.ERROR).setStyle(\"display\", \"block\"));\n        typePanel.addChild(UI.label(\"Select some type from the list above to show its additional properties\", null, UI.TextClasses.HIGHLIGHT));\n    }\n    else\n        select.getActualField().setValue(typeName, true);\n    var panel = UI.section(\"Editing type value `\" + name + '`:', UI.Icon.CIRCUIT_BOARD, null, null, select, typePanel);\n    return _dialog(panel, function () { onDone(value); return true; });\n}\nexports.typeEditDialog = typeEditDialog;\nfunction svMap(node, attr) {\n    try {\n        var map = new pair.Map();\n        var values = node.attributes(attr).map(function (x) { return x.value(); }).filter(function (x) { return typeof x === \"object\"; });\n        values.forEach(function (val) { return val.lowLevel().children().forEach(function (c) { return map.set(c.key(), c.value()); }); });\n        return map;\n    }\n    catch (e) {\n        return null;\n    }\n}\nfunction propagateValues(node, map) {\n    if (!node || !map)\n        return;\n    map.pairs().forEach(function (pair) {\n        if (node.definition().property(pair.key))\n            node.attrOrCreate(pair.key).setValue(pair.value);\n    });\n}\nfunction getResourceParent(node) {\n    if (!node || !node.property())\n        return null;\n    if (universeHelpers.isResourcesProperty(node.property()))\n        return node;\n    return getResourceParent(node.parent());\n}\nexports.getResourceParent = getResourceParent;\nfunction enumEditDialog(name, value, onDone) {\n    var _cp = {\n        elements: function (model) { return model; },\n        init: function (viewer) { },\n        dispose: function () { }\n    };\n    var renderer = {\n        render: function (model) { return UI.hc(UI.label(model, UI.Icon.GIT_COMMIT), UI.a(\"\", function (e) {\n            value = value.filter(function (x) { return x != e.id(); });\n            list.remove(e.id());\n        }, UI.Icon.TRASHCAN).pad(8, 8).setId(model)).addClass(\"outline\"); }\n    };\n    var list = new UI.ListView(_cp, renderer);\n    list.setBasicLabelFunction(function (x) { return x; });\n    list.setInput(value, true);\n    var text = UI.texfField(\"\", \"\", function (x) { return x; }).margin(0, 0, 4, 4);\n    text.addKeyPressListener(function (i, e) {\n        if (e.keyCode != 13)\n            return;\n        var b = i.getBinding();\n        var newValue = b.get();\n        b.set(\"\");\n        value.push(newValue);\n        list.setInput(value, true);\n    });\n    var panel = UI.section(\"Editing enum value `\" + name + '`:', UI.Icon.LIST_UNORDERED, null, null, UI.h3(\"List of elements in enum:\").margin(0, 0, 20, 0), list.margin(20, 20), UI.h3(\"Add new element:\").margin(0, 0, 20, 0), text);\n    return _dialog(panel, function () { onDone(value); return true; }, text); //\n}\nexports.enumEditDialog = enumEditDialog;\nfunction calculatesParentURIPath(resource) {\n    var result = resource.attrValue(\"relativeUri\");\n    if (!result)\n        return null;\n    var current = getResourceParent(resource.parent());\n    while (current) {\n        var segment = current.attrValue(\"relativeUri\");\n        if (!segment)\n            return null;\n        result = segment + result;\n        current = getResourceParent(current.parent());\n    }\n    return result;\n}\nfunction newResource(parent) {\n    var uri = \"/\";\n    var uriLable = \"\";\n    var resourceParent = getResourceParent(parent);\n    var parentsPath = null;\n    if (resourceParent) {\n        parentsPath = calculatesParentURIPath(resourceParent);\n        if (parentsPath) {\n            uriLable = parentsPath;\n        }\n    }\n    var uriTF = uriTF = new UI.TextField(uriLable, uri, function (e, v) {\n        uri = v;\n    });\n    uriTF.margin(0, 0, 6, 12);\n    var methods = {};\n    var methodsPanel = UI.vc().margin(0, 0, 0, 12);\n    Object.keys(getMethodDescriptions())\n        .forEach(function (val) {\n        var ch = new UI.CheckBox(val, null, function (x) {\n            if (methods[val]) {\n                delete methods[val];\n            }\n            else {\n                methods[val] = x;\n            }\n        }).addClass(\"checkbox-group\");\n        var hcp = UI.vc().margin(0, 0, 15, 0);\n        hcp.addChild(ch);\n        var desc = val + \":\" + getMethodDescriptions()[val];\n        methodsPanel.addChild(UI.vc(hcp));\n        var label = UI.label(desc, UI.Icon.NONE, UI.TextClasses.SUBTLE).margin(5, 10, -4, 0);\n        methodsPanel.addChild(label);\n    });\n    var node = stubs.createResourceStub(parent, uri);\n    var resourceTypeProp = UI.select(\"type\");\n    var sm = search.globalDeclarations(parent).filter(function (x) { return universeHelpers.isResourceTypeType(x.definition()) && !x.definition().getAdapter(services.RAMLService).isUserDefined(); });\n    var options = sm.map(function (x) { return rp.search.qName(x, parent); });\n    var options = [\"\"].concat(options);\n    resourceTypeProp.setOptions(options);\n    //var resourceTypeProp = details.property2(node, \"type\");\n    var panel = UI.section(\"Creating a new resource\", UI.Icon.BOOK, false, false);\n    panel.addChild(UI.label(\"New resource URI:\"));\n    panel.addChild(uriTF);\n    panel.addChild(UI.label(\"Type:\"));\n    panel.addChild(resourceTypeProp);\n    panel.addChild(UI.label(\"Add additional methods:\").margin(0, 0, 18, 6));\n    panel.addChild(methodsPanel);\n    _dialog(panel, function () {\n        if (uri.indexOf('/') != 0)\n            return false;\n        node.attrOrCreate(\"relativeUri\").setValue(uri);\n        Object.keys(methods).filter(function (x) { return methods[x]; }).forEach(function (method) {\n            var stub = stubs.createMethodStub(node, method);\n            stub.attrOrCreate(\"method\").setValue(method);\n            node.add(stub);\n        });\n        var vl = resourceTypeProp.getValue();\n        if (vl) {\n            node.attrOrCreate(\"type\").setValue(vl);\n        }\n        parent.add(node);\n        editorTools.updateAndSelect(node);\n        return true;\n    }, uriTF, true)(this);\n    uriTF.getActualField().ui().focus();\n    //(<UI.TextField>resourceTypeProp).hideLabel();\n    if (!parentsPath) {\n        uriTF.hideLabel();\n    }\n    else {\n        uriTF.makeLabelNextToField();\n    }\n}\nexports.newResource = newResource;\nfunction newNode(parent, title, property, key) {\n    if (key === void 0) { key = \"key\"; }\n    var name = \"\", type = \"\";\n    if (parent == null) {\n        return;\n    }\n    if (property == \"body\") {\n        key = \"application/json\";\n    }\n    var stub = stubs.createStub(parent, property, key);\n    var item = details2.buildItem(stub, true);\n    item.setTitle(title);\n    var panel = item.render({ showDescription: true });\n    panel.margin(8, 8, 8, 8);\n    _dialog(panel, function () {\n        stub._parent = null;\n        stub.lowLevel()._unit = null;\n        parent.add(stub);\n        editorTools.updateAndSelect(stub);\n        return true;\n    }, null)(this);\n}\nexports.newNode = newNode;\nfunction traitsEditDialog(name, values, node, onDone) {\n    var toPropagate = svMap(node, name);\n    var tabs = new UI.TabFolder();\n    var sel = UI.vc(UI.h3(\"Enabled traits: \")).margin(10, 10, 0, 0);\n    tabs.margin(0, 0, 20, 10);\n    tabs.add(\"Traits\", UI.Icon.FILE_SUBMODULE, sel);\n    var traitProperty = node.definition().property(name);\n    var ui = {};\n    var index = 0;\n    var returnv = node.root().elementsOfKind('traits').map(function (trait) {\n        var traitName = trait.name();\n        var traitValue = rp.utils.genStructuredValue(traitName, node, traitProperty);\n        var traitNode = (typeof traitValue === \"object\") ? traitValue.toHighLevel() : null;\n        if (traitNode && traitNode.definition().allProperties().length == 0)\n            traitValue = traitName;\n        var returnee = {\n            index: index,\n            name: traitName,\n            value: traitValue,\n            enabled: values.filter(function (x) { return getStringValue(x) == traitName; }).length > 0\n        };\n        propagateValues(traitNode, toPropagate);\n        var tcb = UI.checkBox(returnee.name, function (e) {\n            returnee.enabled = tcb.getValue();\n            tabs.toggle(1 + returnee.index, returnee.enabled);\n        });\n        tcb.margin(12, 12);\n        tcb.setValue(returnee.enabled);\n        sel.addChild(tcb);\n        var traitPanel = UI.vc();\n        traitPanel.margin(8, 8, 20, 8);\n        details.updateDetailsPanel(traitNode, traitPanel);\n        tabs.add(traitName, UI.Icon.CIRCUIT_BOARD, traitPanel);\n        tabs.toggle(1 + index, returnee.enabled);\n        index += 1;\n        return returnee;\n    });\n    var panel = UI.section(\"Editing trait value `\" + name + \"`:\", UI.Icon.CIRCUIT_BOARD, null, null, tabs);\n    return _dialog(panel, function () { onDone(returnv); return true; });\n}\nexports.traitsEditDialog = traitsEditDialog;\nfunction getNewSchemaPath(schema) {\n    return path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath()) + '/' + (schema.length > 0 ? schema + '.raml' : \"\");\n}\nfunction schemaText(nameOrValue) {\n    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n    return schema ? schema.value().value() : \"\";\n}\nfunction schemaEditDialog(name, value, onDone) {\n    var NEW_SCHEMA = \"(New Schema)\";\n    var schemas = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }); // list of all available schema names\n    var refValue = schemas.indexOf(value) >= 0;\n    var text = refValue ? _schemaText(value) : value;\n    var sname = refValue ? value : \"\";\n    var timeout = 0;\n    var editor = smallEditor(function (e, v) { timeout = 0; });\n    var preview = schemaUI._schemaPreview();\n    var intervalId = setInterval(function () {\n        if (timeout++ < 5)\n            return;\n        timeout = 0;\n        schemaUI._updatePreview(preview, editor.getValue());\n    }, 100);\n    var select = new UI.SelectField('Select schema: ', function (e, v) {\n        sname = v;\n        text = schemaText(v);\n        _updateEditor(editor, text);\n    });\n    select.getActualField().setOptions([NEW_SCHEMA].concat(schemas));\n    select.setPercentWidth(100);\n    if (refValue)\n        select.getActualField().setValue(sname);\n    _updateEditor(editor, text);\n    var tabs = new UI.TabFolder();\n    tabs.add(\"Write\", UI.Icon.FILE_TEXT, editor);\n    tabs.add(\"Preview\", UI.Icon.GIT_MERGE, preview);\n    var panel = UI.section(\"Editing schema value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, select, tabs);\n    var NoSchema = function () {\n        showError(\"No schema entered\", \"Please enter a valid schema or select one from the list before proceeding.\");\n        return false;\n    };\n    var InvalidSchema = function () {\n        showError(\"Invalid schema\", \"Please fix the errors in the schema before saving it.\");\n        return false;\n    };\n    return _dialog2(panel, [\n        {\n            name: \"Save as reference\",\n            highlight: UI.ButtonHighlights.INFO,\n            action: function () {\n                var newText = editor.getValue();\n                var isChanged = (text != newText);\n                if (!isChanged && sname == NEW_SCHEMA)\n                    return NoSchema();\n                else if (validateSchema(newText) == false)\n                    return InvalidSchema();\n                if (isChanged) {\n                    var res = saveSchema(sname, newText);\n                    if (res) {\n                        onDone(res);\n                        clearInterval(intervalId);\n                        return true;\n                    }\n                    else\n                        return false;\n                }\n                else {\n                    onDone(sname);\n                    clearInterval(intervalId);\n                    return true;\n                }\n            }\n        },\n        {\n            name: \"Save as text\",\n            highlight: UI.ButtonHighlights.WARNING,\n            action: function () {\n                var newText = editor.getValue();\n                var isChanged = (text != newText);\n                if (newText == \"\")\n                    return NoSchema();\n                else if (validateSchema(newText) == false)\n                    return InvalidSchema();\n                select.getActualField().setValue(NEW_SCHEMA);\n                sname = \"Untitled\";\n                onDone(newText);\n                clearInterval(intervalId);\n                return true;\n            }\n        },\n        {\n            name: \"Cancel\",\n            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n            action: function () { clearInterval(intervalId); return true; }\n        }\n    ]);\n}\nexports.schemaEditDialog = schemaEditDialog;\nfunction _updateEditor(editor, value) {\n    var schema = rp.schema.createSchema(value, null);\n    var schemaType = (schema == null || schema.getType == null) ? \"text/plain\" : schema.getType();\n    editor.setGrammar(schemaType);\n    editor.setText(value);\n}\nexports._updateEditor = _updateEditor;\nfunction validateSchema(schema) {\n    return true;\n}\nfunction saveSchema(name, value) {\n    var schema = rp.schema.createSchema(value, null);\n    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n    var projectFolder = path.dirname(editorTools.aquireManager().ast.lowLevel().unit().absolutePath());\n    var ext;\n    var filter;\n    switch (schema.getType()) {\n        case 'source.json':\n            filter = [filterJSON];\n            ext = \".json\";\n            break;\n        case 'text.xml':\n            filter = [filterXML];\n            ext = \".xsd\";\n            break;\n        default:\n            filter = [];\n    }\n    var result = getDialog().showSaveDialog(remote.getCurrentWindow(), {\n        title: 'Save schema',\n        defaultPath: path.resolve(projectFolder, \"schemas\", name + ext),\n        filters: filter\n    });\n    if (result == null)\n        return null;\n    var fname = path.basename(result);\n    var ename = path.extname(fname);\n    var sname = fname.substr(0, fname.indexOf(ename));\n    var rpath = path.relative(projectFolder, result);\n    if (editorTools.aquireManager().ast.elementsOfKind(\"schemas\").map(function (x) { return x.name(); }).indexOf(sname) == -1)\n        assistUtils.createGlobalSchemaFromNameAndContent(editorTools.aquireManager().ast.root(), sname, rpath, value, result);\n    return sname;\n}\nfunction markdown(name, values, onDone) {\n    var editor = new UI.AtomEditorElement(values.join('\\n'), function (e) { });\n    editor.margin(0, 0, 6, 12);\n    editor.setMini(false);\n    editor.setGrammar('source.gfm');\n    var panel = UI.section(\"Editing markdown value `\" + name + '`:', UI.Icon.FILE_TEXT, false, false, UI.h3(\"Please note that lines might be long enough so window would scroll.\").margin(0, 0, 20, 0), editor);\n    return _dialog(panel, function () { onDone(editor.getBinding().get()); return true; }, editor);\n}\nexports.markdown = markdown;\nfunction exampleEditorDialog(name, rpath, value, onDone) {\n    var editor = smallEditor(function (e, v) {\n        if (v.indexOf('xml') > 0)\n            editor.setGrammar('text.xml');\n        else\n            editor.setGrammar('source.json');\n    });\n    editor.setText(value);\n    var projectPath = path.dirname(editorTools.aquireManager().getPath());\n    var refPath = new UI.TextField(\"Referenced from\", rpath, function (e, v) { return rpath = v; }, null, \"No reference path provided\");\n    refPath.addChild(new UI.Button(\"Browse\", UI.ButtonSizes.SMALL, UI.ButtonHighlights.NO_HIGHLIGHT, null, function () {\n        var res = UI.fdUtils.openFileDialogModal(\"Open a reference\", path.resolve(projectPath, rpath), []);\n        if (!res)\n            return;\n        refPath.getActualField().setText(path.relative(projectPath, rpath = res[0]));\n        value = fs.readFileSync(res[0]).toString(\"UTF-8\");\n        editor.setText(value);\n    }).margin(4, 0));\n    var reui = refPath.getActualField().ui();\n    reui.onclick = function (e) {\n        reui.blur();\n        if (reui.nextSibling['onclick'])\n            reui.nextSibling['onclick'](e);\n    };\n    var refFrom = UI.vc(UI.h3(\"Referenced\"));\n    var panel = UI.section(\"Editing example value `\" + name + \"`:\", UI.Icon.MICROSCOPE, null, null, refPath.margin(12, 12, 20, 12), editor.margin(12, 12, 20, 12));\n    return _dialog2(panel, [\n        {\n            name: \"Save as reference\",\n            highlight: UI.ButtonHighlights.INFO,\n            action: function () {\n                var newText = editor.getValue();\n                if ((value != newText)) {\n                    var res = saveExample(path.resolve(projectPath, rpath), newText);\n                    if (res) {\n                        onDone(path.relative(projectPath, res));\n                        return true;\n                    }\n                    else\n                        return false;\n                }\n                else {\n                    onDone(rpath);\n                    return true;\n                }\n            }\n        },\n        {\n            name: \"Save as text\",\n            highlight: UI.ButtonHighlights.WARNING,\n            action: function () { return onDone(editor.getValue()) == undefined || true; }\n        },\n        {\n            name: \"Cancel\",\n            highlight: UI.ButtonHighlights.NO_HIGHLIGHT,\n            action: function () { return true; }\n        }\n    ]);\n}\nexports.exampleEditorDialog = exampleEditorDialog;\nvar mdp = null;\nfunction _closeDialog() {\n    _dialogPanels.pop();\n    if (_dialogPanels.length == 0)\n        mdp.destroy();\n    else\n        mdp = atom.workspace.addModalPanel({ item: _dialogPanels[_dialogPanels.length - 1].ui() });\n}\nfunction saveExample(filePath, value) {\n    var filterJSON = { name: 'JSON schemas', extensions: ['json'] }, filterXML = { name: 'XML schemas', extensions: ['xsd'] }, filterAll = { name: 'All files', extensions: ['*'] };\n    var ext = value.indexOf('xml') < 0 ? 'json' : 'xml';\n    var filename = UI.fdUtils.saveFileDialogModal('Save an example', filePath, [filterJSON, filterXML, filterAll]);\n    if (filename)\n        fs.writeFileSync(filename, value);\n    return filename;\n}\nfunction _dialog2(panel, actions, toFocus, stretch) {\n    if (stretch === void 0) { stretch = false; }\n    var buttonBar = UI.hc().setPercentWidth(100);\n    actions.reverse().forEach(function (a) {\n        var button = UI.button(a.name, UI.ButtonSizes.NORMAL, a.highlight, UI.Icon.NONE, function (x) { if (a.action())\n            _closeDialog(); });\n        if (a.isPrimary) {\n            var st = panel.getBinding().status();\n            if (st) {\n                if (st.code == UI.StatusCode.ERROR) {\n                    button.setDisabled(true);\n                }\n            }\n            panel.getBinding().addStatusListener(function (x) {\n                var st = panel.getBinding().status();\n                if (st) {\n                    if (st.code != UI.StatusCode.ERROR) {\n                        button.setDisabled(false);\n                    }\n                    else {\n                        button.setDisabled(true);\n                    }\n                }\n            });\n        }\n        button.setStyle(\"float\", \"right\")\n            .margin(4, 10);\n        buttonBar.addChild(button);\n    });\n    panel.addChild(buttonBar);\n    var ui = panel.ui();\n    return function (e) {\n        _dialogPanels.push(panel);\n        var eventListener = function () {\n            if (!stretch) {\n                return;\n            }\n            var parent = ui.parentElement;\n            var height = document.body.clientHeight;\n            if (!parent) {\n                return;\n            }\n            var style = window.getComputedStyle(parent);\n            [\"paddingBottom\", \"paddingTop\", \"marginBottom\", \"marginTop\"].forEach(function (property) {\n                height -= parseFloat(style[property] || 0);\n            });\n            ui.style.height = height + \"px\";\n            ui.style.overflowY = \"scroll\";\n        };\n        window.addEventListener('resize', eventListener);\n        mdp = atom.workspace.addModalPanel({ item: ui });\n        mdp.onDidDestroy(function () {\n            window.removeEventListener('resize', eventListener);\n        });\n        eventListener();\n        if (toFocus)\n            toFocus.ui().focus();\n    };\n}\nfunction msg(m) {\n    showError(m, \"\");\n}\nexports.msg = msg;\nfunction smallEditor(onChange) {\n    if (!onChange)\n        onChange = function (e, v) { };\n    var editor = new UI.AtomEditorElement(\"\", onChange);\n    editor.setMini(false);\n    editor.setStyle(\"height\", \"400px\");\n    editor.setStyle(\"border\", \"solid\");\n    editor.setStyle(\"border-width\", \"1px\");\n    return editor;\n}\nexports.smallEditor = smallEditor;\nfunction _schemaText(nameOrValue) {\n    var schema = editorTools.aquireManager().ast.elementsOfKind(\"schemas\").filter(function (sch) { return sch.name() == nameOrValue; })[0];\n    return schema ? schema.value().value() : \"\";\n}\nfunction _dialog(panel, onDone, toFocus, stretch) {\n    if (stretch === void 0) { stretch = false; }\n    return _dialog2(panel, [\n        { name: \"Ok\", isPrimary: true, highlight: UI.ButtonHighlights.PRIMARY, action: onDone },\n        { name: \"Cancel\", highlight: UI.ButtonHighlights.NO_HIGHLIGHT, action: function () { return true; } }\n    ], toFocus, stretch);\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/dialogs/dialogs.js\n ** module id = 53\n ** module chunks = 0\n **/","\"use strict\";\nvar rp = require(\"raml-1-parser\");\nvar universes = rp.universes;\nexports.ResourcesCategory = \"Resources\";\nexports.SchemasAndTypesCategory = \"Schemas & Types\";\nexports.ResourceTypesAndTraitsCategory = \"Resource Types & Traits\";\nexports.OtherCategory = \"Other\";\n/**\n * Generates node key\n * @param node\n * @returns {any}\n */\nfunction keyProvider(node) {\n    if (!node)\n        return null;\n    if (node && !node.parent())\n        return node.name();\n    else\n        return node.name() + \" :: \" + keyProvider(node.parent());\n}\nexports.keyProvider = keyProvider;\nvar prohibit = {\n    resources: true,\n    schemas: true,\n    types: true,\n    resourceTypes: true,\n    traits: true\n};\nfunction isResource(p) {\n    return (p.definition().key() === universes.Universe08.Resource || p.definition().key() === universes.Universe10.Resource);\n}\nexports.isResource = isResource;\nfunction isOther(p) {\n    if (p.property()) {\n        var nm = p.property().nameId();\n        if (prohibit[nm]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isOther = isOther;\nfunction isResourceTypeOrTrait(p) {\n    var pc = p.definition().key();\n    return (pc === universes.Universe08.ResourceType\n        || pc === universes.Universe10.ResourceType ||\n        pc === universes.Universe08.Trait\n        ||\n            pc === universes.Universe10.Trait);\n}\nexports.isResourceTypeOrTrait = isResourceTypeOrTrait;\nfunction isSchemaOrType(p) {\n    if (p.parent() && p.parent().parent() == null) {\n        var property = p.property();\n        return property.nameId() == universes.Universe10.LibraryBase.properties.types.name ||\n            property.nameId() == universes.Universe10.LibraryBase.properties.schemas.name ||\n            property.nameId() == universes.Universe08.Api.properties.schemas.name;\n    }\n    return false;\n}\nexports.isSchemaOrType = isSchemaOrType;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/outline-common.js\n ** module id = 54\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/main.d.ts\" />\n\"use strict\";\nvar _ = require(\"underscore\");\nvar Opt = require(\"../Opt\");\nexports.defined = function (x) { return (x !== null) && (x !== undefined); };\n/**\n * Arrays of Objects are common in RAML08.\n * @param x\n * @returns {{}}\n */\nfunction flattenArrayOfObjects(x) {\n    var res = {};\n    x.forEach(function (v) { return Object.keys(v).forEach(function (k) { return res[k] = v[k]; }); });\n    return res;\n}\nexports.flattenArrayOfObjects = flattenArrayOfObjects;\nfunction find(xs, f) {\n    return new Opt(_.find(xs || [], f));\n}\nexports.find = find;\nexports.isInstance = function (v, C) { return (v instanceof C) ? [v] : []; };\nexports.ifInstanceOf = function (v, C, f) { return (v instanceof C) ? f(v) : null; };\nfunction toTuples(map) {\n    return Object.keys(map).map(function (k) { return [k, map[k]]; });\n}\nexports.toTuples = toTuples;\nfunction fromTuples(tuples) {\n    var obj = {};\n    tuples.forEach(function (x) { return obj[x[0]] = x[1]; });\n    return obj;\n}\nexports.fromTuples = fromTuples;\nexports.collectInstancesOf = function (xs, C) { return tap([], function (res) { return xs.forEach(function (v) { return exports.ifInstanceOf(v, C, function (x) { return res.push(x); }); }); }); };\nexports.collectInstancesOfInMap = function (map, C) {\n    return Object.keys(map).map(function (k) { return [k, map[k]]; }).filter(function (x) { return x[1] instanceof C; }).map(function (x) { return x; });\n};\nexports.asArray = function (v) { return exports.defined(v) ? ((v instanceof Array) ? v : [v]) : []; };\nexports.shallowCopy = function (obj) { return tap({}, function (copy) { return Object.keys(obj).forEach(function (k) { return copy[k] = obj[k]; }); }); };\nexports.flatMap = function (xs, f) { return exports.flatten(xs.map(f)); };\nexports.flatten = function (xss) { return Array.prototype.concat.apply([], xss); };\nexports.takeWhile = function (xs, f) { return tap([], function (res) {\n    for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i]))\n            break;\n        res.push(xs[i]);\n    }\n}); };\nfunction tap(v, f) {\n    f(v);\n    return v;\n}\nexports.tap = tap;\nfunction kv(obj, iter) {\n    if (typeof obj === 'object')\n        Object.keys(obj).forEach(function (k) { return iter(k, obj[k]); });\n}\nexports.kv = kv;\nfunction indexed(objects, key, delKey) {\n    if (delKey === void 0) { delKey = false; }\n    var obj = {};\n    objects.forEach(function (original) {\n        var copy = exports.shallowCopy(original);\n        if (delKey)\n            delete copy[key];\n        obj[original[key]] = copy;\n    });\n    return obj;\n}\nexports.indexed = indexed;\nfunction stringEndsWith(str, search) {\n    var dif = str.length - search.length;\n    return dif >= 0 && str.lastIndexOf(search) === dif;\n}\nexports.stringEndsWith = stringEndsWith;\nfunction stringStartsWith(str, search) {\n    return str.length - search.length >= 0 && str.substring(0, search.length) === search;\n}\nexports.stringStartsWith = stringStartsWith;\nfunction lazypropkeyfilter(k) {\n    return k[k.length - 1] == \"_\"; // ends with underscore\n}\nexports.lazypropkeyfilter = lazypropkeyfilter;\nfunction lazyprop(obj, key, func) {\n    var result, ready = false;\n    obj[key] = function () {\n        if (!ready) {\n            ready = true;\n            result = func.apply(obj);\n        }\n        return result;\n    };\n}\nfunction lazyprops(obj, keyfilter) {\n    if (keyfilter === void 0) { keyfilter = lazypropkeyfilter; }\n    for (var k in obj) {\n        if (keyfilter(k)) {\n            exports.ifInstanceOf(obj[k], Function, function (vf) { return (vf.length === 0) ? lazyprop(obj, k, vf) : null; });\n        }\n    }\n}\nexports.lazyprops = lazyprops;\nfunction iff(v, f) {\n    if (v !== undefined)\n        f(v);\n}\nexports.iff = iff;\nfunction isRAMLUrl(str) {\n    if (typeof str !== 'string' || str == '')\n        return false;\n    return stringEndsWith(str, \".raml\");\n}\nexports.isRAMLUrl = isRAMLUrl;\nfunction getAllRequiredExternalModulesFromCode(code) {\n    var match;\n    var mods = [];\n    // both quoting styles\n    var r1 = new RegExp(\"require\\\\('([^']+)'\\\\)\", \"gi\");\n    while (match = r1.exec(code)) {\n        mods.push(match[1]);\n    }\n    var r2 = new RegExp('require\\\\(\"([^\"]+)\"\\\\)', \"gi\");\n    while (match = r2.exec(code)) {\n        mods.push(match[1]);\n    }\n    mods = _.unique(mods).filter(function (x) { return x != \"\"; });\n    mods.sort();\n    return mods;\n}\nexports.getAllRequiredExternalModulesFromCode = getAllRequiredExternalModulesFromCode;\nexports.serial = (function () { var i = 0; return function () { return i++; }; })();\nfunction isEssential(arg) {\n    return typeof arg !== 'undefined' && arg != null;\n}\nexports.isEssential = isEssential;\nfunction firstToUpper(q) {\n    if (q.length == 0) {\n        return q;\n    }\n    return q.charAt(0).toUpperCase() + q.substr(1);\n}\nexports.firstToUpper = firstToUpper;\nfunction updateObject(source, target, addNewFields) {\n    if (addNewFields === void 0) { addNewFields = false; }\n    var keySet = Object.keys(target);\n    if (addNewFields) {\n        var map = {};\n        keySet.forEach(function (x) { return map[x] = true; });\n        Object.keys(source).forEach(function (x) { return map[x] = true; });\n        keySet = Object.keys(map);\n    }\n    keySet.forEach(function (x) {\n        var value = source[x];\n        if (value instanceof Object) {\n            if (!target[x]) {\n                target[x] = {};\n            }\n            updateObject(value, target[x], true);\n        }\n        else if (value != undefined) {\n            target[x] = source[x];\n        }\n    });\n}\nexports.updateObject = updateObject;\n;\n/**\n * In 'str' replace all occurences of 'map' keys to their values.\n */\nfunction replaceMap(str, map) {\n    Object.keys(map).forEach(function (x) { return str = replace(str, x, map[x]); });\n    return str;\n}\nexports.replaceMap = replaceMap;\n/**\n * Replace all occurences of 'x' in 'str' to 'r' without thinking if 'x' can be passed without\n * escaping as argument to RegExp constructor\n */\nfunction replace(str, x, r) {\n    var result = '';\n    var prev = 0;\n    for (var i = str.indexOf(x); i < str.length && i >= 0; i = str.indexOf(x, prev)) {\n        result += str.substring(prev, i);\n        result += r;\n        prev = i + x.length;\n    }\n    result += str.substring(prev, str.length);\n    return result;\n}\nexports.replace = replace;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/index.js\n ** module id = 55\n ** module chunks = 0\n **/","\"use strict\";\n/// <reference path=\"../../typings/main.d.ts\" />\nvar File = (function () {\n    function File(path) {\n        this.path = path;\n    }\n    File.prototype.getPath = function () {\n        return this.path;\n    };\n    File.prototype.close = function () { };\n    return File;\n}());\nexports.File = File;\nfunction watch(path, f) {\n    return { close: function () { } };\n}\nexports.watch = watch;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/pathwatcherProxy.js\n ** module id = 56\n ** module chunks = 0\n **/","\"use strict\";\nvar mime = require('mime');\nmime.define({\n    'text/xml': ['xml']\n});\nfunction getEditorById(editorId) {\n    var editors = atom.workspace.getTextEditors();\n    for (var i = 0; i < editors.length; i++) {\n        var editor = editors[i];\n        if (String(editor.id) === editorId) {\n            return editor;\n        }\n    }\n}\nexports.getEditorById = getEditorById;\nfunction getEditorByPath(path) {\n    var editors = atom.workspace.getTextEditors();\n    for (var i = 0; i < editors.length; i++) {\n        var editor = editors[i];\n        if (editor.getPath() === path) {\n            return editor;\n        }\n    }\n}\nexports.getEditorByPath = getEditorByPath;\nfunction getGrammerFromMime(mimeType) {\n    if (mimeType == null) {\n        return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n    }\n    var extension = mime.extension(mimeType);\n    var grammars = atom.grammars.getGrammars();\n    for (var i = 0; i < grammars.length; i++) {\n        var grammar = grammars[i];\n        if (grammar.fileTypes.indexOf(extension) > -1) {\n            return grammar;\n        }\n    }\n    return atom.grammars.grammarsByScopeName['text.plain.null-grammar'];\n}\nexports.getGrammerFromMime = getGrammerFromMime;\n/**\n * Create an Atom text editor instance for syntax highlighting.\n *\n * Source: https://github.com/atom/markdown-preview/blob/6d672aca4cff48420977708c31290018622bb166/lib/renderer.coffee#L102-L126\n */\nfunction codeToEditorElement(code, grammar) {\n    var editorElement = document.createElement('atom-text-editor');\n    editorElement.setAttributeNode(document.createAttribute('gutter-hidden'));\n    editorElement.removeAttribute('tabindex'); // Make read-only.\n    var editor = editorElement.getModel();\n    editor.getDecorations({ class: 'cursor-line', type: 'line' })[0].destroy();\n    editor.setText(code);\n    editor.setGrammar(grammar);\n    return editorElement;\n}\nexports.codeToEditorElement = codeToEditorElement;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/util/atom.js\n ** module id = 57\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar marked = require('marked');\nvar React = require('react');\nvar extend = require('xtend');\nvar classnames = require('classnames');\nvar PureComponent = require('react-pure-render/component');\nvar pretty = require('pretty-data');\nvar rp = require(\"raml-1-parser\");\nvar highLevelAst = rp.hl;\nvar RamlWrapper1 = rp.api10;\nvar RamlWrapper08 = rp.api08;\nvar atomUtil = require('../util/atom');\nvar services = rp.ds;\nvar BULLET_TEXT = '\\u00b7';\nvar METHOD_CLASS_MAP = {\n    'get': 'btn-primary',\n    'get?': 'btn-primary',\n    'post': 'btn-success',\n    'post?': 'btn-success',\n    'delete': 'btn-error',\n    'delete?': 'btn-error',\n    'put': 'btn-warning',\n    'put?': 'btn-warning',\n    'patch': 'btn-info',\n    'patch?': 'btn-info'\n};\n//Methods moved to the parser as: 1) Custom type guards like isApi() for each node interface and 2) RAMLVersion() method for each node.\n//\n// /**\n//  * Returns whether the node is instance of interface by interface name.\n//  * DOES NOT CHECK SUPER INTERFACES!\n//  * @param node\n//  * @param interfaceShortName - interface name, does not include namespace.\n//  * @param ramlVersion - optionally also checks if node belongs to \"RAML10\" or \"RAML08\" RAML.\n//  * @returns {boolean}\n//  */\n// function nodeInstanceOf(node : core.BasicNode, interfaceShortName : string, ramlVersion? : string) : boolean {\n//   var nodeKind = node.kind();\n//\n//   if (nodeKind != interfaceShortName) return false;\n//\n//   if (ramlVersion) {\n//     if (ramlVersion != nodeRAMLVersion(node)) return false;\n//   }\n//\n//   return true;\n// }\n//\n// function nodeInstanceOf10(node : core.BasicNode, interfaceShortName : string) {\n//   return nodeInstanceOf(node, interfaceShortName, \"RAML10\");\n// }\n//\n// function nodeInstanceOf08(node : core.BasicNode, interfaceShortName : string) {\n//   return nodeInstanceOf(node, interfaceShortName, \"RAML08\");\n// }\n//\n// /**\n//  * Returns node version.\n//  * @param node\n//  * @returns {string} : \"RAML10\" for RAML 1.0 and \"RAML08\" for RAML 0.8\n//  */\n// function nodeRAMLVersion(node : core.BasicNode) : string {\n//   return node.highLevel().definition().universe().version();\n// }\n//\nfunction isRAML10(node) {\n    return node.RAMLVersion() == \"RAML10\";\n}\nfunction isRAML08(node) {\n    return node.RAMLVersion() == \"RAML08\";\n}\nvar Console = (function (_super) {\n    __extends(Console, _super);\n    function Console() {\n        _super.apply(this, arguments);\n    }\n    Console.prototype.isSupportedNode = function (node) {\n        return !(RamlWrapper1.isObjectTypeDeclaration(node) ||\n            RamlWrapper1.isResponse(node) ||\n            RamlWrapper1.isTypeDeclaration(node) ||\n            RamlWrapper1.isLibrary(node) ||\n            RamlWrapper1.isSecuritySchemePart(node) ||\n            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n            RamlWrapper08.isResponse(node) ||\n            RamlWrapper08.isSecuritySchemePart(node) ||\n            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n            RamlWrapper08.isOAuth2SecurityScheme(node));\n    };\n    Console.prototype.renderNode = function (node) {\n        var props = extend(this.props, { node: node });\n        if (RamlWrapper1.isTrait(node) ||\n            RamlWrapper08.isTrait(node)) {\n            return React.createElement(Trait, props);\n        }\n        if (RamlWrapper1.isResourceType(node) ||\n            RamlWrapper08.isResourceType(node)) {\n            return React.createElement(ResourceType, props);\n        }\n        if (RamlWrapper1.isAbstractSecurityScheme(node) ||\n            RamlWrapper08.isAbstractSecurityScheme(node) ||\n            RamlWrapper1.isOAuth1SecurityScheme(node) ||\n            RamlWrapper08.isOAuth1SecurityScheme(node) ||\n            RamlWrapper1.isOAuth2SecurityScheme(node) ||\n            RamlWrapper08.isOAuth2SecurityScheme(node)) {\n            return React.createElement(SecurityScheme, props);\n        }\n        if (RamlWrapper1.isResource(node) ||\n            RamlWrapper08.isResource(node)) {\n            return React.createElement(Resource, props);\n        }\n        if (RamlWrapper1.isDocumentationItem(node) ||\n            RamlWrapper08.isDocumentationItem(node)) {\n            return React.createElement(Documentation, props);\n        }\n        if (RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n            return React.createElement(Method, props);\n        }\n        if (RamlWrapper1.isApi(node) || RamlWrapper08.isApi(node) ||\n            RamlWrapper1.isExtension(node) || RamlWrapper1.isOverlay(node)) {\n            return React.createElement(Root, props);\n        }\n        // Psuedo \"404\" in case a view isn't implemented.\n        return React.createElement(Block, null, React.createElement(TitleText, { title: '404' }), React.createElement(Block, null, 'How did you get here? You shouldn\\'t be here! Please ', React.createElement('a', {\n            href: 'https://github.com/mulesoft/api-workbench/issues'\n        }, 'report me'), '.'), React.createElement(Block, null, React.createElement('strong', null, \"Reference: \" + node.wrapperClassName())));\n    };\n    Console.prototype.renderBreadcrumb = function (node, renderedNode) {\n        var _this = this;\n        var parts = [];\n        var nodes = [];\n        var currentNode = node;\n        // Render \"Errors\" as a breadcrumb.\n        if (this.props.errors.length) {\n            parts.push(React.createElement('span', { key: 'errors' }, 'Errors'));\n        }\n        else {\n            do {\n                nodes.unshift(currentNode);\n            } while (currentNode = currentNode.parent());\n            nodes.forEach(function (node, index) {\n                var lastNode = index === nodes.length - 1;\n                if (node.getKind() === highLevelAst.NodeKind.NODE &&\n                    _this.isSupportedNode(node.wrapperNode()) &&\n                    node.wrapperNode() !== renderedNode) {\n                    parts.push(React.createElement('a', {\n                        key: node.id(),\n                        onClick: function () { return _this.props.navigate(node.id()); }\n                    }, getNodeLabel(node)));\n                }\n                else {\n                    parts.push(React.createElement('span', { key: \"value\" + index }, getNodeLabel(node)));\n                }\n                if (!lastNode) {\n                    parts.push(React.createElement('span', { key: \"sep\" + index }, \" \" + BULLET_TEXT + \" \"));\n                }\n            });\n        }\n        return React.createElement(Block, { className: 'padded', style: { margin: 0, flex: '0 0 auto' } }, parts);\n    };\n    Console.prototype.getCurrentNode = function () {\n        var raml = this.props.raml;\n        var state = this.props.state;\n        if (!raml) {\n            return null;\n        }\n        if (state.view.id) {\n            var idNode = raml.highLevel().findById(state.view.id);\n            if (idNode) {\n                return idNode;\n            }\n        }\n        return raml.highLevel();\n    };\n    Console.prototype.wrapBody = function (element) {\n        return React.createElement(Block, {\n            id: 'raml-console-view',\n            className: 'padded',\n            style: {\n                overflow: 'auto',\n                height: '100%'\n            }\n        }, element);\n    };\n    Console.prototype.wrapContent = function (breadcrumb, element) {\n        return React.createElement(Block, { style: { height: '100%', display: 'flex', flexDirection: 'column' } }, breadcrumb, this.wrapBody(element));\n    };\n    Console.prototype.render = function () {\n        if (!this.props.loaded) {\n            return React.createElement(Loading);\n        }\n        var highLevelNode = this.getCurrentNode();\n        if (!highLevelNode) {\n            return React.createElement(Block, null, React.createElement(TitleText, { title: 'Unsupported fragment' }), React.createElement(Block, null, 'This type of fragment is not supported. Only APIs, Overlays and Extensions can be displayed.'));\n        }\n        var node;\n        if (this.props.errors.length) {\n            return this.wrapBody(React.createElement(Errors, { errors: this.props.errors }));\n        }\n        if (!highLevelNode.isElement()) {\n            var referencedNode = highLevelNode.findReferencedValue();\n            if (!referencedNode) {\n                return this.wrapContent(this.renderBreadcrumb(highLevelNode), React.createElement(MissingReference, extend(this.props, { highLevelNode: highLevelNode })));\n            }\n            node = referencedNode.wrapperNode();\n        }\n        else {\n            node = highLevelNode.wrapperNode();\n        }\n        // Traverse upwards to rendered nodes.\n        while (!this.isSupportedNode(node)) {\n            node = node.parent();\n        }\n        return this.wrapContent(this.renderBreadcrumb(highLevelNode, node), this.renderNode(node));\n    };\n    return Console;\n}(PureComponent));\nexports.Console = Console;\nvar Errors = (function (_super) {\n    __extends(Errors, _super);\n    function Errors() {\n        _super.apply(this, arguments);\n    }\n    Errors.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Errors' }), React.createElement('ul', null, this.props.errors.map(function (error, index) {\n            // TODO(blakeembrey): Use `error.mark` to open text editor to issue.\n            return React.createElement('li', { key: index }, error.message);\n        })));\n    };\n    return Errors;\n}(PureComponent));\nvar Root = (function (_super) {\n    __extends(Root, _super);\n    function Root() {\n        _super.apply(this, arguments);\n    }\n    Root.prototype.render = function () {\n        var _this = this;\n        var raml = this.props.node;\n        return React.createElement('div', null, React.createElement(TitleText, { title: raml.title() }), React.createElement(ResourceTypesAndTraits, this.props), raml.documentation().length ? React.createElement(InsetPanel, null, React.createElement('h3', { style: { marginTop: 0 } }, 'Documentation'), React.createElement('ul', null, raml.documentation().map(function (documentation) {\n            var id = documentation.highLevel().id();\n            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, documentation.title()));\n        }))) : null, React.createElement(ResourceChildren, this.props));\n    };\n    return Root;\n}(PureComponent));\nvar MethodButton = (function (_super) {\n    __extends(MethodButton, _super);\n    function MethodButton() {\n        _super.apply(this, arguments);\n    }\n    MethodButton.prototype.render = function () {\n        var _this = this;\n        var verb = this.props.method.method();\n        return React.createElement('div', {\n            onClick: function () { return _this.props.navigate(_this.props.method.highLevel().id()); },\n            className: classnames('btn inline-block', METHOD_CLASS_MAP[verb])\n        }, verb.toUpperCase());\n    };\n    return MethodButton;\n}(PureComponent));\nvar MissingReference = (function (_super) {\n    __extends(MissingReference, _super);\n    function MissingReference() {\n        _super.apply(this, arguments);\n    }\n    MissingReference.prototype.render = function () {\n        var node = this.props.highLevelNode;\n        return React.createElement(Block, null, React.createElement(TitleText, { title: 'Missing Reference' }), 'Unable to resolve reference: ', React.createElement('strong', null, node.id()));\n    };\n    return MissingReference;\n}(PureComponent));\n// class GlobalSchema extends PureComponent<NodeProps<RamlWrapper1.GlobalSchema>, {}> {\n//\n//   render () {\n//     var node = this.props.node\n//\n//     return React.createElement(\n//       Block,\n//       null,\n//       React.createElement(TitleText, { node, title: node.key(), type: 'Schema' }),\n//       React.createElement(Markup, { content: node.value().value(), setState: this.props.setState, state: this.props.state })\n//     )\n//   }\n//\n// }\nvar Loading = (function (_super) {\n    __extends(Loading, _super);\n    function Loading() {\n        _super.apply(this, arguments);\n    }\n    Loading.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement('div', {\n            className: 'loading-spinner-medium inline-block'\n        }), React.createElement('span', {\n            className: 'inline-block'\n        }, 'Loading RAML\\u2026'));\n    };\n    return Loading;\n}(PureComponent));\nvar Trait = (function (_super) {\n    __extends(Trait, _super);\n    function Trait() {\n        _super.apply(this, arguments);\n    }\n    Trait.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Trait' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractMethod, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return Trait;\n}(PureComponent));\nvar TitleText = (function (_super) {\n    __extends(TitleText, _super);\n    function TitleText() {\n        _super.apply(this, arguments);\n    }\n    TitleText.prototype.render = function () {\n        var title = this.props.title;\n        return React.createElement('h1', { style: { marginTop: 0 } }, this.props.node ? React.createElement(OpenInEditor, { node: this.props.node }, title) : title, this.props.type ? React.createElement('small', null, \" (\" + this.props.type + \")\") : null);\n    };\n    return TitleText;\n}(PureComponent));\nvar SimpleText = (function (_super) {\n    __extends(SimpleText, _super);\n    function SimpleText() {\n        _super.apply(this, arguments);\n    }\n    SimpleText.prototype.render = function () {\n        var text = this.props.text;\n        if (!text) {\n            return null;\n        }\n        return React.createElement(Block, null, React.createElement('strong', null, this.props.title + \": \"), text);\n    };\n    return SimpleText;\n}(PureComponent));\nvar References = (function (_super) {\n    __extends(References, _super);\n    function References() {\n        _super.apply(this, arguments);\n    }\n    References.prototype.formatNode = function (node) {\n        var parts = [];\n        do {\n            parts.unshift(getNodeLabel(node));\n        } while (node = node.parent());\n        return parts.join(\" \" + BULLET_TEXT + \" \");\n    };\n    References.prototype.render = function () {\n        var _this = this;\n        var references = this.props.references;\n        if (!references.length) {\n            return null;\n        }\n        return React.createElement(InsetPanel, null, React.createElement('h3', null, \"References (\" + references.length + \" Found)\"), React.createElement('ul', null, references.map(function (reference) {\n            var id = reference.id();\n            var parent = reference.parent();\n            return React.createElement('li', { key: id }, React.createElement('a', { onClick: function () { return _this.props.navigate(parent.id()); } }, _this.formatNode(parent)));\n        })));\n    };\n    return References;\n}(PureComponent));\nvar AbstractResource = (function (_super) {\n    __extends(AbstractResource, _super);\n    function AbstractResource() {\n        _super.apply(this, arguments);\n    }\n    AbstractResource.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        var methods = node.methods();\n        var uriParameters = node.uriParameters();\n        return React.createElement(Block, null, React.createElement(ResourceTypesAndTraits, this.props), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), methods.length ? React.createElement(Block, null, methods.map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })) : null, React.createElement(ParametersBlock, { parameters: uriParameters, title: 'URI Parameters', navigate: navigate }));\n    };\n    return AbstractResource;\n}(PureComponent));\nvar ResourceType = (function (_super) {\n    __extends(ResourceType, _super);\n    function ResourceType() {\n        _super.apply(this, arguments);\n    }\n    ResourceType.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Resource Type' }), React.createElement(SimpleText, { text: node.usage(), title: 'Usage' }), React.createElement(AbstractResource, this.props), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return ResourceType;\n}(PureComponent));\nvar SecurityScheme = (function (_super) {\n    __extends(SecurityScheme, _super);\n    function SecurityScheme() {\n        _super.apply(this, arguments);\n    }\n    SecurityScheme.prototype.render = function () {\n        var node = this.props.node;\n        var references = node.highLevel().findReferences();\n        // TODO(blakeembrey): Render `settings`.\n        var displayName = \"\";\n        if (isRAML08(node)) {\n            displayName = node.name();\n        }\n        else {\n            displayName = node.displayName();\n        }\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.name(), type: 'Security Scheme' }), React.createElement(SimpleText, { title: 'Type', text: node.type() }), React.createElement(SimpleText, { title: 'Display Name', text: displayName }), React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), React.createElement(AbstractMethod, extend(this.props, { node: node.describedBy() })), React.createElement(References, { references: references, navigate: this.props.navigate }));\n    };\n    return SecurityScheme;\n}(PureComponent));\nvar Resource = (function (_super) {\n    __extends(Resource, _super);\n    function Resource() {\n        _super.apply(this, arguments);\n    }\n    Resource.prototype.render = function () {\n        var node = this.props.node;\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.relativeUri().value(), type: 'Resource' }), React.createElement(AbstractResource, this.props), React.createElement(ResourceChildren, this.props));\n    };\n    return Resource;\n}(PureComponent));\nvar ParameterInfo = (function (_super) {\n    __extends(ParameterInfo, _super);\n    function ParameterInfo() {\n        _super.apply(this, arguments);\n    }\n    ParameterInfo.prototype.render = function () {\n        var node = this.props.node;\n        if (node == null) {\n            return null;\n        }\n        var nodeType = node.type();\n        if (!nodeType)\n            nodeType = \"string\";\n        return React.createElement(Block, null, React.createElement(Block, null, React.createElement('span', {\n            key: nodeType,\n            className: 'highlight',\n            style: { marginRight: 5 }\n        }, nodeType)));\n    };\n    return ParameterInfo;\n}(PureComponent));\nvar TypeInfo = (function (_super) {\n    __extends(TypeInfo, _super);\n    function TypeInfo() {\n        _super.apply(this, arguments);\n    }\n    TypeInfo.prototype.hasNamedSuperTypes = function (type) {\n        var superTypes = type.superTypes();\n        if (!superTypes)\n            return false;\n        var namedTypeFound = false;\n        superTypes.forEach(function (superType) {\n            if (superType.nameId() && superType.nameId().indexOf(\"application/\") != 0)\n                namedTypeFound = true;\n        });\n        return namedTypeFound;\n    };\n    TypeInfo.prototype.renderDefinition = function (definition, renderNameId) {\n        return React.createElement(Block, null, \n        // TODO(blakeembrey): Fix `renderNameId` check, currently hacky because\n        // the media type is being printed out sometimes.\n        renderNameId ? React.createElement(Block, null, React.createElement('span', {\n            className: 'highlight'\n        }, definition.nameId())) : null, this.hasNamedSuperTypes(definition) ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Super Types:')), definition.superTypes().map(function (x) {\n            return React.createElement('span', {\n                className: 'highlight',\n                style: { marginRight: 5 }\n            }, x.nameId());\n        })) : null, definition.allProperties().length ? React.createElement(Block, null, React.createElement('h5', null, 'Properties'), definition.allProperties().map(function (property) {\n            return React.createElement(Block, { key: property.nameId() }, React.createElement(Block, null, React.createElement('strong', null, property.nameId()), property.isRequired() ? ' (required)' : ''), React.createElement(Block, null, property.description()));\n        })) : null, definition.hasUnionInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Left: ')), this.renderDefinition(definition.unionInHierarchy().leftType(), true), React.createElement(Block, null, React.createElement('strong', null, 'Right: ')), this.renderDefinition(definition.unionInHierarchy().rightType(), true)) : null, definition.hasArrayInHierarchy() ? React.createElement(Block, null, React.createElement(Block, null, React.createElement('strong', null, 'Item: ')), this.renderDefinition(definition.arrayInHierarchy().componentType(), true)) : null);\n    };\n    TypeInfo.prototype.render = function () {\n        var node = this.props.node;\n        // Array items can be `null`.\n        if (node == null) {\n            return null;\n        }\n        var definition = node.runtimeDefinition();\n        if (definition && definition.hasGenuineUserDefinedTypeInHierarchy()\n            && !definition.isGenuineUserDefinedType()) {\n            definition = definition.genuineUserDefinedTypeInHierarchy();\n        }\n        return React.createElement(Block, null, typeof node.type === 'function' ? React.createElement(Block, null, (node.type() || []).map(function (type) {\n            return React.createElement('span', {\n                key: type,\n                className: 'highlight',\n                style: { marginRight: 5 }\n            }, type);\n        })) : null, this.renderDefinition(definition, false));\n    };\n    return TypeInfo;\n}(PureComponent));\nvar ParametersBlock = (function (_super) {\n    __extends(ParametersBlock, _super);\n    function ParametersBlock() {\n        _super.apply(this, arguments);\n    }\n    ParametersBlock.prototype.summary = function (param) {\n        var parts = [];\n        if (RamlWrapper1.isFileTypeDeclaration(param) /*param.wrapperClassName() === 'FileTypeDeclarationImpl'*/) {\n            if (param.fileTypes()) {\n                parts.push(\"fileTypes: \" + param.fileTypes());\n            }\n            if (param.minLength()) {\n                parts.push(\"minLength: \" + param.minLength());\n            }\n            if (param.maxLength()) {\n                parts.push(\"maxLength: \" + param.maxLength());\n            }\n        }\n        if (RamlWrapper1.isIntegerTypeDeclaration(param) /*param.wrapperClassName() === 'IntegerTypeDeclarationImpl'*/) {\n            if (param.minimum() != null) {\n                parts.push(\"minimum: \" + param.minimum());\n            }\n            if (param.maximum() != null) {\n                parts.push(\"maximum: \" + param.maximum());\n            }\n        }\n        if (param.required()) {\n            parts.push('required');\n        }\n        return parts.join(', ');\n    };\n    ParametersBlock.prototype.render = function () {\n        var _this = this;\n        if (!this.props.parameters.length) {\n            return null;\n        }\n        var navigate = this.props.navigate;\n        return React.createElement(Block, null, React.createElement('h3', null, this.props.title), this.props.parameters.map(function (parameter) {\n            return React.createElement(Block, { key: parameter.name() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: parameter }, parameter.name())), React.createElement(isRAML10(parameter) ? TypeInfo : ParameterInfo, { node: parameter }), React.createElement(Block, null, React.createElement('strong', null, _this.summary(parameter))), React.createElement(MarkdownBlock, { content: (parameter.description() ? parameter.description().value() : null) }));\n        }));\n    };\n    return ParametersBlock;\n}(PureComponent));\nvar ResourceChildren = (function (_super) {\n    __extends(ResourceChildren, _super);\n    function ResourceChildren() {\n        _super.apply(this, arguments);\n    }\n    ResourceChildren.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        return React.createElement(Block, null, node.resources().map(function (resource) {\n            var id = resource.highLevel().id();\n            var children = resource.resources().length;\n            return React.createElement(InsetPanel, { key: id }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: resource }, resource.completeRelativeUri()), ' ', children ? React.createElement('small', null, React.createElement('a', { onClick: function () { return _this.props.navigate(id); } }, \"View \" + children + \" more \" + plural(children, 'resource', 'resources'))) : null), React.createElement(MarkdownBlock, {\n                content: (resource.description() ? resource.description().value() : null)\n            }), React.createElement(Block, null, resource.methods().map(function (method) { return React.createElement(MethodButton, { key: method.method(), method: method, navigate: _this.props.navigate }); })));\n        }));\n    };\n    return ResourceChildren;\n}(PureComponent));\nvar Documentation = (function (_super) {\n    __extends(Documentation, _super);\n    function Documentation() {\n        _super.apply(this, arguments);\n    }\n    Documentation.prototype.render = function () {\n        var node = this.props.node;\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.title(), type: 'Documentation' }), React.createElement(MarkdownBlock, { content: (this.props.node.content() ? this.props.node.content().value() : null) }));\n    };\n    return Documentation;\n}(PureComponent));\nvar AbstractMethod = (function (_super) {\n    __extends(AbstractMethod, _super);\n    function AbstractMethod() {\n        _super.apply(this, arguments);\n    }\n    AbstractMethod.prototype.renderBody = function (body) {\n        // TODO(blakeembrey): Render more properties from `ObjectField`.\n        var parts = [];\n        //link to open body in the editor\n        parts.push(React.createElement('h4', null, React.createElement(OpenInEditor, { node: body }, body.name())));\n        //type block for 1.0 raml\n        if (isRAML10(body)) {\n            parts.push(React.createElement(TypeInfo, { node: body }));\n        }\n        //if there is schema, we render it\n        //TODO for 1.0 case this should be replaced with external type rendering in TypeInfo\n        var schemaPart = this.createSchemaPart(body);\n        if (schemaPart)\n            parts.push(schemaPart);\n        //adding examples if available\n        parts.push(this.createExampleParts(body));\n        return React.createElement(Block, { key: body.name() }, parts);\n    };\n    AbstractMethod.prototype.exampleToString = function (example) {\n        var exampleValue = example.value();\n        if (exampleValue == null)\n            return null;\n        if (typeof (exampleValue) == \"string\") {\n            return exampleValue;\n        }\n        return JSON.stringify(exampleValue, null, 2);\n    };\n    AbstractMethod.prototype.createExampleParts = function (body) {\n        var _this = this;\n        if (isRAML10(body)) {\n            var bodyType = body;\n            var runtimeType = bodyType.runtimeType();\n            if (runtimeType) {\n                var examples = runtimeType.examples(true);\n                if (examples && examples.length > 0) {\n                    return examples.map(function (example) {\n                        var exampleName = example.name() ? example.name() : \"Example\";\n                        var displayName = example.displayName() ? example.displayName() : exampleName;\n                        return React.createElement(MarkupBlock, {\n                            key: displayName,\n                            content: example.asString(),\n                            title: \"Example\",\n                            name: exampleName,\n                            mime: body.name(),\n                            setState: _this.props.setState,\n                            state: _this.props.state\n                        });\n                    });\n                }\n            }\n        }\n        else if (RamlWrapper08.isBodyLike(body)) {\n            var exampleNode = body.example();\n            if (!exampleNode)\n                return [];\n            var exampleContent = exampleNode.value();\n            if (!exampleContent)\n                return [];\n            return [React.createElement(MarkupBlock, {\n                    content: exampleContent,\n                    title: 'Example',\n                    mime: body.name(),\n                    setState: this.props.setState,\n                    state: this.props.state\n                })];\n        }\n        return [];\n    };\n    AbstractMethod.prototype.createSchemaPart = function (body) {\n        var schemaName = null;\n        var schemaContent = null;\n        if (RamlWrapper08.isBodyLike(body)) {\n            schemaName = body.schema() ? body.schema().value() : \"\";\n            //this is probably not an external scheme reference, but inplace schema.\n            if (!schemaName || schemaName.indexOf(\"{\") != -1 && schemaName.indexOf(\"}\") != -1)\n                schemaName = \"\";\n            schemaContent = body.schemaContent();\n        }\n        else if (isRAML10(body)) {\n            var bodyAsType = body;\n            if (body.runtimeType() && bodyAsType.runtimeType().hasExternalInHierarchy()) {\n                var externalType = bodyAsType.runtimeType().externalInHierarchy();\n                if (externalType) {\n                    schemaName = body.runtimeType().superTypes() != null && body.runtimeType().superTypes().length == 1 &&\n                        body.runtimeType().superTypes()[0].nameId();\n                    schemaContent = externalType.schema();\n                }\n            }\n        }\n        if (schemaContent) {\n            return React.createElement(MarkupBlock, {\n                key: undefined,\n                content: schemaContent,\n                title: 'Schema',\n                mime: body.name(),\n                name: schemaName,\n                setState: this.props.setState,\n                state: this.props.state\n            });\n        }\n        return null;\n    };\n    AbstractMethod.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        if (!node) {\n            return null;\n        }\n        var methodBodies = node.body();\n        return React.createElement(Block, null, React.createElement(MarkdownBlock, { content: (node.description() ? node.description().value() : null) }), node.queryParameters().length ? React.createElement(InsetPanel, null, React.createElement(ParametersBlock, {\n            parameters: node.queryParameters(),\n            title: 'Query Parameters',\n            navigate: navigate\n        })) : null, React.createElement(ParametersBlock, {\n            parameters: node.headers(),\n            title: 'Headers',\n            navigate: navigate\n        }), methodBodies.length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Body'), methodBodies.map(function (body) { return _this.renderBody(body); })) : null, node.responses().length ? React.createElement(InsetPanel, null, React.createElement('h3', null, 'Responses'), node.responses().map(function (response) {\n            return React.createElement(Block, { key: response.code().value() }, React.createElement('h4', null, React.createElement(OpenInEditor, { node: response.code() }, response.code().value())), React.createElement(MarkdownBlock, { content: (response.description() ? response.description().value() : null) }), React.createElement(ParametersBlock, {\n                parameters: response.headers(),\n                title: 'Headers',\n                navigate: navigate\n            }), response.body().map(function (body) { return _this.renderBody(body); }));\n        })) : null);\n    };\n    return AbstractMethod;\n}(PureComponent));\nvar Method = (function (_super) {\n    __extends(Method, _super);\n    function Method() {\n        _super.apply(this, arguments);\n    }\n    Method.prototype.render = function () {\n        var props = this.props;\n        var node = props.node;\n        var demo = props.state.view.demo;\n        var canDemo = node.parent().wrapperClassName() === 'ResourceImpl';\n        return React.createElement(Block, null, React.createElement(TitleText, { node: node, title: node.method().toUpperCase(), type: 'Method' }), React.createElement(ResourceTypesAndTraits, props), canDemo ? React.createElement(Block, null, React.createElement('div', {\n            className: 'btn btn-primary',\n            onClick: function () { return props.navigate({ demo: !demo }); }\n        }, demo ? 'Read Documentation' : 'Make an API Request')) : null, canDemo && demo ? React.createElement(MethodDemo, props) : React.createElement(AbstractMethod, props));\n    };\n    return Method;\n}(PureComponent));\nvar MethodDemo = (function (_super) {\n    __extends(MethodDemo, _super);\n    function MethodDemo() {\n        _super.apply(this, arguments);\n    }\n    MethodDemo.prototype.render = function () {\n        var _this = this;\n        var node = this.props.node;\n        var method = node.method();\n        var contentType = this.props.state.body;\n        var securityScheme = this.props.state.securityScheme;\n        var progress = this.props.pageState.requestProgress;\n        var bodies = node.body().map(function (x) { return x.name(); });\n        var securitySchemes = node.allSecuredBy().map(function (x) { return x.securityScheme(); });\n        var currentSecurityScheme = securitySchemes.filter(function (x) { return x != null && x.name() === securityScheme; })[0];\n        if (!this.props.state.bodies || Object.keys(this.props.state.bodies).length === 0) {\n            this.props.state.bodies = {};\n            node.body().forEach(function (body) {\n                var name = body.name();\n                var example = body.example() || body.examples()[0];\n                example && (_this.props.state.bodies[name] = example.value());\n            });\n        }\n        return React.createElement(Block, null, securitySchemes.length ? React.createElement(Block, null, React.createElement('h3', null, 'Security Scheme'), React.createElement(Block, null, React.createElement('select', {\n            onChange: function (e) { return _this.props.setState({ securityScheme: e.target.value }); },\n            className: 'form-control',\n            value: securityScheme\n        }, securitySchemes.map(function (x) {\n            var name = x != null ? x.name() : 'null';\n            return React.createElement('option', { key: name, value: x == null ? '' : x.name() }, name);\n        }))), currentSecurityScheme ? React.createElement(Block, null, React.createElement(EditParameters, {\n            title: undefined,\n            prefix: \"Security Scheme Query Parameter\",\n            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().queryParameters()) || [],\n            values: this.props.state.queryParameters,\n            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: undefined,\n            prefix: \"Security Scheme Header\",\n            parameters: (currentSecurityScheme.describedBy() && currentSecurityScheme.describedBy().headers()) || [],\n            values: this.props.state.headers,\n            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n        })) : null) : null, React.createElement(EditParameters, {\n            title: 'Base URI Parameters',\n            prefix: undefined,\n            parameters: node.ownerApi().allBaseUriParameters(),\n            values: this.props.state.baseUriParameters,\n            change: function (name, value) { return _this.props.setParameter('baseUriParameters', name, value); }\n        }), null, React.createElement(EditParameters, {\n            title: 'URI Parameters',\n            prefix: undefined,\n            parameters: localParameters(node.parent()),\n            values: this.props.state.uriParameters,\n            change: function (name, value) { return _this.props.setParameter('uriParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: 'Query Parameters',\n            prefix: undefined,\n            parameters: node.queryParameters(),\n            values: this.props.state.queryParameters,\n            change: function (name, value) { return _this.props.setParameter('queryParameters', name, value); }\n        }), React.createElement(EditParameters, {\n            title: 'Headers',\n            prefix: undefined,\n            parameters: node.headers(),\n            values: this.props.state.headers,\n            change: function (name, value) { return _this.props.setParameter('headers', name, value); }\n        }), bodies.length ? React.createElement(Block, null, React.createElement('h3', null, 'Body'), React.createElement(Block, null, React.createElement('select', {\n            onChange: function (e) { return _this.props.setState({ body: e.target.value }); },\n            className: 'form-control',\n            value: contentType || bodies[0]\n        }, bodies.map(function (x) { return React.createElement('option', { key: x }, x); }))), React.createElement(TextEditor, {\n            mini: false,\n            value: this.props.state.bodies[contentType || bodies[0]],\n            onChange: function (body) {\n                return _this.props.setParameter('bodies', contentType || bodies[0], body);\n            }\n        })) : null, React.createElement(Block, null, React.createElement('div', {\n            className: classnames('btn inline-block', METHOD_CLASS_MAP[method]),\n            onClick: function () {\n                if (!_this.props.state.body) {\n                    _this.props.state.body = contentType || bodies[0];\n                }\n                return _this.props.execRequest();\n            }\n        }, method.toUpperCase()), progress == null ? null : React.createElement('progress', {\n            style: { marginLeft: 5 },\n            className: 'inline-block',\n            max: isNaN(progress) ? null : '1',\n            value: isNaN(progress) ? null : String(progress)\n        })), React.createElement(Response, this.props));\n    };\n    return MethodDemo;\n}(PureComponent));\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response() {\n        _super.apply(this, arguments);\n    }\n    Response.prototype.render = function () {\n        var error = this.props.pageState.requestError;\n        var response = this.props.pageState.requestResponse;\n        if (error) {\n            return React.createElement(Block, { className: 'text-error' }, error);\n        }\n        if (response) {\n            var mime = getCaseless(response.headers, 'content-type');\n            // readonly: boolean\n            // grammar: any\n            // gutter: boolean\n            // mini: boolean\n            // value: string\n            // placeholder: string\n            // onChange: (value: string) => any\n            return React.createElement(Block, null, React.createElement('h3', null, 'Response'), React.createElement(Block, null, React.createElement('div', null, React.createElement('strong', null, 'Status Code: '), response.status), React.createElement('div', null, React.createElement('strong', null, 'Status Text: '), response.statusText), React.createElement('div', null, React.createElement('strong', null, 'URL: '), response.url)), React.createElement(Block, null, React.createElement('h4', null, 'Headers'), React.createElement(Block, null, response.rawHeaders.map(function (value, index) {\n                if (index % 2 === 0) {\n                    return React.createElement('strong', { key: index }, value + \": \");\n                }\n                return React.createElement('span', { key: index }, value, React.createElement('br'));\n            }))), response.body ? React.createElement(Block, null, React.createElement('h4', null, 'Body'), React.createElement(Markup, {\n                content: response.body,\n                mime: mime,\n                setState: this.props.setState,\n                state: this.props.state\n            })) : null);\n        }\n        return null;\n    };\n    return Response;\n}(PureComponent));\nvar EditParameters = (function (_super) {\n    __extends(EditParameters, _super);\n    function EditParameters() {\n        _super.apply(this, arguments);\n    }\n    EditParameters.prototype.render = function () {\n        var _this = this;\n        var values = this.props.values || {};\n        var params = this.props.parameters;\n        if (!params.length) {\n            return null;\n        }\n        return React.createElement(Block, null, this.props.title ? React.createElement('h3', {\n            className: 'sub-title'\n        }, this.props.title) : null, params.map(function (parameter) {\n            var name = parameter.name();\n            var input;\n            var value = values[name];\n            if (!value && value !== '') {\n                var param = parameter;\n                if (param && param._node && param._node._prop && param._node._prop._groupName === rp.universes.Universe10.Api.properties.baseUriParameters.name) {\n                    if (name === rp.universes.Universe10.Api.properties.version.name) {\n                        values[name] = param._node.root().wrapperNode().version();\n                    }\n                }\n                var value = values[name];\n            }\n            var label = _this.props.prefix == null ? name : _this.props.prefix + \": \" + name;\n            input = React.createElement(TextEditor, {\n                mini: true,\n                value: value,\n                placeholder: parameter.default(),\n                onChange: function (value) { return _this.props.change(name, value); }\n            });\n            return React.createElement(Block, { key: name }, React.createElement('label', null, label, parameter.required() ? ' *' : ''), input);\n        }));\n    };\n    return EditParameters;\n}(PureComponent));\nvar TextEditor = (function (_super) {\n    __extends(TextEditor, _super);\n    function TextEditor() {\n        _super.apply(this, arguments);\n    }\n    TextEditor.prototype.componentDidMount = function () {\n        var editor = this.editor = document.createElement('atom-text-editor');\n        this.updateModel(this.props);\n        this.refs.container.getDOMNode().appendChild(editor);\n    };\n    TextEditor.prototype.updateModel = function (props) {\n        var editor = this.editor;\n        var model = editor.getModel();\n        this.cleanup();\n        model.setMini(props.mini);\n        model.setPlaceholderText(props.placeholder);\n        model.setGrammar(props.grammar);\n        model.setText(props.value || '');\n        if (props.readonly) {\n            editor.removeAttribute('tabindex');\n        }\n        else {\n            editor.setAttribute('tabindex', '0');\n        }\n        if (props.gutter === false) {\n            editor.setAttribute('gutter-hidden', '');\n        }\n        else {\n            editor.removeAttribute('gutter-hidden');\n        }\n        if (props.onChange) {\n            this.disposable = model.onDidChange(function () {\n                var position = model.cursors[0].getBufferPosition();\n                props.onChange(model.getText());\n                model.cursors[0].setBufferPosition(position);\n            });\n        }\n    };\n    TextEditor.prototype.cleanup = function () {\n        if (this.disposable) {\n            this.disposable.dispose();\n            this.disposable = null;\n        }\n    };\n    TextEditor.prototype.componentWillUnmount = function () {\n        this.cleanup();\n    };\n    TextEditor.prototype.componentDidUpdate = function () {\n        this.updateModel(this.props);\n    };\n    TextEditor.prototype.render = function () {\n        return React.createElement('div', { ref: 'container' });\n    };\n    return TextEditor;\n}(PureComponent));\nvar MarkupBlock = (function (_super) {\n    __extends(MarkupBlock, _super);\n    function MarkupBlock() {\n        _super.apply(this, arguments);\n        this.state = { visible: false };\n    }\n    MarkupBlock.prototype.render = function () {\n        var _this = this;\n        if (!this.props.content) {\n            return null;\n        }\n        var visible = this.state.visible;\n        return React.createElement(Block, { key: this.props.key }, React.createElement('a', { onClick: function () { return _this.setState({ visible: !visible }); } }, (visible ? 'Hide' : 'Show') + \" \" + this.props.title), this.props.name ? \" (\" + this.props.name + \")\" : null, visible ? React.createElement('div', { style: { marginTop: 5 } }, React.createElement(Markup, this.props)) : null);\n    };\n    return MarkupBlock;\n}(PureComponent));\nvar Markup = (function (_super) {\n    __extends(Markup, _super);\n    function Markup() {\n        _super.apply(this, arguments);\n    }\n    Markup.prototype.render = function () {\n        var _this = this;\n        var grammar = atomUtil.getGrammerFromMime(this.props.mime);\n        var content = this.props.content;\n        var isXml = grammar.fileTypes.indexOf('xml') > -1 || isXML(content);\n        var isJson = grammar.fileTypes.indexOf('json') > -1 || isJSON(content);\n        var isCss = grammar.fileTypes.indexOf('css') > -1;\n        var canPrettify = isXml || isJson || isCss;\n        if (this.props.state.pretty) {\n            try {\n                if (isXml) {\n                    content = pretty.pd.xml(content);\n                }\n                else if (isJson) {\n                    content = pretty.pd.json(content);\n                }\n                else if (isCss) {\n                    content = pretty.pd.css(content);\n                }\n            }\n            catch (e) {\n            }\n        }\n        return React.createElement(Block, null, React.createElement(TextEditor, {\n            value: content,\n            grammar: grammar,\n            readonly: true\n        }), canPrettify ? React.createElement(Block, null, React.createElement('label', null, React.createElement('input', {\n            type: 'checkbox',\n            onChange: function (e) { return _this.props.setState({ pretty: e.target.checked }); },\n            checked: this.props.state.pretty,\n            style: { marginRight: 5 }\n        }), React.createElement('span', null, 'Pretty data'))) : null);\n    };\n    return Markup;\n}(PureComponent));\nvar NavigateLabel = (function (_super) {\n    __extends(NavigateLabel, _super);\n    function NavigateLabel() {\n        _super.apply(this, arguments);\n    }\n    NavigateLabel.prototype.getName = function (node) {\n        var value = node.value();\n        return typeof value === 'string' ? value : value.valueName();\n    };\n    NavigateLabel.prototype.render = function () {\n        var node = this.props.node;\n        // Ignore empty node values.\n        if (node.value() == null) {\n            return null;\n        }\n        var navigate = this.props.navigate;\n        var title = this.props.title;\n        var id = node.highLevel().id();\n        return React.createElement('span', {\n            className: 'highlight',\n            style: {\n                margin: '0 5px 5px 0',\n                cursor: 'pointer',\n                display: 'inline-block'\n            },\n            onClick: function () { return navigate(id); }\n        }, React.createElement('strong', null, title + \": \"), this.getName(node));\n    };\n    return NavigateLabel;\n}(PureComponent));\nvar ResourceTypesAndTraits = (function (_super) {\n    __extends(ResourceTypesAndTraits, _super);\n    function ResourceTypesAndTraits() {\n        _super.apply(this, arguments);\n    }\n    ResourceTypesAndTraits.prototype.render = function () {\n        var types = [];\n        var node = this.props.node;\n        var navigate = this.props.navigate;\n        if ((RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node))\n            && node.type()) {\n            types.push(React.createElement(\"NavigateLabel\", { title: 'Type', key: 'type', node: node.type(), navigate: navigate }));\n        }\n        if (RamlWrapper1.isResource(node) || RamlWrapper08.isResource(node)\n            || RamlWrapper1.isMethod(node) || RamlWrapper08.isMethod(node)) {\n            node.is().forEach(function (is, index) {\n                types.push(React.createElement(\"NavigateLabel\", { title: 'Trait', key: \"is:\" + index, node: is, navigate: navigate }));\n            });\n        }\n        node.securedBy().forEach(function (securedBy, index) {\n            types.push(React.createElement(\"NavigateLabel\", { title: 'Secured By', key: \"securedBy:\" + index, node: securedBy, navigate: navigate }));\n        });\n        return React.createElement(Block, null, types);\n    };\n    return ResourceTypesAndTraits;\n}(PureComponent));\nvar Block = (function (_super) {\n    __extends(Block, _super);\n    function Block() {\n        _super.apply(this, arguments);\n    }\n    Block.prototype.render = function () {\n        return React.createElement('div', extend(this.props, {\n            className: classnames(this.props.className, 'block')\n        }), this.props.children);\n    };\n    return Block;\n}(PureComponent));\nvar InsetPanel = (function (_super) {\n    __extends(InsetPanel, _super);\n    function InsetPanel() {\n        _super.apply(this, arguments);\n    }\n    InsetPanel.prototype.render = function () {\n        return React.createElement(Block, null, React.createElement('atom-panel', null, React.createElement('div', { className: 'padded' }, this.props.children)));\n    };\n    return InsetPanel;\n}(PureComponent));\nvar Icon = (function (_super) {\n    __extends(Icon, _super);\n    function Icon() {\n        _super.apply(this, arguments);\n    }\n    Icon.prototype.render = function () {\n        return React.createElement('i', {\n            className: classnames('icon icon-' + this.props.name, this.props.className)\n        });\n    };\n    return Icon;\n}(PureComponent));\nvar OpenInEditor = (function (_super) {\n    __extends(OpenInEditor, _super);\n    function OpenInEditor() {\n        _super.apply(this, arguments);\n    }\n    OpenInEditor.prototype.openInEditor = function (node) {\n        var editors = atom.workspace.getTextEditors();\n        var path = node.unit().absolutePath();\n        var start = node.start();\n        // TODO(blakeembrey): Review logic if atom/atom#9258 lands.\n        function resolve(editor) {\n            var position = editor.getBuffer().positionForCharacterIndex(start);\n            editor.setCursorBufferPosition(position);\n        }\n        var split;\n        // Split is disabled for the console, just open it without any bells.\n        if (atom.config.get('api-workbench.openConsoleInSplitPane')) {\n            // Attempt to render onto the preferred side of the console.\n            var panes = atom.workspace.getPanes();\n            var activePane = atom.workspace.getActivePane();\n            if (panes.length === 1) {\n                split = 'left';\n                activePane.splitLeft({});\n            }\n            else {\n                split = activePane === panes[0] ? 'right' : 'left';\n            }\n        }\n        atom.workspace.open(path, { searchAllPanes: true, split: split }).then(resolve);\n    };\n    OpenInEditor.prototype.render = function () {\n        var _this = this;\n        var lowLevel = this.props.node.highLevel().lowLevel();\n        var hasUnit = lowLevel.unit() != null;\n        if (!hasUnit) {\n            return React.createElement('span', null, this.props.children);\n        }\n        return React.createElement('a', {\n            onClick: function () { return _this.openInEditor(lowLevel); }\n        }, this.props.children);\n    };\n    return OpenInEditor;\n}(PureComponent));\nvar MarkdownBlock = (function (_super) {\n    __extends(MarkdownBlock, _super);\n    function MarkdownBlock() {\n        _super.apply(this, arguments);\n    }\n    MarkdownBlock.prototype.render = function () {\n        var content = this.props.content;\n        if (content == null) {\n            return null;\n        }\n        return React.createElement(Block, { dangerouslySetInnerHTML: { __html: marked(content) } });\n    };\n    return MarkdownBlock;\n}(PureComponent));\nfunction plural(count, singular, plural) {\n    return count === 1 ? singular : plural;\n}\nfunction getCaseless(obj, key) {\n    var keys = Object.keys(obj);\n    var match = key.toLowerCase();\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i].toLowerCase() === match) {\n            return obj[keys[i]];\n        }\n    }\n}\nfunction getNodeLabel(node) {\n    var name = node.getKind() === highLevelAst.NodeKind.ATTRIBUTE ? node.value() : node.name();\n    if (typeof name !== 'string') {\n        name = name.valueName();\n    }\n    if (!name && node.getKind() === highLevelAst.NodeKind.NODE) {\n        var wrapper = node.wrapperNode();\n        if (RamlWrapper1.isDocumentationItem(wrapper) ||\n            RamlWrapper08.isDocumentationItem(wrapper)) {\n            return wrapper.title();\n        }\n        if (RamlWrapper1.isApi(wrapper) || RamlWrapper08.isApi(wrapper) ||\n            RamlWrapper1.isExtension(wrapper) || RamlWrapper1.isOverlay(wrapper)) {\n            return 'Home';\n        }\n    }\n    return name;\n}\nfunction isXML(content) {\n    if (typeof content !== 'string') {\n        return false;\n    }\n    var trimmed = content.trim();\n    if (trimmed.length < 1) {\n        return false;\n    }\n    if (trimmed.charAt(0) === \"<\" && trimmed.charAt(trimmed.length - 1) === \">\") {\n        return true;\n    }\n    return false;\n}\nfunction isJSON(content) {\n    try {\n        JSON.parse(content);\n        return true;\n    }\n    catch (exception) {\n        return false;\n    }\n}\nfunction localParameters(node) {\n    var baseUriParams = node.ownerApi().baseUriParameters().map(function (param) { return param.name(); });\n    return filter(node.absoluteUriParameters(), function (param) { return baseUriParams.indexOf(param.name()) < 0; });\n}\nfunction filter(array, condition) {\n    var result = [];\n    array.forEach(function (element) { return condition(element) && result.push(element); });\n    return result;\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/console/render.js\n ** module id = 58\n ** module chunks = 0\n **/","module.exports = [\n\t{\n\t\t\"id\": 31423945,\n\t\t\"name\": \"AmazonS3\",\n\t\t\"full_name\": \"raml-apis/AmazonS3\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AmazonS3\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AmazonS3/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:35Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:35Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:01Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AmazonS3.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AmazonS3.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AmazonS3.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AmazonS3\",\n\t\t\"homepage\": null,\n\t\t\"size\": 264,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423955,\n\t\t\"name\": \"Box\",\n\t\t\"full_name\": \"raml-apis/Box\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Box\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Box\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Box/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Box/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Box/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Box/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Box/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Box/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Box/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Box/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Box/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Box/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Box/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Box/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Box/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Box/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Box/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Box/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Box/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Box/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Box/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Box/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Box/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Box/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Box/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Box/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Box/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Box/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Box/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Box/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Box/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Box/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Box/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Box/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Box/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Box/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Box/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:41Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:41Z\",\n\t\t\"pushed_at\": \"2015-07-28T23:37:53Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Box.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Box.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Box.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Box\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423957,\n\t\t\"name\": \"Bufferapp\",\n\t\t\"full_name\": \"raml-apis/Bufferapp\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bufferapp\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bufferapp/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:42Z\",\n\t\t\"updated_at\": \"2015-02-27T15:08:44Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:27Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Bufferapp.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Bufferapp.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Bufferapp.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Bufferapp\",\n\t\t\"homepage\": null,\n\t\t\"size\": 172,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423973,\n\t\t\"name\": \"FuelEconomy\",\n\t\t\"full_name\": \"raml-apis/FuelEconomy\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/FuelEconomy\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FuelEconomy/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"pushed_at\": \"2015-04-04T00:32:59Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/FuelEconomy.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/FuelEconomy.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/FuelEconomy.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/FuelEconomy\",\n\t\t\"homepage\": null,\n\t\t\"size\": 172,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423980,\n\t\t\"name\": \"GoogleContacts\",\n\t\t\"full_name\": \"raml-apis/GoogleContacts\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleContacts\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleContacts/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:52Z\",\n\t\t\"updated_at\": \"2015-10-31T15:35:32Z\",\n\t\t\"pushed_at\": \"2015-05-21T12:01:57Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleContacts.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleContacts.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleContacts.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleContacts\",\n\t\t\"homepage\": null,\n\t\t\"size\": 260,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423986,\n\t\t\"name\": \"Instagram\",\n\t\t\"full_name\": \"raml-apis/Instagram\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Instagram\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Instagram/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Instagram/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Instagram/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Instagram/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Instagram/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Instagram/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Instagram/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Instagram/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Instagram/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Instagram/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Instagram/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Instagram/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Instagram/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Instagram/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Instagram/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Instagram/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Instagram/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Instagram/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Instagram/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Instagram/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Instagram/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Instagram/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Instagram/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Instagram/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Instagram/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Instagram/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:56Z\",\n\t\t\"updated_at\": \"2015-09-08T12:55:09Z\",\n\t\t\"pushed_at\": \"2015-10-14T07:16:39Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Instagram.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Instagram.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Instagram.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Instagram\",\n\t\t\"homepage\": null,\n\t\t\"size\": 187,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423979,\n\t\t\"name\": \"GoogleCalendar\",\n\t\t\"full_name\": \"raml-apis/GoogleCalendar\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleCalendar/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:51Z\",\n\t\t\"updated_at\": \"2015-02-27T15:09:48Z\",\n\t\t\"pushed_at\": \"2015-05-21T02:57:16Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleCalendar.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleCalendar.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleCalendar\",\n\t\t\"homepage\": null,\n\t\t\"size\": 252,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423964,\n\t\t\"name\": \"Facebook\",\n\t\t\"full_name\": \"raml-apis/Facebook\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Facebook\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Facebook/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Facebook/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Facebook/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Facebook/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Facebook/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Facebook/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Facebook/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Facebook/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Facebook/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Facebook/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Facebook/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Facebook/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Facebook/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Facebook/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Facebook/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Facebook/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Facebook/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Facebook/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Facebook/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Facebook/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Facebook/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Facebook/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Facebook/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Facebook/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Facebook/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Facebook/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:45Z\",\n\t\t\"updated_at\": \"2015-10-21T23:11:31Z\",\n\t\t\"pushed_at\": \"2015-07-06T13:46:05Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Facebook.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Facebook.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Facebook.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Facebook\",\n\t\t\"homepage\": null,\n\t\t\"size\": 272,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424019,\n\t\t\"name\": \"Stormpath\",\n\t\t\"full_name\": \"raml-apis/Stormpath\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stormpath\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stormpath/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stormpath/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stormpath/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stormpath/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stormpath/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stormpath/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stormpath/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stormpath/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stormpath/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stormpath/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stormpath/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stormpath/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stormpath/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stormpath/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stormpath/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stormpath/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stormpath/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stormpath/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stormpath/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stormpath/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stormpath/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stormpath/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:33Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Stormpath.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Stormpath.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Stormpath.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Stormpath\",\n\t\t\"homepage\": null,\n\t\t\"size\": 188,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424034,\n\t\t\"name\": \"XKCD\",\n\t\t\"full_name\": \"raml-apis/XKCD\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/XKCD\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/XKCD/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/XKCD/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/XKCD/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/XKCD/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/XKCD/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/XKCD/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/XKCD/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/XKCD/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/XKCD/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/XKCD/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/XKCD/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/XKCD/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/XKCD/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/XKCD/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/XKCD/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/XKCD/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/XKCD/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/XKCD/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/XKCD/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/XKCD/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/XKCD/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/XKCD/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/XKCD/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/XKCD/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/XKCD/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/XKCD/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:21Z\",\n\t\t\"updated_at\": \"2015-03-09T16:53:13Z\",\n\t\t\"pushed_at\": \"2015-08-07T05:17:33Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/XKCD.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/XKCD.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/XKCD.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/XKCD\",\n\t\t\"homepage\": null,\n\t\t\"size\": 148,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424012,\n\t\t\"name\": \"SlideShare\",\n\t\t\"full_name\": \"raml-apis/SlideShare\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SlideShare\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SlideShare/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SlideShare/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SlideShare/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SlideShare/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SlideShare/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SlideShare/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SlideShare/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SlideShare/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SlideShare/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SlideShare/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SlideShare/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SlideShare/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SlideShare/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SlideShare/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SlideShare/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SlideShare/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SlideShare/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SlideShare/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SlideShare/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SlideShare/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SlideShare/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SlideShare/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:11Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:11Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:13Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SlideShare.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SlideShare.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SlideShare.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SlideShare\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424024,\n\t\t\"name\": \"Twilio\",\n\t\t\"full_name\": \"raml-apis/Twilio\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twilio\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twilio/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twilio/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twilio/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twilio/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twilio/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twilio/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twilio/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twilio/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twilio/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twilio/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twilio/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twilio/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twilio/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twilio/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twilio/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twilio/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twilio/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twilio/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twilio/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twilio/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twilio/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twilio/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twilio/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twilio/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twilio/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twilio/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:16Z\",\n\t\t\"updated_at\": \"2015-03-09T16:42:14Z\",\n\t\t\"pushed_at\": \"2015-08-21T10:07:35Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twilio.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twilio.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twilio.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twilio\",\n\t\t\"homepage\": null,\n\t\t\"size\": 340,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424029,\n\t\t\"name\": \"WeatherUnderground\",\n\t\t\"full_name\": \"raml-apis/WeatherUnderground\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/WeatherUnderground/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:19Z\",\n\t\t\"updated_at\": \"2015-10-31T15:36:51Z\",\n\t\t\"pushed_at\": \"2015-07-30T15:19:32Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/WeatherUnderground.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/WeatherUnderground.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/WeatherUnderground\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424039,\n\t\t\"name\": \"Zuora\",\n\t\t\"full_name\": \"raml-apis/Zuora\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zuora\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zuora/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zuora/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zuora/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zuora/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zuora/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zuora/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zuora/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zuora/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zuora/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zuora/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zuora/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zuora/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zuora/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zuora/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zuora/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zuora/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zuora/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zuora/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zuora/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zuora/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zuora/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zuora/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zuora/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zuora/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zuora/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zuora/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:43:10Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:34Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zuora.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zuora.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zuora.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zuora\",\n\t\t\"homepage\": null,\n\t\t\"size\": 184,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423938,\n\t\t\"name\": \"AccuWeather\",\n\t\t\"full_name\": \"raml-apis/AccuWeather\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AccuWeather\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AccuWeather/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:18Z\",\n\t\t\"pushed_at\": \"2015-11-06T07:20:20Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AccuWeather.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AccuWeather.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AccuWeather.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AccuWeather\",\n\t\t\"homepage\": null,\n\t\t\"size\": 278,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424026,\n\t\t\"name\": \"Twitch\",\n\t\t\"full_name\": \"raml-apis/Twitch\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitch\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitch/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitch/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitch/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitch/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitch/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitch/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitch/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitch/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitch/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitch/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitch/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitch/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitch/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitch/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitch/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitch/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitch/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitch/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitch/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitch/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitch/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitch/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitch/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitch/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitch/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitch/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:17Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:17Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:49Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twitch.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitch.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twitch.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twitch\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423975,\n\t\t\"name\": \"Geonames\",\n\t\t\"full_name\": \"raml-apis/Geonames\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Geonames\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Geonames/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Geonames/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Geonames/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Geonames/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Geonames/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Geonames/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Geonames/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Geonames/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Geonames/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Geonames/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Geonames/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Geonames/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Geonames/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Geonames/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Geonames/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Geonames/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Geonames/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Geonames/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Geonames/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Geonames/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Geonames/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Geonames/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Geonames/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Geonames/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Geonames/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Geonames/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:49Z\",\n\t\t\"updated_at\": \"2015-03-16T03:36:21Z\",\n\t\t\"pushed_at\": \"2015-07-24T13:32:52Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Geonames.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Geonames.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Geonames.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Geonames\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 1,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 1,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 34848402,\n\t\t\"name\": \"Uber\",\n\t\t\"full_name\": \"raml-apis/Uber\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Uber\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Uber/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Uber/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Uber/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Uber/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Uber/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Uber/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Uber/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Uber/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Uber/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Uber/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Uber/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Uber/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Uber/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Uber/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Uber/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Uber/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Uber/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Uber/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Uber/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Uber/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Uber/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Uber/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Uber/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Uber/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Uber/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Uber/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Uber/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Uber/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Uber/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Uber/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Uber/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Uber/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Uber/releases{/id}\",\n\t\t\"created_at\": \"2015-04-30T10:18:59Z\",\n\t\t\"updated_at\": \"2015-04-30T10:18:59Z\",\n\t\t\"pushed_at\": \"2015-10-15T05:35:23Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Uber.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Uber.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Uber.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Uber\",\n\t\t\"homepage\": null,\n\t\t\"size\": 193,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 3,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 3,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"staging\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423987,\n\t\t\"name\": \"Jira\",\n\t\t\"full_name\": \"raml-apis/Jira\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Jira\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Jira/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Jira/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Jira/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Jira/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Jira/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Jira/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Jira/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Jira/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Jira/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Jira/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Jira/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Jira/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Jira/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Jira/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Jira/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Jira/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Jira/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Jira/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Jira/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Jira/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Jira/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Jira/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Jira/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Jira/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Jira/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Jira/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Jira/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Jira/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Jira/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Jira/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Jira/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Jira/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Jira/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:57Z\",\n\t\t\"updated_at\": \"2015-09-30T16:37:10Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:12:56Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Jira.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Jira.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Jira.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Jira\",\n\t\t\"homepage\": null,\n\t\t\"size\": 240,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424011,\n\t\t\"name\": \"Slack\",\n\t\t\"full_name\": \"raml-apis/Slack\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Slack\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Slack/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Slack/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Slack/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Slack/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Slack/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Slack/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Slack/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Slack/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Slack/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Slack/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Slack/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Slack/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Slack/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Slack/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Slack/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Slack/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Slack/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Slack/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Slack/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Slack/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Slack/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Slack/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Slack/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Slack/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Slack/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Slack/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Slack/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Slack/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Slack/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Slack/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Slack/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Slack/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Slack/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:10Z\",\n\t\t\"updated_at\": \"2015-02-27T15:12:05Z\",\n\t\t\"pushed_at\": \"2015-10-14T05:29:57Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Slack.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Slack.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Slack.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Slack\",\n\t\t\"homepage\": null,\n\t\t\"size\": 237,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423977,\n\t\t\"name\": \"GitHub\",\n\t\t\"full_name\": \"raml-apis/GitHub\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GitHub\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GitHub/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GitHub/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GitHub/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GitHub/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GitHub/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GitHub/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GitHub/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GitHub/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GitHub/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GitHub/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GitHub/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GitHub/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GitHub/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GitHub/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GitHub/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GitHub/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GitHub/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GitHub/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GitHub/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GitHub/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GitHub/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GitHub/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GitHub/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GitHub/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GitHub/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GitHub/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:50Z\",\n\t\t\"updated_at\": \"2015-11-04T16:18:02Z\",\n\t\t\"pushed_at\": \"2015-10-16T09:54:09Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GitHub.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GitHub.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GitHub.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GitHub\",\n\t\t\"homepage\": null,\n\t\t\"size\": 366,\n\t\t\"stargazers_count\": 1,\n\t\t\"watchers_count\": 1,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 2,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 2,\n\t\t\"watchers\": 1,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423990,\n\t\t\"name\": \"LinkedIn\",\n\t\t\"full_name\": \"raml-apis/LinkedIn\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/LinkedIn\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/LinkedIn/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:59Z\",\n\t\t\"updated_at\": \"2015-02-27T15:11:03Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:13:06Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/LinkedIn.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/LinkedIn.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/LinkedIn.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/LinkedIn\",\n\t\t\"homepage\": null,\n\t\t\"size\": 184,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424036,\n\t\t\"name\": \"Yammer\",\n\t\t\"full_name\": \"raml-apis/Yammer\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Yammer\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Yammer/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Yammer/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Yammer/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Yammer/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Yammer/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Yammer/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Yammer/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Yammer/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Yammer/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Yammer/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Yammer/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Yammer/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Yammer/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Yammer/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Yammer/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Yammer/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Yammer/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Yammer/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Yammer/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Yammer/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Yammer/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Yammer/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Yammer/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Yammer/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Yammer/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Yammer/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:22Z\",\n\t\t\"updated_at\": \"2015-03-09T16:52:23Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:18Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Yammer.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Yammer.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Yammer.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Yammer\",\n\t\t\"homepage\": null,\n\t\t\"size\": 168,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423985,\n\t\t\"name\": \"HealthCare\",\n\t\t\"full_name\": \"raml-apis/HealthCare\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/HealthCare\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/HealthCare/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/HealthCare/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/HealthCare/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/HealthCare/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/HealthCare/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/HealthCare/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/HealthCare/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/HealthCare/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/HealthCare/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/HealthCare/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/HealthCare/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/HealthCare/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/HealthCare/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/HealthCare/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/HealthCare/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/HealthCare/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/HealthCare/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/HealthCare/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/HealthCare/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/HealthCare/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/HealthCare/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/HealthCare/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:55Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:55Z\",\n\t\t\"pushed_at\": \"2015-07-30T16:44:45Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/HealthCare.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/HealthCare.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/HealthCare.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/HealthCare\",\n\t\t\"homepage\": null,\n\t\t\"size\": 200,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423954,\n\t\t\"name\": \"Blogger\",\n\t\t\"full_name\": \"raml-apis/Blogger\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Blogger\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Blogger/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Blogger/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Blogger/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Blogger/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Blogger/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Blogger/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Blogger/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Blogger/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Blogger/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Blogger/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Blogger/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Blogger/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Blogger/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Blogger/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Blogger/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Blogger/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Blogger/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Blogger/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Blogger/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Blogger/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Blogger/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Blogger/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Blogger/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Blogger/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Blogger/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Blogger/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:40Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:40Z\",\n\t\t\"pushed_at\": \"2015-05-28T11:21:49Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Blogger.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Blogger.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Blogger.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Blogger\",\n\t\t\"homepage\": null,\n\t\t\"size\": 200,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 41861038,\n\t\t\"name\": \"SalesforceChatter\",\n\t\t\"full_name\": \"raml-apis/SalesforceChatter\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SalesforceChatter/releases{/id}\",\n\t\t\"created_at\": \"2015-09-03T13:24:46Z\",\n\t\t\"updated_at\": \"2015-09-03T13:36:51Z\",\n\t\t\"pushed_at\": \"2015-10-22T12:08:05Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SalesforceChatter.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SalesforceChatter.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SalesforceChatter\",\n\t\t\"homepage\": null,\n\t\t\"size\": 412,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"RAML\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"production\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423959,\n\t\t\"name\": \"Elasticsearch\",\n\t\t\"full_name\": \"raml-apis/Elasticsearch\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Elasticsearch\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Elasticsearch/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:43Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:43Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:32Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Elasticsearch.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Elasticsearch.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Elasticsearch.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Elasticsearch\",\n\t\t\"homepage\": null,\n\t\t\"size\": 228,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423981,\n\t\t\"name\": \"GoogleDrive\",\n\t\t\"full_name\": \"raml-apis/GoogleDrive\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleDrive\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleDrive/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:53Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:53Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:30:50Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleDrive.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleDrive.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleDrive.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleDrive\",\n\t\t\"homepage\": null,\n\t\t\"size\": 268,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424001,\n\t\t\"name\": \"PagerDuty\",\n\t\t\"full_name\": \"raml-apis/PagerDuty\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/PagerDuty\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PagerDuty/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:04Z\",\n\t\t\"updated_at\": \"2015-03-09T16:43:49Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:37:18Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/PagerDuty.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/PagerDuty.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/PagerDuty.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/PagerDuty\",\n\t\t\"homepage\": null,\n\t\t\"size\": 232,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424037,\n\t\t\"name\": \"Zendesk\",\n\t\t\"full_name\": \"raml-apis/Zendesk\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zendesk\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zendesk/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zendesk/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zendesk/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zendesk/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zendesk/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zendesk/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zendesk/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zendesk/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zendesk/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zendesk/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zendesk/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zendesk/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zendesk/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zendesk/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zendesk/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zendesk/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zendesk/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zendesk/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zendesk/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zendesk/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zendesk/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zendesk/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:23Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:58Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:15:23Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zendesk.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zendesk.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zendesk.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zendesk\",\n\t\t\"homepage\": null,\n\t\t\"size\": 320,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423982,\n\t\t\"name\": \"GoogleMail\",\n\t\t\"full_name\": \"raml-apis/GoogleMail\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/GoogleMail\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/GoogleMail/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:54Z\",\n\t\t\"updated_at\": \"2015-02-27T15:10:17Z\",\n\t\t\"pushed_at\": \"2015-10-15T11:27:34Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/GoogleMail.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/GoogleMail.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/GoogleMail.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/GoogleMail\",\n\t\t\"homepage\": null,\n\t\t\"size\": 208,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423998,\n\t\t\"name\": \"NewRelic\",\n\t\t\"full_name\": \"raml-apis/NewRelic\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/NewRelic\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/NewRelic/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/NewRelic/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/NewRelic/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/NewRelic/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/NewRelic/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/NewRelic/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/NewRelic/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/NewRelic/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/NewRelic/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/NewRelic/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/NewRelic/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/NewRelic/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/NewRelic/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/NewRelic/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/NewRelic/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/NewRelic/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/NewRelic/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/NewRelic/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/NewRelic/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/NewRelic/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/NewRelic/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/NewRelic/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:02Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:02Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:13:24Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/NewRelic.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/NewRelic.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/NewRelic.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/NewRelic\",\n\t\t\"homepage\": null,\n\t\t\"size\": 248,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424027,\n\t\t\"name\": \"Twitter\",\n\t\t\"full_name\": \"raml-apis/Twitter\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Twitter\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Twitter/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Twitter/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Twitter/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Twitter/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Twitter/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Twitter/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Twitter/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Twitter/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Twitter/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Twitter/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Twitter/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Twitter/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Twitter/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Twitter/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Twitter/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Twitter/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Twitter/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Twitter/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Twitter/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Twitter/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Twitter/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Twitter/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Twitter/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Twitter/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Twitter/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Twitter/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:18Z\",\n\t\t\"updated_at\": \"2015-04-28T22:37:52Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:26:44Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Twitter.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Twitter.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Twitter.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Twitter\",\n\t\t\"homepage\": null,\n\t\t\"size\": 256,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424038,\n\t\t\"name\": \"Zillow\",\n\t\t\"full_name\": \"raml-apis/Zillow\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Zillow\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Zillow/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Zillow/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Zillow/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Zillow/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Zillow/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Zillow/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Zillow/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Zillow/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Zillow/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Zillow/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Zillow/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Zillow/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Zillow/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Zillow/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Zillow/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Zillow/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Zillow/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Zillow/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Zillow/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Zillow/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Zillow/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Zillow/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Zillow/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Zillow/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Zillow/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Zillow/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:24Z\",\n\t\t\"updated_at\": \"2015-03-09T16:51:44Z\",\n\t\t\"pushed_at\": \"2015-07-24T13:33:15Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Zillow.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Zillow.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Zillow.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Zillow\",\n\t\t\"homepage\": null,\n\t\t\"size\": 232,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 34780551,\n\t\t\"name\": \"FlightStats\",\n\t\t\"full_name\": \"raml-apis/FlightStats\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\"description\": \"\",\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/FlightStats\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/FlightStats/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/FlightStats/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/FlightStats/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/FlightStats/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/FlightStats/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/FlightStats/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/FlightStats/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/FlightStats/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/FlightStats/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/FlightStats/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/FlightStats/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/FlightStats/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/FlightStats/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/FlightStats/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/FlightStats/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/FlightStats/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/FlightStats/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/FlightStats/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/FlightStats/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/FlightStats/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/FlightStats/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/FlightStats/releases{/id}\",\n\t\t\"created_at\": \"2015-04-29T08:03:54Z\",\n\t\t\"updated_at\": \"2015-04-29T08:03:54Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:10:56Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/FlightStats.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/FlightStats.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/FlightStats.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/FlightStats\",\n\t\t\"homepage\": null,\n\t\t\"size\": 460,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": true,\n\t\t\"has_downloads\": true,\n\t\t\"has_wiki\": true,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"staging\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424005,\n\t\t\"name\": \"PivotalTracker\",\n\t\t\"full_name\": \"raml-apis/PivotalTracker\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/PivotalTracker\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/PivotalTracker/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:07Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:07Z\",\n\t\t\"pushed_at\": \"2015-07-06T14:50:22Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/PivotalTracker.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/PivotalTracker.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/PivotalTracker.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/PivotalTracker\",\n\t\t\"homepage\": null,\n\t\t\"size\": 196,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424014,\n\t\t\"name\": \"SmartSheet\",\n\t\t\"full_name\": \"raml-apis/SmartSheet\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/SmartSheet\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/SmartSheet/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:12Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:12Z\",\n\t\t\"pushed_at\": \"2015-05-22T15:01:12Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/SmartSheet.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/SmartSheet.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/SmartSheet.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/SmartSheet\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424018,\n\t\t\"name\": \"StackExchange\",\n\t\t\"full_name\": \"raml-apis/StackExchange\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/StackExchange\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/StackExchange/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/StackExchange/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/StackExchange/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/StackExchange/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/StackExchange/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/StackExchange/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/StackExchange/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/StackExchange/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/StackExchange/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/StackExchange/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/StackExchange/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/StackExchange/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/StackExchange/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/StackExchange/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/StackExchange/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/StackExchange/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/StackExchange/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/StackExchange/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/StackExchange/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/StackExchange/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/StackExchange/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/StackExchange/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:14Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:28Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/StackExchange.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/StackExchange.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/StackExchange.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/StackExchange\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424002,\n\t\t\"name\": \"Parse\",\n\t\t\"full_name\": \"raml-apis/Parse\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Parse\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Parse/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Parse/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Parse/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Parse/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Parse/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Parse/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Parse/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Parse/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Parse/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Parse/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Parse/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Parse/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Parse/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Parse/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Parse/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Parse/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Parse/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Parse/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Parse/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Parse/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Parse/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Parse/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Parse/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Parse/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Parse/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Parse/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Parse/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Parse/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Parse/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Parse/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Parse/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Parse/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Parse/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:05Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:05Z\",\n\t\t\"pushed_at\": \"2015-07-28T19:32:46Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Parse.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Parse.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Parse.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Parse\",\n\t\t\"homepage\": null,\n\t\t\"size\": 224,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423952,\n\t\t\"name\": \"Bitly\",\n\t\t\"full_name\": \"raml-apis/Bitly\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Bitly\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Bitly/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Bitly/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Bitly/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Bitly/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Bitly/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Bitly/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Bitly/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Bitly/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Bitly/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Bitly/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Bitly/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Bitly/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Bitly/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Bitly/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Bitly/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Bitly/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Bitly/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Bitly/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Bitly/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Bitly/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Bitly/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Bitly/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Bitly/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Bitly/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Bitly/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Bitly/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"updated_at\": \"2015-02-27T15:08:16Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:12Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Bitly.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Bitly.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Bitly.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Bitly\",\n\t\t\"homepage\": null,\n\t\t\"size\": 204,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": \"Java\",\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424021,\n\t\t\"name\": \"Stripe\",\n\t\t\"full_name\": \"raml-apis/Stripe\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Stripe\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Stripe/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Stripe/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Stripe/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Stripe/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Stripe/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Stripe/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Stripe/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Stripe/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Stripe/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Stripe/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Stripe/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Stripe/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Stripe/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Stripe/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Stripe/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Stripe/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Stripe/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Stripe/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Stripe/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Stripe/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Stripe/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Stripe/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Stripe/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Stripe/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Stripe/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Stripe/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:15Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:15Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:38Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Stripe.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Stripe.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Stripe.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Stripe\",\n\t\t\"homepage\": null,\n\t\t\"size\": 380,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31423951,\n\t\t\"name\": \"AzureTableStorage\",\n\t\t\"full_name\": \"raml-apis/AzureTableStorage\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/AzureTableStorage/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"updated_at\": \"2015-02-27T14:51:39Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:11:07Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/AzureTableStorage.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/AzureTableStorage.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/AzureTableStorage\",\n\t\t\"homepage\": null,\n\t\t\"size\": 152,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 1,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 1,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424016,\n\t\t\"name\": \"Squareup\",\n\t\t\"full_name\": \"raml-apis/Squareup\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Squareup\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Squareup/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Squareup/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Squareup/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Squareup/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Squareup/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Squareup/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Squareup/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Squareup/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Squareup/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Squareup/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Squareup/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Squareup/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Squareup/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Squareup/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Squareup/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Squareup/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Squareup/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Squareup/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Squareup/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Squareup/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Squareup/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Squareup/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Squareup/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Squareup/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Squareup/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Squareup/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:13Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:13Z\",\n\t\t\"pushed_at\": \"2015-03-16T16:14:08Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Squareup.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Squareup.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Squareup.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Squareup\",\n\t\t\"homepage\": null,\n\t\t\"size\": 176,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t},\n\t{\n\t\t\"id\": 31424009,\n\t\t\"name\": \"Salesforce\",\n\t\t\"full_name\": \"raml-apis/Salesforce\",\n\t\t\"owner\": {\n\t\t\t\"login\": \"raml-apis\",\n\t\t\t\"id\": 11064836,\n\t\t\t\"avatar_url\": \"https://avatars.githubusercontent.com/u/11064836?v=3\",\n\t\t\t\"gravatar_id\": \"\",\n\t\t\t\"url\": \"https://api.github.com/users/raml-apis\",\n\t\t\t\"html_url\": \"https://github.com/raml-apis\",\n\t\t\t\"followers_url\": \"https://api.github.com/users/raml-apis/followers\",\n\t\t\t\"following_url\": \"https://api.github.com/users/raml-apis/following{/other_user}\",\n\t\t\t\"gists_url\": \"https://api.github.com/users/raml-apis/gists{/gist_id}\",\n\t\t\t\"starred_url\": \"https://api.github.com/users/raml-apis/starred{/owner}{/repo}\",\n\t\t\t\"subscriptions_url\": \"https://api.github.com/users/raml-apis/subscriptions\",\n\t\t\t\"organizations_url\": \"https://api.github.com/users/raml-apis/orgs\",\n\t\t\t\"repos_url\": \"https://api.github.com/users/raml-apis/repos\",\n\t\t\t\"events_url\": \"https://api.github.com/users/raml-apis/events{/privacy}\",\n\t\t\t\"received_events_url\": \"https://api.github.com/users/raml-apis/received_events\",\n\t\t\t\"type\": \"Organization\",\n\t\t\t\"site_admin\": false\n\t\t},\n\t\t\"private\": false,\n\t\t\"html_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\"description\": null,\n\t\t\"fork\": false,\n\t\t\"url\": \"https://api.github.com/repos/raml-apis/Salesforce\",\n\t\t\"forks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/forks\",\n\t\t\"keys_url\": \"https://api.github.com/repos/raml-apis/Salesforce/keys{/key_id}\",\n\t\t\"collaborators_url\": \"https://api.github.com/repos/raml-apis/Salesforce/collaborators{/collaborator}\",\n\t\t\"teams_url\": \"https://api.github.com/repos/raml-apis/Salesforce/teams\",\n\t\t\"hooks_url\": \"https://api.github.com/repos/raml-apis/Salesforce/hooks\",\n\t\t\"issue_events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/events{/number}\",\n\t\t\"events_url\": \"https://api.github.com/repos/raml-apis/Salesforce/events\",\n\t\t\"assignees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/assignees{/user}\",\n\t\t\"branches_url\": \"https://api.github.com/repos/raml-apis/Salesforce/branches{/branch}\",\n\t\t\"tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/tags\",\n\t\t\"blobs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/blobs{/sha}\",\n\t\t\"git_tags_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/tags{/sha}\",\n\t\t\"git_refs_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/refs{/sha}\",\n\t\t\"trees_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/trees{/sha}\",\n\t\t\"statuses_url\": \"https://api.github.com/repos/raml-apis/Salesforce/statuses/{sha}\",\n\t\t\"languages_url\": \"https://api.github.com/repos/raml-apis/Salesforce/languages\",\n\t\t\"stargazers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/stargazers\",\n\t\t\"contributors_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contributors\",\n\t\t\"subscribers_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscribers\",\n\t\t\"subscription_url\": \"https://api.github.com/repos/raml-apis/Salesforce/subscription\",\n\t\t\"commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/commits{/sha}\",\n\t\t\"git_commits_url\": \"https://api.github.com/repos/raml-apis/Salesforce/git/commits{/sha}\",\n\t\t\"comments_url\": \"https://api.github.com/repos/raml-apis/Salesforce/comments{/number}\",\n\t\t\"issue_comment_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues/comments{/number}\",\n\t\t\"contents_url\": \"https://api.github.com/repos/raml-apis/Salesforce/contents/{+path}\",\n\t\t\"compare_url\": \"https://api.github.com/repos/raml-apis/Salesforce/compare/{base}...{head}\",\n\t\t\"merges_url\": \"https://api.github.com/repos/raml-apis/Salesforce/merges\",\n\t\t\"archive_url\": \"https://api.github.com/repos/raml-apis/Salesforce/{archive_format}{/ref}\",\n\t\t\"downloads_url\": \"https://api.github.com/repos/raml-apis/Salesforce/downloads\",\n\t\t\"issues_url\": \"https://api.github.com/repos/raml-apis/Salesforce/issues{/number}\",\n\t\t\"pulls_url\": \"https://api.github.com/repos/raml-apis/Salesforce/pulls{/number}\",\n\t\t\"milestones_url\": \"https://api.github.com/repos/raml-apis/Salesforce/milestones{/number}\",\n\t\t\"notifications_url\": \"https://api.github.com/repos/raml-apis/Salesforce/notifications{?since,all,participating}\",\n\t\t\"labels_url\": \"https://api.github.com/repos/raml-apis/Salesforce/labels{/name}\",\n\t\t\"releases_url\": \"https://api.github.com/repos/raml-apis/Salesforce/releases{/id}\",\n\t\t\"created_at\": \"2015-02-27T14:52:09Z\",\n\t\t\"updated_at\": \"2015-02-27T14:52:09Z\",\n\t\t\"pushed_at\": \"2015-04-01T22:14:02Z\",\n\t\t\"git_url\": \"git://github.com/raml-apis/Salesforce.git\",\n\t\t\"ssh_url\": \"git@github.com:raml-apis/Salesforce.git\",\n\t\t\"clone_url\": \"https://github.com/raml-apis/Salesforce.git\",\n\t\t\"svn_url\": \"https://github.com/raml-apis/Salesforce\",\n\t\t\"homepage\": null,\n\t\t\"size\": 180,\n\t\t\"stargazers_count\": 0,\n\t\t\"watchers_count\": 0,\n\t\t\"language\": null,\n\t\t\"has_issues\": false,\n\t\t\"has_downloads\": false,\n\t\t\"has_wiki\": false,\n\t\t\"has_pages\": false,\n\t\t\"forks_count\": 0,\n\t\t\"mirror_url\": null,\n\t\t\"open_issues_count\": 0,\n\t\t\"forks\": 0,\n\t\t\"open_issues\": 0,\n\t\t\"watchers\": 0,\n\t\t\"default_branch\": \"master\",\n\t\t\"permissions\": {\n\t\t\t\"admin\": false,\n\t\t\t\"push\": false,\n\t\t\t\"pull\": true\n\t\t}\n\t}\n];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/config/apiList.json\n ** module id = 59\n ** module chunks = 0\n **/","\"use strict\";\nvar rp = require(\"raml-1-parser\");\nvar def = rp.ds;\nvar UI = require(\"atom-ui-lib\");\nvar schemautil = rp.schema;\nvar editorTools = require(\"./editor-tools\");\nvar details2 = require(\"./details2\");\nvar HTTPANDHTTPS = \"HTTP, HTTPS\";\nvar HTTPHTTPS = \"HTTP/HTTPS\";\nexports.nodes = {\n    Api: {\n        properties: [\"title\", \"version\", \"baseUri\", \"mediaType\", \"protocols\"],\n        actions: []\n    },\n    Resource: {\n        properties: [\"relativeUri\", \"displayName\", \"description\", \"is\", \"type\"]\n    },\n    Method: {\n        properties: [\"method\", \"displayName\", \"description\", \"is\", \"type\", \"protocols\", \"securedBy\"]\n    },\n    DataElement: {\n        properties: [\"name\", \"displayName\", \"description\", \"default\", \"required\"]\n    },\n    Response: {\n        properties: [\"code\", \"description\"]\n    }\n};\nexports.filterOut = {\n    properties: [\"location\", \"annotations\", \"repeat\", \"locationKind\", \"signature\"]\n};\n//export function property2(node: hl.IHighLevelNode, name: string, descriptionLabel?: UI.TextElement<any>, updateTextOnDone: boolean = false) {\n//    var pinfo = propertyInfo(node, name);\n//\n//    return property(name, pinfo.required, pinfo.type, pinfo.value, pinfo.values, node, descriptionLabel, updateTextOnDone);\n//}\nvar focusedPropertyName = null;\nvar focusedPosition = -1;\nvar toFocus = null;\nfunction updateDetailsPanel(node, panel, updateTextOnDone) {\n    if (updateTextOnDone === void 0) { updateTextOnDone = false; }\n    panel.clear();\n    var cfg = atom.config;\n    var l = atom.styles.emitter.handlersByEventName;\n    var sadd = [].concat(l['did-add-style-element']);\n    var sremove = [].concat(l['did-remove-style-element']);\n    var schange = [].concat(l['did-update-style-element']);\n    var cfgCh = [].concat(cfg.emitter.handlersByEventName['did-change']);\n    var grammars = atom.grammars.emitter.handlersByEventName;\n    var addGrammar = [].concat(grammars[\"did-add-grammar\"]);\n    var updateGrammar = [].concat(grammars[\"did-update-grammar\"]);\n    var emptyGrammarListeners = [].concat(atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"]);\n    try {\n        var empty = true;\n        var pcmp = function (a, b) {\n            var ap = a.getAdapter(def.RAMLPropertyService).priority(), bp = b.getAdapter(def.RAMLPropertyService).priority();\n            if (ap != bp)\n                return bp - ap;\n            else\n                return a.nameId().localeCompare(b.nameId());\n        };\n        if (false && exports.nodes[node.definition().nameId()] && !node.definition().getAdapter(def.RAMLService).isUserDefined()) {\n            var info = exports.nodes[node.definition().nameId()];\n            info.properties.forEach(function (pn) {\n                try {\n                    //panel.addChild(property2(node, pn, <UI.TextElement<any>> descLabel2, updateTextOnDone));\n                    empty = false;\n                }\n                catch (e) {\n                    console.log(\"Error while updating details panel for node \", node, \"(property \", pn, \"): \", e);\n                }\n            });\n        }\n        else {\n            var item = details2.buildItem(node, false);\n            item.addListener(function (x) {\n                editorTools.aquireManager().updateText(null);\n            });\n            var rend;\n            try {\n                rend = item.render({});\n            }\n            finally {\n                if (exports.oldItem) {\n                    exports.oldItem.detach();\n                }\n                exports.oldItem = item;\n                if (rend) {\n                    panel.addChild(rend);\n                }\n                empty = false;\n            }\n        }\n        if (toFocus) {\n            var field = toFocus.getActualField().ui();\n            field.focus();\n            field.getModel().setCursorBufferPosition(focusedPosition);\n            toFocus = null;\n            focusedPosition = null;\n            focusedPropertyName = null;\n        }\n        if (empty) {\n            var errLabel = UI.h3(\"Object `\" + node.name() + \"` has no additional properties.\");\n            UI.applyStyling(UI.TextClasses.WARNING, errLabel);\n            errLabel.setStyle(\"text-align\", \"center\").margin(0, 0, 24, 12);\n            panel.addChild(errLabel);\n        }\n        ;\n    }\n    finally {\n        cfg.emitter.handlersByEventName['did-change'] = cfgCh;\n        l['did-add-style-element'] = sadd;\n        l['did-remove-style-element'] = sremove;\n        l['did-update-style-element'] = schange;\n        grammars[\"did-add-grammar\"] = addGrammar;\n        grammars[\"did-update-grammar\"] = updateGrammar;\n        atom.grammars.nullGrammar.emitter.handlersByEventName[\"did-update\"] = emptyGrammarListeners;\n    }\n}\nexports.updateDetailsPanel = updateDetailsPanel;\n//export function property(name: string, required: boolean, type: string, value: string, values: any[], node: hl.IHighLevelNode, descriptionLabel: UI.TextElement<any>, updateText: boolean = false) {\n//    var bonclick = (e)=>{};\n//    var attr = node.attr(name);\n//    var useModalEditor = false;\n//\n//    var tfValue = new UI.BasicBinding(dialogs.getStringValue(value));\n//    var updateViewModel = function(value) {\n//        if (updateText) editorTools.aquireManager().updateText(node.lowLevel());\n//\n//        fire = false;\n//        if (type==\"protocols\"){\n//            if (value==HTTPANDHTTPS){\n//                value=HTTPHTTPS\n//            }\n//        }\n//        tfValue.set(value);\n//        fire = true;\n//    }\n//    var disabledMessage: string = null;\n//    var res;\n//    switch (type) {\n//        case 'markdown':\n//            bonclick = dialogs.markdown(name, values, (newValue) => {\n//                node.attrOrCreate(name).setValue(value = newValue);\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'schema':\n//            bonclick = dialogs.schemaEditDialog(name, values.length > 0 ? values[0] : value, (newValue) => {\n//                node.attrOrCreate(name).setValue(newValue);\n//                if (updateText) editorTools.aquireManager().updateText();\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'schexample':\n//            bonclick = dialogs.exampleEditorDialog(name, values[1], values[0], (newValue) => {\n//                var value = newValue;\n//                if (fs.exists(newValue))\n//                    value = \"!include \" + path.relative(node.lowLevel().unit().path(), newValue);\n//                node.attrOrCreate(name).setValue(value);\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'enum':\n//            bonclick = dialogs.enumEditDialog(name, values, (values)=>{\n//                node.attributes(name).forEach(attr => attr.remove());\n//                values.forEach(val => node.attrOrCreate(name).addValue(val));\n//                updateViewModel(stringView(node, name));\n//            });\n//            useModalEditor = true;\n//            break;\n//        case 'protocols':\n//            break;\n//        case 'type':\n//            bonclick = dialogs.typeEditDialog(name, value, node, (newValue) => {\n//                node.attrOrCreate(name).setValue(newValue);\n//                updateViewModel(stringView(node, name));\n//            });\n//            if (editorTools.aquireManager().ast.elementsOfKind('resourceTypes').length < 1) disabledMessage = \"No resource types defined\";\n//            else useModalEditor = true;\n//            break;\n//        case 'trait':\n//            bonclick = dialogs.traitsEditDialog(name, values, node, (newTraits) => {\n//                node.attributes(name).forEach(attr => attr.remove());\n//\n//                newTraits\n//                    .filter(trait => trait.enabled)\n//                    .filter(trait => typeof trait.value == \"string\") // FIXME should only be trait => trait.enabled\n//                    .forEach(trait => node.attrOrCreate(name).addValue(trait.value));\n//\n//                updateViewModel(stringView(node, name));\n//            });\n//\n//            useModalEditor = true;\n//            break;\n//        default:\n//    }\n//\n//    var fire = true;\n//    var updateValueDeferred = (newValue)=>{ uvdTimeout = 0; }\n//\n//    if (!useModalEditor && node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node).length > 0 || name == 'code') {\n//        var ores = new UI.SelectField(name + (required ? \"*\" : \"\"), (e, v) => {\n//            if (fire == false) return;\n//            if (v == \"(no value)\") v = \"\";\n//            if (type==\"protocols\"){\n//                node.attributes(name).forEach(attr => attr.remove());\n//                if( v==HTTPHTTPS){\n//                    [\"HTTP\",\"HTTPS\"].forEach(val => node.attrOrCreate(name).addValue(val));\n//                }\n//                else{\n//                    if (v) {\n//                        node.attrOrCreate(name).setValue(v);\n//                    }\n//                }\n//                updateViewModel(stringView(node, name));\n//                return;\n//            }\n//            updateValueDeferred(v);\n//        });\n//        var options = [];\n//        if (name == 'code')\n//            options = Object.keys(dialogs.getStatusCodeDescriptions());\n//        else {\n//            var enumValues = node.definition().property(name).getAdapter(services.RAMLPropertyService).enumValues(node);\n//            options = node.definition().property(name).getAdapter(services.RAMLPropertyService).isKey() ? enumValues : [\"(no value)\"].concat(enumValues);\n//\n//            if (type=='protocols'){\n//                if (tfValue.get()==HTTPANDHTTPS){\n//                    tfValue.set(HTTPHTTPS)\n//                }\n//                options =[\"(no value)\",\"HTTP\",\"HTTPS\",HTTPHTTPS]\n//            }\n//        }\n//\n//        ores.getActualField().setOptions(options);\n//        ores.setBinding(tfValue);\n//\n//        res = ores;\n//    } else {\n//        if (!res) {\n//            res = new UI.TextField(name + (required ? \"*\" : \"\"), tfValue, (e, v)=> {\n//                if (fire == false) return;\n//                if (useModalEditor && res && res.getActualField())\n//                    res.getActualField().setText(value, false); // do not re-call onChange\n//                else\n//                    updateValueDeferred(v);\n//            }, null, editorTools.aquireManager().placeholder ? name + \" has no value\" : '');\n//            if (name == focusedPropertyName) toFocus = res;\n//        }\n//    }\n//    var uvdTimeout = 12;\n//\n//    setInterval(()=>{\n//        if (uvdTimeout++ != 10) return;\n//        var newValue = res.getActualField().getValue();\n//        var attrEx = node.attr(name)\n//        var attr = node.attrOrCreate(name);\n//        attr.setValue(newValue);\n//        if (updateText) {\n//            if (res instanceof UI.TextField) {\n//                focusedPropertyName = name;\n//                focusedPosition = (<any> res.getActualField()).ui().getModel().getCursorBufferPosition();\n//            }\n//            editorTools.aquireManager().updateText(newValue == '' || attr == null ? node.lowLevel() : attr.lowLevel());\n//\n//        }\n//\n//    }, 50);\n//\n//    res.getActualField().addClass(\"ate\").addClass(type).setStyle(\"margin-bottom\", \"0px !important\");\n//    res.margin(0, 0, 0, 6);\n//    if (useModalEditor) {\n//        res.getActualField().ui().addEventListener('focus', (e) => {\n//            bonclick(e);\n//            res.getActualField().ui().blur();\n//        });\n//        res.addChild(UI.button(\"(edit)\", UI.ButtonSizes.NORMAL, UI.ButtonHighlights.NO_HIGHLIGHT, null, bonclick).margin(4, 0, 0, 0));\n//    } else if (disabledMessage) {\n//        if (editorTools.aquireManager().placeholder) res.getActualField().setPlaceholder(disabledMessage);\n//        res.getActualField().ui().addEventListener('focus', (e) => res.getActualField().ui().blur());\n//    }\n//    if (descriptionLabel) {\n//        res.ui().addEventListener('mouseenter', () => {\n//            descriptionLabel.setStyle(\"opacity\", \"1\")\n//            descriptionLabel.setText(node.definition().property(name).description());\n//        });\n//        res.ui().addEventListener('mouseleave', () => {\n//            descriptionLabel.setStyle(\"opacity\", \"0\");\n//        });\n//    }\n//    return res;\n//}\nfunction getSchemaType(value) {\n    var schema = schemautil.createSchema(value, null);\n    if (!schema || !schema.getType)\n        return \"Invalid\";\n    switch (schema.getType()) {\n        case \"source.json\":\n            return \"JSON\";\n        case \"text.xml\":\n            return \"XML\";\n        default:\n            return \"Unknown type\";\n    }\n}\nfunction getStringValue(x) {\n    if (typeof x === \"object\")\n        return x.valueName();\n    else\n        return x;\n}\nexports.getStringValue = getStringValue;\nfunction propertyInfo(node, name) {\n    var prop = node.definition().property(name);\n    if (prop.isValueProperty() == false)\n        return null;\n    var isMulti = prop.isMultiValue();\n    var required = prop.isRequired();\n    var value;\n    var values = [];\n    var type;\n    var ipath;\n    var rangeName = prop.range().nameId();\n    if (isMulti) {\n        values = node.attributes(name).map(function (x) { return x.value(); });\n        value = values.map(function (x) { return getStringValue(x); }).join(\", \");\n        switch (rangeName) {\n            case \"StringType\":\n                type = 'enum';\n                if (!node.definition().getAdapter(def.RAMLService).isUserDefined() && name == \"protocols\") {\n                    type = \"protocols\";\n                }\n                break;\n            case \"TraitRef\":\n                type = 'trait';\n                break;\n            default:\n                type = 'unknown';\n        }\n    }\n    else {\n        var attr = node.attr(name);\n        value = attr && attr.value() ? attr.value() : \"\";\n        switch (rangeName) {\n            case \"MarkdownString\":\n                type = 'markdown';\n                values = value.split(\"\\n\");\n                value = values[0];\n                break;\n            case \"SchemaString\":\n                type = 'schema';\n                if (value.indexOf(\"\\n\") >= 0) {\n                    values = [value];\n                    value = \"(\" + getSchemaType(value) + \" Schema)\";\n                }\n                break;\n            case \"ExampleString\":\n                type = 'schexample';\n                try {\n                    ipath = attr.lowLevel().includePath();\n                }\n                catch (e) {\n                    ipath = \"\";\n                }\n                values = [value, ipath];\n                value = \"Example\" + (ipath != \"\" ? \" (referenced from \" + ipath + \")\" : \"\");\n                break;\n            case \"ResourceTypeRef\":\n                type = \"type\";\n                break;\n            default:\n                type = 'string';\n        }\n        if (type == \"string\") {\n            if (value.indexOf(\"\\n\") >= 0) {\n                values = value.split(\"\\n\");\n                value = \"(\" + values.length + \" lines) \" + values[0].substring(0, 20) + \" ...\";\n                type = \"multiline\";\n            }\n            if (attr)\n                ipath = attr.lowLevel().includePath();\n            if (ipath) {\n                value = \"(included from \" + ipath + \")\";\n                type = \"include\";\n            }\n        }\n    }\n    var ret = {\n        value: value,\n        values: values,\n        type: type,\n        include: ipath,\n        required: required,\n    };\n    return ret;\n}\nexports.propertyInfo = propertyInfo;\nfunction stringView(node, name) {\n    return getStringValue(propertyInfo(node, name).value);\n}\nexports.stringView = stringView;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details.js\n ** module id = 60\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar UI = require(\"atom-ui-lib\");\nvar rp = require(\"raml-1-parser\");\nvar Opt = require(\"../../Opt\");\nvar schemautil = rp.schema;\nvar SchemaRenderer = (function () {\n    function SchemaRenderer() {\n    }\n    SchemaRenderer.prototype.render = function (elem) {\n        var icon;\n        var tc;\n        switch (elem.type) {\n            case 'object':\n                icon = UI.Icon.CIRCUIT_BOARD;\n                tc = UI.TextClasses.INFO;\n                break;\n            case 'array':\n                icon = UI.Icon.LIST_UNORDERED;\n                tc = UI.TextClasses.ERROR;\n                break;\n            case 'unspecified':\n                icon = UI.Icon.QUESTION;\n                tc = UI.TextClasses.WARNING;\n                break;\n            default:\n                icon = UI.Icon.CODE;\n                tc = UI.TextClasses.SUCCESS;\n        }\n        return UI.hc(UI.label(elem.name + \": \", icon), UI.label(elem.type, null, tc, null).pad(4, 0));\n    };\n    return SchemaRenderer;\n}());\nexports.SchemaRenderer = SchemaRenderer;\nfunction _schemaPreview() {\n    var hashkey = function (n) {\n        if (n == null)\n            return \"\";\n        return hashkey(n.parent) + \"::[\" + (n.name + \":\" + n.type + \"]\" + (n.children.length > 0 ? \"*\" : \"\"));\n    };\n    var treeViewer = UI.treeViewer(function (x) { return x.children; }, new SchemaRenderer(), function (x) { return x.name + \":\" + x.type; });\n    treeViewer.setComparator(function (x, y) { return x.name == y.name && x.type == y.type; });\n    return treeViewer;\n}\nexports._schemaPreview = _schemaPreview;\nfunction getSchemaTree(name, contents) {\n    if (contents.type instanceof Array)\n        if (contents.type.indexOf('object') >= 0)\n            contents.type = 'object';\n        else if (contents.type.indexOf('array') >= 0)\n            contents.type = 'array';\n    var typeString = contents.type ? (contents.type instanceof Array ? contents.type.join(\"|\") : contents.type).toLowerCase() : 'unspecified';\n    var children = [];\n    if (contents.properties)\n        children = Object.keys(contents.properties).map(function (el) { return getSchemaTree(el, contents.properties[el]); });\n    else if (contents.items)\n        children = contents.items instanceof Array ? contents.items.map(function (el) { return getSchemaTree(\"item\", el); }) : getSchemaTree(\"item\", contents.items);\n    if (children instanceof Array == false)\n        children = [children];\n    var result = {\n        type: typeString,\n        name: name,\n        parent: null,\n        children: children\n    };\n    result.children.forEach(function (x) { return x.parent = result; });\n    return result;\n}\nexports.getSchemaTree = getSchemaTree;\nfunction _updatePreview(treeView, value) {\n    try {\n        var schema = schemautil.createSchema(value, null);\n        if (schema == null || schema.getType == null) {\n            treeView.setInput({}, true);\n            return;\n        }\n        var schemaType = schema.getType();\n        var schemaModel = schemaType == \"source.json\" ? JSON.parse(value) : rootElements(value);\n        var schemaTree = schemaType == \"source.json\" ? getSchemaTree(\"schema\", schemaModel) : getXMLSchemaTree(schemaModel);\n        treeView.setInput(schemaTree, true);\n    }\n    catch (e) {\n        console.log(e);\n    }\n}\nexports._updatePreview = _updatePreview;\nvar jsonix = require('jsonix');\nfunction parseSchema(schema) {\n    var XSD_1_0 = require('w3c-schemas').XSD_1_0;\n    var context = new jsonix.Jsonix.Context([XSD_1_0]);\n    var unmarshaller = context.createUnmarshaller();\n    var schemaObject = unmarshaller.unmarshalString(schema);\n    return schemaObject;\n}\n;\nfunction rootElements(schema) {\n    var schemaObj = parseSchema(schema);\n    return getRootElements(schemaObj);\n}\nvar TypeDescription = (function () {\n    function TypeDescription(owner, _name, _isSimple, _object) {\n        var _this = this;\n        this.owner = owner;\n        this._name = _name;\n        this._isSimple = _isSimple;\n        this._object = _object;\n        this.name = function () { return _this._name; };\n        this.isSimple = function () { return _this._isSimple; };\n        this.object = function () { return _this._object; };\n    }\n    TypeDescription.prototype.isChoice = function () {\n        return this.object && (this.object['choice'] ||\n            (this.object['complexContent'] && this.object['complexContent']['choice']));\n    };\n    TypeDescription.prototype.elements = function () {\n        var _this = this;\n        var elementObjects = [];\n        if (this._object) {\n            elementObjects = this.collectElements(this._object);\n            if (elementObjects.length == 0) {\n                var complexContent = this.object['complexContent'];\n                if (complexContent) {\n                    elementObjects = this.collectElements(complexContent);\n                }\n            }\n        }\n        var result = elementObjects.map(function (x) { return new ElementDescription(_this.owner, x); });\n        return result;\n    };\n    TypeDescription.prototype.attributes = function () {\n        var _this = this;\n        var result = [];\n        var objects = [this._object];\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n            if (!obj) {\n                continue;\n            }\n            if (obj['attributeGroup']) {\n                var attributeGroups = obj['attributeGroup'].filter(function (x) { return x['otherAttributes']; });\n                for (var j = 0; j < attributeGroups.length; j++) {\n                    var groupRef = attributeGroups[j]['otherAttributes']['ref'];\n                    var groupDef = this.owner.attributeGroups[groupRef];\n                    objects.push(groupDef);\n                }\n            }\n            if (obj['attribute']) {\n                obj['attribute'].forEach(function (x) { return result.push(new AttributeDescription(_this.owner, x)); });\n            }\n        }\n        return result;\n    };\n    TypeDescription.prototype.base = function () {\n        if (!this._object) {\n            return Opt.empty();\n        }\n        var baseObj;\n        if (this._object['restriction']) {\n            var restriction = this._object['restriction'];\n            baseObj = restriction['base'];\n        }\n        else if (this._object['complexContent']) {\n            var complexContent = this.object['complexContent'];\n            var resExt = complexContent['restriction'] || complexContent['extension'];\n            if (resExt) {\n                baseObj = resExt['base'];\n            }\n        }\n        if (!baseObj) {\n            return Opt.empty();\n        }\n        var typeName = extractName(baseObj);\n        var isSimple = false;\n        var typeObject;\n        var sType = this.owner.simpleTypes[typeName];\n        if (sType) {\n            typeObject = sType;\n            isSimple = true;\n        }\n        var cType = this.owner.complexTypes[typeName];\n        if (cType) {\n            typeObject = cType;\n        }\n        if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n            if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n                isSimple = true;\n            }\n        }\n        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n        return new Opt(result);\n    };\n    TypeDescription.prototype.getBaseName = function () {\n        var typeOpt = new Opt(this);\n        var result = '';\n        while (typeOpt.isDefined()) {\n            var t = typeOpt.getOrThrow();\n            result = t.name();\n            typeOpt = t.base();\n        }\n        return result;\n    };\n    TypeDescription.prototype.collectElements = function (obj) {\n        var result = [];\n        var containers = [obj['sequence'], obj['any'], obj['choice']];\n        for (var i = 0; i < containers.length; i++) {\n            var x = containers[i];\n            if (!x) {\n                continue;\n            }\n            if (x['group']) {\n                var groups = x['group'].filter(function (gr) { return gr['otherAttributes']; });\n                for (var j = 0; j < groups.length; j++) {\n                    var groupRef = groups[j]['otherAttributes']['ref'];\n                    var groupDef = this.owner.elementGroups[groupRef];\n                    if (groupDef) {\n                        if (groupDef['sequence']) {\n                            containers = containers.concat(groupDef['sequence']);\n                        }\n                        if (groupDef['any']) {\n                            containers = containers.concat(groupDef['any']);\n                        }\n                        if (groupDef['choice']) {\n                            containers = containers.concat(groupDef['choice']);\n                        }\n                    }\n                }\n            }\n            if (x['element']) {\n                result = result.concat(x['element']);\n            }\n            result = result.concat(this.collectElements(x));\n        }\n        return result;\n    };\n    return TypeDescription;\n}());\nvar PropertyDescription = (function () {\n    function PropertyDescription(owner, _object) {\n        var _this = this;\n        this.owner = owner;\n        this._object = _object;\n        this.name = function () { return _this._object['name']; };\n    }\n    PropertyDescription.prototype.type = function () {\n        var typeName;\n        var typeObject;\n        var isSimple = false;\n        if (this._object['type']) {\n            var typeObj = this._object['type'];\n            typeName = extractName(typeObj);\n            var sType = this.owner.simpleTypes[typeName];\n            if (sType) {\n                typeObject = sType;\n                isSimple = true;\n            }\n            var cType = this.owner.complexTypes[typeName];\n            if (cType) {\n                typeObject = cType;\n            }\n            if ((typeName.indexOf('xs:') == 0 || typeName.indexOf('xsd:') == 0)) {\n                if (typeName.substring(typeName.indexOf(':') + 1) != 'any') {\n                    isSimple = true;\n                }\n            }\n        }\n        else if (this._object['complexType']) {\n            typeObject = this._object['complexType'];\n        }\n        else if (this._object['simpleType']) {\n            typeObject = this._object['simpleType'];\n        }\n        var result = new TypeDescription(this.owner, typeName, isSimple, typeObject);\n        return new Opt(result);\n    };\n    PropertyDescription.prototype.optional = function () {\n        throw new Error(\"This method is abstract.\");\n    };\n    PropertyDescription.prototype.isArray = function () {\n        throw new Error(\"This method is abstract.\");\n    };\n    PropertyDescription.prototype.isAttribute = function () {\n        return false;\n    };\n    return PropertyDescription;\n}());\nexports.PropertyDescription = PropertyDescription;\nvar ElementDescription = (function (_super) {\n    __extends(ElementDescription, _super);\n    function ElementDescription(owner, object) {\n        _super.call(this, owner, object);\n    }\n    ElementDescription.prototype.isArray = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return false;\n        }\n        var maxOccurs = otherAttributes['maxOccurs'];\n        if (!maxOccurs) {\n            return false;\n        }\n        if (maxOccurs == 'unbounded') {\n            return true;\n        }\n        try {\n            var mo = parseInt(maxOccurs);\n            return mo > 1;\n        }\n        catch (e) { }\n        return false;\n    };\n    ElementDescription.prototype.optional = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return true;\n        }\n        var minOccurs = otherAttributes['minOccurs'];\n        if (!minOccurs) {\n            return true;\n        }\n        try {\n            var mo = parseInt(minOccurs);\n            return mo == 0;\n        }\n        catch (e) {\n        }\n        return true;\n    };\n    return ElementDescription;\n}(PropertyDescription));\nexports.ElementDescription = ElementDescription;\nfunction extractName(typeObj) {\n    var prefix = typeObj['prefix'];\n    var localPart = typeObj['localPart'];\n    var typeName = prefix + (prefix.length > 0 ? ':' : '') + localPart;\n    return typeName;\n}\n;\nvar AttributeDescription = (function (_super) {\n    __extends(AttributeDescription, _super);\n    function AttributeDescription(owner, object) {\n        _super.call(this, owner, object);\n    }\n    AttributeDescription.prototype.optional = function () {\n        var otherAttributes = this._object['otherAttributes'];\n        if (!otherAttributes) {\n            return false;\n        }\n        var use = otherAttributes['use'];\n        if (!use) {\n            return false;\n        }\n        return use != 'required';\n    };\n    AttributeDescription.prototype.isArray = function () {\n        return false;\n    };\n    AttributeDescription.prototype.isAttribute = function () {\n        return true;\n    };\n    return AttributeDescription;\n}(PropertyDescription));\nexports.AttributeDescription = AttributeDescription;\nfunction getRootElements(obj) {\n    var _this = this;\n    var objValue = obj['value'];\n    var result = [];\n    if (objValue) {\n        var groups = objValue['group'];\n        if (groups) {\n            groups.forEach(function (x) { return _this.elementGroups[x.name] = x; });\n        }\n        var attributeGroups = objValue['attributeGroup'];\n        if (attributeGroups) {\n            attributeGroups.forEach(function (x) { return _this.attributeGroups[x.name] = x; });\n        }\n        var simpleTypes = objValue['simpleType'];\n        if (simpleTypes) {\n            simpleTypes.forEach(function (x) { return _this.simpleTypes[x.name] = x; });\n        }\n        var complexTypes = objValue['complexType'];\n        if (complexTypes) {\n            complexTypes.forEach(function (x) { return _this.complexTypes[x.name] = x; });\n        }\n        var rootElements = objValue['element'];\n        if (rootElements) {\n            result = rootElements.map(function (x) { return new ElementDescription(_this, x); });\n        }\n    }\n    return result;\n}\nvar XSD_2_TS_TYPE_MAP = {\n    \"ENTITIES\": \"string\",\n    \"ENTITY\": \"string\",\n    \"ID\": \"string\",\n    \"IDREF\": \"string\",\n    \"IDREFS\": \"string\",\n    \"language\": \"string\",\n    \"Name\": \"string\",\n    \"NCName\": \"string\",\n    \"NMTOKEN\": \"string\",\n    \"NMTOKENS\": \"string\",\n    \"normalizedString\": \"string\",\n    \"QName\": \"string\",\n    \"string\": \"string\",\n    \"token\": \"string\",\n    \"date\": \"string\",\n    \"dateTime\": \"string\",\n    \"duration\": \"string\",\n    \"gDay\": \"string\",\n    \"gMonth\": \"string\",\n    \"gMonthDay\": \"string\",\n    \"gYear\": \"string\",\n    \"gYearMonth\": \"string\",\n    \"time\": \"string\",\n    \"anyURI\": \"string\",\n    \"base64Binary\": \"string\",\n    \"hexBinary\": \"string\",\n    \"NOTATION\": \"string\",\n    \"boolean\": \"boolean\",\n    \"double\": \"number\",\n    \"float\": \"number\",\n    \"byte\": \"number\",\n    \"decimal\": \"number\",\n    \"int\": \"number\",\n    \"integer\": \"number\",\n    \"long\": \"number\",\n    \"negativeInteger\": \"number\",\n    \"nonNegativeInteger\": \"number\",\n    \"nonPositiveInteger\": \"number\",\n    \"positiveInteger\": \"number\",\n    \"short\": \"number\",\n    \"unsignedLong\": \"number\",\n    \"unsignedInt\": \"number\",\n    \"unsignedShort\": \"number\",\n    \"unsignedByte\": \"number\"\n};\nfunction getTSType(xmltype) {\n    return XSD_2_TS_TYPE_MAP[xmltype];\n}\nexports.getTSType = getTSType;\nfunction getXMLSchemaTree(roots) {\n    var getSType = function (type) {\n        if (!type)\n            return 'Unknown';\n        type = type.substr(type.indexOf(':') + 1);\n        return getTSType(type);\n    };\n    return roots.map(function (root) {\n        var result;\n        var t = root.type().value();\n        if (root.isArray())\n            result = {\n                type: 'Array',\n                name: root.name(),\n                parent: null,\n                children: getXMLSchemaTree(t.elements())\n            };\n        else if (t.isSimple())\n            result = {\n                type: getSType(t.name()),\n                name: root.name(),\n                parent: null,\n                children: []\n            };\n        else\n            result = {\n                type: 'Object',\n                name: root.name(),\n                parent: null,\n                children: getXMLSchemaTree(t.elements())\n            };\n        result.children.forEach(function (x) { return x.parent = result; });\n        return result;\n    });\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/schemaUI.js\n ** module id = 61\n ** module chunks = 0\n **/","module.exports = require(\"mime\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"mime\"\n ** module id = 62\n ** module chunks = 0\n **/","module.exports = require(\"know-your-http-well\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"know-your-http-well\"\n ** module id = 63\n ** module chunks = 0\n **/","module.exports = require(\"remote\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"remote\"\n ** module id = 64\n ** module chunks = 0\n **/","module.exports = require(\"jsonix\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jsonix\"\n ** module id = 65\n ** module chunks = 0\n **/","module.exports = require(\"w3c-schemas\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"w3c-schemas\"\n ** module id = 66\n ** module chunks = 0\n **/","/// <reference path=\"../typings/main.d.ts\" />\n\"use strict\";\nvar invariant = require('invariant');\nvar exists = function (v) { return (v != null); };\nvar globalEmptyOpt;\nvar Opt = (function () {\n    function Opt(_value) {\n        var _this = this;\n        this._value = _value;\n        this._isDefined = false;\n        this._isEmpty = true;\n        this._arr = undefined;\n        this.getOrThrow = function () {\n            invariant(_this._isDefined, 'Opt is empty. Use `Opt#getOrElse` or check `Opt#isDefined`.');\n            return _this._value;\n        };\n        this.value = function () { return _this._value; };\n        this.isDefined = function () { return _this._isDefined; };\n        this.isEmpty = function () { return _this._isEmpty; };\n        this.toArray = function () { return _this._arr || (_this._arr = _this._isDefined ? [_this._value] : []); };\n        this.getOrElse = function (v) { return _this._isDefined ? _this._value : v; };\n        this.getOrElseF = function (v) { return _this._isDefined ? _this._value : v(); };\n        this.map = function (f) { return _this._isEmpty ? Opt.empty() : new Opt(f(_this._value)); };\n        this.flatMap = function (f) { return _this.map(f).getOrElse(Opt.empty()); };\n        this.equals = function (other) {\n            invariant(other instanceof Opt, 'Expected other to be an `Opt`, but got `%s`', typeof other);\n            return (_this._isDefined === other.isDefined()) && (_this._value === other.value());\n        };\n        if (exists(this._value)) {\n            this._isDefined = true;\n            this._isEmpty = false;\n        }\n    }\n    Opt.prototype.forEach = function (fn) {\n        if (this.isDefined()) {\n            fn(this._value);\n        }\n    };\n    /**\n     * You can always create an empty option by hand just by calling new Opt<T>()\n     * but calling this method will return a global instance instead of allocating a new one each time\n     */\n    Opt.empty = function () { return (globalEmptyOpt || (globalEmptyOpt = new Opt())); };\n    return Opt;\n}());\nmodule.exports = Opt;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Opt.js\n ** module id = 67\n ** module chunks = 0\n **/","module.exports = require(\"marked\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"marked\"\n ** module id = 68\n ** module chunks = 0\n **/","module.exports = require(\"classnames\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"classnames\"\n ** module id = 69\n ** module chunks = 0\n **/","module.exports = require(\"react-pure-render/component\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react-pure-render/component\"\n ** module id = 70\n ** module chunks = 0\n **/","module.exports = require(\"pretty-data\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"pretty-data\"\n ** module id = 71\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar fs = require('fs');\nvar rp = require(\"raml-1-parser\");\nvar def = rp.ds;\nvar search = rp.search;\nvar _ = require(\"underscore\");\nvar provider = require(\"../suggestion/provider\");\nvar UI = require(\"atom-ui-lib\");\nvar contextActions = require(\"raml-actions\");\nvar suggestions = require(\"./suggestions-panel\");\nvar universe = rp.universes;\nvar universehelpers = rp.universeHelpers;\nvar typeDisplay = require(\"./typeDisplay\");\nvar defaultValues = require('./default-values');\nvar resourceRegistry = rp.utils;\nvar Item = (function () {\n    function Item(_title, description) {\n        if (description === void 0) { description = \"\"; }\n        this._title = _title;\n        this.description = description;\n        this.listeners = [];\n    }\n    Item.prototype.needsSeparateLabel = function () {\n        return false;\n    };\n    Item.prototype.detach = function () {\n        this.dispose();\n        this.children().forEach(function (x) { return x.detach(); });\n    };\n    Item.prototype.addListener = function (r) {\n        this.listeners.push(r);\n    };\n    Item.prototype.removeListener = function (r) {\n        this.listeners = this.listeners.filter(function (x) { return x != r; });\n    };\n    Item.prototype.add = function (i) {\n        throw new Error(\"Not supported\");\n    };\n    Item.prototype.root = function () {\n        if (this.parent) {\n            return this.parent.root();\n        }\n        return this;\n    };\n    Item.prototype.title = function () {\n        return this._title;\n    };\n    Item.prototype.children = function () {\n        return [];\n    };\n    Item.prototype.setDescription = function (desc) {\n        this.description = desc;\n    };\n    Item.prototype.setTitle = function (t) {\n        this._title = t;\n    };\n    Item.prototype.render = function (r) {\n        if (r === void 0) { r = {}; }\n        throw new Error(\"Not Implemented\");\n    };\n    Item.prototype.item = function (name) {\n        return null;\n    };\n    Item.prototype.setError = function (text) {\n    };\n    Item.prototype.clearErrors = function () {\n    };\n    return Item;\n}());\nexports.Item = Item;\nvar TypeDisplayItem = (function (_super) {\n    __extends(TypeDisplayItem, _super);\n    function TypeDisplayItem(node) {\n        _super.call(this, \"Type\", \"\");\n        this.node = node;\n    }\n    TypeDisplayItem.prototype.render = function (r) {\n        return typeDisplay.render(this.node);\n    };\n    TypeDisplayItem.prototype.dispose = function () {\n    };\n    return TypeDisplayItem;\n}(Item));\nexports.TypeDisplayItem = TypeDisplayItem;\nvar Category = (function (_super) {\n    __extends(Category, _super);\n    function Category() {\n        _super.apply(this, arguments);\n        this._children = [];\n    }\n    Category.prototype.add = function (i) {\n        i.parent = this;\n        this._children.push(i);\n    };\n    Category.prototype.children = function () {\n        return this._children;\n    };\n    Category.prototype.plainChildren = function () {\n        return this._children.filter(function (x) { return !(x instanceof Category); });\n    };\n    Category.prototype.categories = function () {\n        return this._children.filter(function (x) { return (x instanceof Category); });\n    };\n    Category.prototype.item = function (name) {\n        var it;\n        this._children.forEach(function (x) {\n            if (x.title() == name) {\n                it = x;\n            }\n            var rr = x.item(name);\n            if (rr) {\n                it = rr;\n            }\n        });\n        return it;\n    };\n    Category.prototype.render = function (r) {\n        var _this = this;\n        if (r === void 0) { r = {}; }\n        var section = this.createSection(r);\n        this._result = section;\n        if (this.description && r.showDescription) {\n            this.descriptionLabel = UI.label(this.description);\n            section.addChild(this.descriptionLabel);\n        }\n        this.contributeTop(section);\n        this.plainChildren().forEach(function (x) { return _this.addChild(section, x); });\n        var wrappedChild = this.createWrappedChild(section);\n        this.subCategories = wrappedChild;\n        var cats = this.categories();\n        var remap = {};\n        cats.forEach(function (x) { return remap[x.title()] = x; });\n        var newCats = [];\n        if (remap[\"General\"]) {\n            newCats.push(remap[\"General\"]);\n            delete remap[\"General\"];\n        }\n        if (remap[\"Facets\"]) {\n            newCats.push(remap[\"Facets\"]);\n            delete remap[\"Facets\"];\n        }\n        for (var c in remap) {\n            newCats.push(remap[c]);\n        }\n        newCats.forEach(function (x) { return _this.addChild(wrappedChild, x); });\n        return section;\n    };\n    Category.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this._result.dispose();\n    };\n    Category.prototype.createSection = function (r) {\n        if (r.showHeader) {\n            return new UI.Section(UI.h3(this.title()), false);\n        }\n        var pnl = new UI.Panel();\n        pnl.setCaption(this.title());\n        return pnl;\n    };\n    Category.prototype.createWrappedChild = function (section) {\n        return section;\n    };\n    Category.prototype.addChild = function (section, item) {\n        var child = item.render();\n        if (section instanceof UI.TabFolder) {\n            var tf = section;\n            tf.add(child.caption(), UI.Icon.NONE, child);\n        }\n        else {\n            if (item.needsSeparateLabel()) {\n                var firstLabel = UI.label(item.title());\n                firstLabel.margin(0, 5, 0, 0);\n                section.addChild(firstLabel);\n                section.addChild(UI.label(item.description));\n            }\n            section.addChild(child);\n        }\n    };\n    Category.prototype.contributeTop = function (section) {\n    };\n    Category.prototype.dispose = function () {\n    };\n    Category.prototype.setError = function (text) {\n    };\n    Category.prototype.clearErrors = function () {\n        this._children.forEach(function (x) { return x.clearErrors(); });\n    };\n    Category.prototype.update = function (i) {\n    };\n    return Category;\n}(Item));\nvar lastSelectedCaption;\nvar inRender = false;\nvar TopLevelNode = (function (_super) {\n    __extends(TopLevelNode, _super);\n    function TopLevelNode(node) {\n        _super.call(this, node.definition().nameId(), node.definition().description());\n        this.node = node;\n        this.ep = null;\n    }\n    TopLevelNode.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this._result.dispose();\n    };\n    TopLevelNode.prototype.createWrappedChild = function (section) {\n        var tf = new UI.TabFolder();\n        tf.setOnSelected(function () {\n            if (!inRender) {\n                lastSelectedCaption = (tf.selectedComponent().caption());\n            }\n        });\n        section.addChild(tf);\n        return tf;\n    };\n    TopLevelNode.prototype.subCategoryByNameOrCreate = function (name) {\n        var item = _.find(this.children(), function (x) { return x.title() == name; });\n        if (!item) {\n            var rs = new Category(name);\n            this.add(rs);\n            return rs;\n        }\n        return item;\n    };\n    TopLevelNode.prototype.addItemToCategory = function (name, it) {\n        if (name == null) {\n            this._children.push(it);\n            it.parent = this;\n            return;\n        }\n        this.subCategoryByNameOrCreate(name).add(it);\n    };\n    TopLevelNode.prototype.contributeTop = function (section) {\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n        this.ep = UI.hc(this.errorLabel);\n        this.ep.setDisplay(false);\n        section.addChild(this.ep);\n    };\n    TopLevelNode.prototype.render = function (r) {\n        if (r === void 0) { r = {}; }\n        inRender = true;\n        try {\n            var result = _super.prototype.render.call(this, r);\n            this._options = r;\n            this._panel = result;\n            var tf = this.subCategories;\n            for (var n = 0; n < tf.tabsCount(); n++) {\n                var item = tf.get(n);\n                if (item.header == lastSelectedCaption) {\n                    tf.setSelectedIndex(n);\n                    return result;\n                }\n            }\n            var documentation = \"\";\n            if (this.node.property()) {\n                documentation = this.node.property().description();\n            }\n            else {\n                documentation = this.node.definition().description();\n            }\n            if (documentation.length && !r.showDescription) {\n                result.addChild(UI.html(\"<hr/>\"));\n                result.addChild(UI.label(documentation, UI.Icon.INBOX, UI.TextClasses.SUBTLE));\n            }\n            this.update(this);\n            return result;\n        }\n        finally {\n            inRender = false;\n        }\n    };\n    TopLevelNode.prototype.dispose = function () {\n        this.node = null;\n    };\n    TopLevelNode.prototype.update = function (i) {\n        var _this = this;\n        //this.listeners.forEach(x=>x(i));\n        if (!this._panel) {\n            return;\n        }\n        if (i instanceof PropertyEditorInfo) {\n            var prInfo = i;\n            if (prInfo.property.getAdapter(def.RAMLPropertyService).isTypeExpr() || prInfo.property.isDescriminator()) {\n                rp.utils.updateType(this.node);\n                var extras = this.item(\"Facets\");\n                if (extras && extras._result) {\n                    extras._result.clear();\n                }\n                var item = buildItem(this.node, false);\n                var newExtras = item.item(\"Facets\");\n                if (newExtras) {\n                    if (extras && extras._result) {\n                        extras._children = newExtras._children;\n                        extras._children.forEach(function (x) { return x.parent = extras; });\n                        if (extras._children.length > 0) {\n                            extras._result.setDisplay(true);\n                        }\n                        newExtras.children().forEach(function (x) {\n                            extras._result.addChild(x.render(_this._options));\n                        });\n                    }\n                    else {\n                        this._children.push(newExtras);\n                        if (this._panel) {\n                            this._panel.addChild(newExtras.render(this._options));\n                        }\n                    }\n                }\n                else {\n                    if (extras && extras._result) {\n                        extras._result.setDisplay(false);\n                    }\n                }\n            }\n        }\n        var kp = null;\n        this.node.definition().allProperties().forEach(function (x) {\n            if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n                kp = x;\n            }\n        });\n        if (kp) {\n            var keyItem = this.item(kp.nameId());\n            if (keyItem) {\n                var m = keyItem.fld;\n                var vl = m.getBinding().get();\n                if ((!vl) || vl.trim().length == 0) {\n                    this._panel.getBinding().setStatus(UI.errorStatus(\"\"));\n                }\n                else {\n                    this._panel.getBinding().setStatus(UI.okStatus());\n                }\n            }\n        }\n        var errors;\n        if (this.node.property() && universehelpers.isExampleProperty(this.node.property())) {\n            var parent = this.node.parent();\n            if (parent) {\n                var parsed = parent.parsedType();\n                var exampleMeta = _.find(parsed.metaInfo || [], function (meta) {\n                    return meta && meta._name === 'example';\n                });\n                if (exampleMeta) {\n                    var validateObject = exampleMeta.validateSelf(this.node.types().getAnnotationTypeRegistry());\n                    errors = ((validateObject && validateObject.getErrors()) || []).map(function (error) {\n                        return _this.node.createIssue(error);\n                    });\n                }\n            }\n        }\n        else {\n            errors = this.node.errors();\n        }\n        this.clearErrors();\n        this.ep.setDisplay(false);\n        if (!resourceRegistry.hasAsyncRequests() && errors && errors.length > 0) {\n            var notFound = [];\n            errors.forEach(function (error) {\n                if (error.extras && error.extras.length > 0) {\n                    error = error.extras[0];\n                }\n                var item = error.node && _this.item(error.node.name());\n                if (item) {\n                    item.setError(error.message);\n                }\n                else {\n                    notFound.push(error);\n                }\n            });\n            if (notFound.length > 0) {\n                this.errorLabel.setIcon(UI.Icon.BUG);\n                var et = notFound.map(function (x) { return x.node.name() + \":\" + x.message; }).join(\",\");\n                if (et.length > 100) {\n                    et = et.substring(0, 100) + \"...\";\n                }\n                this.errorLabel.setText(et);\n                this.ep.setDisplay(true);\n            }\n            else {\n                this.ep.setDisplay(false);\n            }\n        }\n    };\n    return TopLevelNode;\n}(Category));\nvar CheckBox2 = (function (_super) {\n    __extends(CheckBox2, _super);\n    function CheckBox2() {\n        _super.apply(this, arguments);\n    }\n    CheckBox2.prototype.setLabelWidth = function (n) {\n        this.setStyle(\"margin-left\", (n + 2) + \"ch\");\n    };\n    return CheckBox2;\n}(UI.CheckBox));\nvar PropertyEditorInfo = (function (_super) {\n    __extends(PropertyEditorInfo, _super);\n    function PropertyEditorInfo(property, node) {\n        var _this = this;\n        _super.call(this, property.nameId(), property.description());\n        this.property = property;\n        this.node = node;\n        this.rendered = false;\n        this.update = function (newValue, oldValue) {\n            if (!_this.rendered) {\n                return;\n            }\n            _this.fromEditorToModel(newValue, oldValue);\n        };\n    }\n    PropertyEditorInfo.prototype.dispose = function () {\n        this.property = null;\n        this.node = null;\n        this.fld.getBinding().removeListener(this.update);\n    };\n    PropertyEditorInfo.prototype.getDefaultValue = function () {\n        return defaultValues.getDefaultValue(this.node, this.property);\n    };\n    PropertyEditorInfo.prototype.hasDefault = function () {\n        return defaultValues.hasDefault(this.property);\n    };\n    PropertyEditorInfo.prototype.clearErrors = function () {\n        this.setError(null);\n    };\n    PropertyEditorInfo.prototype.setError = function (text) {\n        if (text) {\n            this.errorLabel.setText(text);\n            this.errorLabel.setDisplay(true);\n        }\n        else {\n            if (this.errorLabel) {\n                this.errorLabel.setDisplay(false);\n            }\n        }\n    };\n    PropertyEditorInfo.prototype.fromEditorToModel = function (newValue, oldValue) {\n        var field = this.fld;\n        var vl = this.toLocalValue(field.getBinding().get());\n        if (vl == null) {\n            vl = \"\";\n        }\n        if (vl === true) {\n            vl = \"true\";\n        }\n        if (vl === false) {\n            vl = \"\";\n        }\n        var attr = this.node.attr(this.property.nameId());\n        var av = \"\";\n        if (attr) {\n            var l = this.toLocalValue(this.toUIValue(attr.value()));\n            if (l) {\n                av = \"\" + l;\n            }\n        }\n        if (av == vl) {\n            return;\n        }\n        if (vl.length > 0) {\n            if (attr && attr.lowLevel().includePath()) {\n                var path = attr.lowLevel().includePath();\n                var actualUnit = attr.lowLevel().unit().resolve(path);\n                if (actualUnit) {\n                    var apath = actualUnit.absolutePath();\n                    fs.writeFileSync(apath, vl);\n                }\n                return;\n            }\n            if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n                return;\n            }\n            attr = this.node.attrOrCreate(this.property.nameId());\n            attr.setValue(\"\" + vl);\n        }\n        else {\n            if (attr) {\n                if (!this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n                    attr.remove();\n                }\n            }\n        }\n        if (attr.lowLevel() && attr.lowLevel().unit() && attr.lowLevel().unit() != this.node.lowLevel().unit()) {\n            provider.saveUnit(attr.lowLevel().unit());\n        }\n        var root = this.root();\n        if (root) {\n            root.update(this);\n        }\n    };\n    PropertyEditorInfo.prototype.toLocalValue = function (inputValue) {\n        return inputValue;\n    };\n    PropertyEditorInfo.prototype.toUIValue = function (value) {\n        return value;\n    };\n    PropertyEditorInfo.prototype.fromModelToEditor = function () {\n        var attr = this.node.attr(this.property.nameId());\n        if (attr || this.hasDefault()) {\n            var value;\n            if (this.property.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n                value = inheritedContent(this.node);\n            }\n            var val = value || (attr ? attr.value() : this.getDefaultValue());\n            if (val == null) {\n                val = \"\";\n            }\n            this.fld.getBinding().set(this.toUIValue(\"\" + val));\n        }\n    };\n    PropertyEditorInfo.prototype.render = function () {\n        var container = new UI.WrapPanel();\n        this.errorLabel = UI.label(\"\", UI.Icon.BUG, UI.TextClasses.ERROR);\n        this.errorLabel.setDisplay(false);\n        this.errorLabel.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n        var field = this.createField();\n        this.fld = field;\n        field.getBinding().addListener(this.update);\n        container.setCaption(this.title());\n        this.fromModelToEditor();\n        container.addChild(field);\n        var attr = this.node.attr(this.property.nameId());\n        if (attr) {\n            var val = attr.value();\n        }\n        var np = this.property.valueDocProvider();\n        if (np) {\n            var ac = np(val);\n            if (ac == null) {\n                ac = \"\";\n            }\n            var lbl = UI.label(ac, UI.Icon.INFO, UI.TextClasses.SUBTLE);\n            if (!ac) {\n                lbl.setDisplay(false);\n            }\n            container.addChild(lbl);\n            field.getBinding().addListener(function (x) {\n                var newDoc = np(field.getBinding().get());\n                if (!newDoc) {\n                    newDoc = \"\";\n                }\n                lbl.setText(newDoc);\n                lbl.setDisplay(newDoc.length > 0);\n            });\n            lbl.setStyle(\"margin-left\", (this._title.length + 1) + \"ch\");\n        }\n        if (attr && attr.lowLevel().includePath()) {\n            container.addChild(UI.label(\"Included from \" + attr.lowLevel().includePath(), UI.Icon.INFO, UI.TextClasses.SUBTLE));\n        }\n        //container.addChild(this.descLabel)\n        container.addChild(this.errorLabel);\n        this.rendered = true;\n        return container;\n    };\n    PropertyEditorInfo.prototype.createField = function () {\n        return UI.texfField(this.needsSeparateLabel() ? \"\" : this.property.nameId(), \"\", function (x) { });\n    };\n    return PropertyEditorInfo;\n}(Item));\nvar SimpleMultiEditor = (function (_super) {\n    __extends(SimpleMultiEditor, _super);\n    function SimpleMultiEditor() {\n        _super.apply(this, arguments);\n    }\n    SimpleMultiEditor.prototype.fromEditorToModel = function () {\n        var field = this.fld;\n        var vl = field.getBinding().get();\n        if (vl == null) {\n            vl = \"\";\n        }\n        var attrs = this.node.attributes(this.property.nameId());\n        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n        if (av == vl) {\n            return;\n        }\n        var ww = vl.split(\",\");\n        var vl = ww.filter(function (x) { return x.trim().length > 0; }).map(function (x) { return x.trim(); });\n        if (this.node.lowLevel().includePath() && !this.node.lowLevel().unit().resolve(this.node.lowLevel().includePath())) {\n            return;\n        }\n        var attribute = this.node.attrOrCreate(this.property.nameId());\n        attribute.setValues(vl);\n        var root = this.root();\n        if (root) {\n            root.update(this);\n        }\n    };\n    SimpleMultiEditor.prototype.fromModelToEditor = function () {\n        var attrs = this.node.attributes(this.property.nameId());\n        var av = attrs.map(function (x) { return escapeValue(\"\" + x.value()); }).join(\", \");\n        this.fld.getBinding().set(av);\n    };\n    return SimpleMultiEditor;\n}(PropertyEditorInfo));\nfunction escapeValue(v) {\n    if (v.length > 0) {\n        if (v.charAt(0) == \"'\") {\n            return '\"' + v + '\"';\n        }\n        if (v.charAt(0) == '\"') {\n            return '\"' + v + '\"';\n        }\n    }\n    if (v.indexOf(' ') != -1 || v.indexOf(',') != -1) {\n        if (v.indexOf('\"') == -1) {\n            return '\"' + v + '\"';\n        }\n        if (v.indexOf(\"'\") == -1) {\n            return \"'\" + v + \"'\";\n        }\n    }\n    return v;\n}\nvar CheckBoxField = (function (_super) {\n    __extends(CheckBoxField, _super);\n    function CheckBoxField() {\n        _super.apply(this, arguments);\n    }\n    CheckBoxField.prototype.createField = function () {\n        return new CheckBox2(this.property.nameId(), UI.Icon.NONE, function (x) { });\n    };\n    CheckBoxField.prototype.toUIValue = function (value) {\n        if (!value) {\n            return false;\n        }\n        if (value === true || value.trim() === 'true') {\n            return true;\n        }\n        return false;\n    };\n    CheckBoxField.prototype.toLocalValue = function (value) {\n        return value + \"\";\n    };\n    return CheckBoxField;\n}(PropertyEditorInfo));\nvar ActionsItem = (function (_super) {\n    __extends(ActionsItem, _super);\n    function ActionsItem(node) {\n        _super.call(this, \"Actions\", \"\");\n        this.node = node;\n    }\n    ActionsItem.prototype.render = function (r) {\n        return suggestions.generateSuggestionsPanel(this.node);\n    };\n    ActionsItem.prototype.dispose = function () {\n        this.node = null;\n    };\n    return ActionsItem;\n}(Item));\nvar ContextActionsItem = (function (_super) {\n    __extends(ContextActionsItem, _super);\n    function ContextActionsItem(node, name, actions) {\n        _super.call(this, name, \"\");\n        this.actions = actions;\n    }\n    ContextActionsItem.prototype.dispose = function () {\n    };\n    ContextActionsItem.prototype.render = function (r) {\n        var result = UI.hc();\n        result.addChild(UI.h3(this.title()));\n        this.actions.forEach(function (x) {\n            result.addChild(UI.button(x.name, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.SUCCESS, UI.Icon.CHECKLIST, function (a) { return x.onClick(); }).margin(3, 3, 3, 3));\n        });\n        return result;\n    };\n    return ContextActionsItem;\n}(Item));\nvar MarkdownFieldUI = (function (_super) {\n    __extends(MarkdownFieldUI, _super);\n    function MarkdownFieldUI(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('source.mdcustom');\n    }\n    MarkdownFieldUI.prototype.setLabelWidth = function () {\n    };\n    MarkdownFieldUI.prototype.setLabelHeight = function () {\n    };\n    MarkdownFieldUI.prototype.setRequired = function (v) {\n    };\n    return MarkdownFieldUI;\n}(UI.AtomEditorElement));\nvar XMLField = (function (_super) {\n    __extends(XMLField, _super);\n    function XMLField(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('text.xml');\n    }\n    XMLField.prototype.setLabelWidth = function () {\n    };\n    XMLField.prototype.setLabelHeight = function () {\n    };\n    XMLField.prototype.setRequired = function (v) {\n    };\n    return XMLField;\n}(UI.AtomEditorElement));\nvar JSONField = (function (_super) {\n    __extends(JSONField, _super);\n    function JSONField(text, onchange) {\n        _super.call(this, text, onchange);\n        this.margin(0, 0, 6, 12);\n        this.setMini(false);\n        this.setStyle(\"min-height\", \"100px\");\n        //this.setStyle(\"max-height\",\"200px\");\n        this.setStyle(\"border\", \"solid\");\n        this.setStyle(\"border-width\", \"1px\");\n        this.setStyle(\"border-radius\", \"2px\");\n        this.setStyle(\"font-size\", \"1.15em\");\n        this.setStyle(\"border-color\", \"rgba(0,0,0,0.2)\");\n        this.setGrammar('source.json');\n    }\n    JSONField.prototype.setLabelWidth = function () {\n    };\n    JSONField.prototype.setLabelHeight = function () {\n    };\n    JSONField.prototype.setRequired = function (v) {\n    };\n    return JSONField;\n}(UI.AtomEditorElement));\nvar MarkdownField = (function (_super) {\n    __extends(MarkdownField, _super);\n    function MarkdownField() {\n        _super.apply(this, arguments);\n    }\n    MarkdownField.prototype.createField = function () {\n        var editor = new MarkdownFieldUI(\"\", function (x) { });\n        return editor;\n    };\n    MarkdownField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return MarkdownField;\n}(PropertyEditorInfo));\nvar ExampleField = (function (_super) {\n    __extends(ExampleField, _super);\n    function ExampleField(property, node, text, title) {\n        _super.call(this, property, node);\n        this.property = property;\n        this.node = node;\n        this.text = text;\n        this.setDescription(\"\");\n        if (title)\n            this.setTitle(title);\n    }\n    ExampleField.prototype.createField = function () {\n        var editor = new JSONField(this.text, function (x) { });\n        return editor;\n    };\n    ExampleField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    ExampleField.prototype.fromModelToEditor = function () {\n    };\n    ExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n    };\n    return ExampleField;\n}(PropertyEditorInfo));\nvar XMLExampleField = (function (_super) {\n    __extends(XMLExampleField, _super);\n    function XMLExampleField(property, node, text, title) {\n        _super.call(this, property, node);\n        this.property = property;\n        this.node = node;\n        this.text = text;\n        this.setDescription(\"\");\n        if (title)\n            this.setTitle(title);\n    }\n    XMLExampleField.prototype.createField = function () {\n        var editor = new XMLField(this.text, function (x) { });\n        return editor;\n    };\n    XMLExampleField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    XMLExampleField.prototype.fromModelToEditor = function () {\n    };\n    XMLExampleField.prototype.fromEditorToModel = function (newValue, oldValue) {\n    };\n    return XMLExampleField;\n}(PropertyEditorInfo));\nvar XMLSchemaField = (function (_super) {\n    __extends(XMLSchemaField, _super);\n    function XMLSchemaField() {\n        _super.apply(this, arguments);\n    }\n    XMLSchemaField.prototype.createField = function () {\n        var editor = new XMLField(\"\", function (x) { });\n        return editor;\n    };\n    XMLSchemaField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return XMLSchemaField;\n}(PropertyEditorInfo));\nvar JSONSchemaField = (function (_super) {\n    __extends(JSONSchemaField, _super);\n    function JSONSchemaField() {\n        _super.apply(this, arguments);\n    }\n    JSONSchemaField.prototype.createField = function () {\n        var editor = new JSONField(\"\", function (x) { });\n        return editor;\n    };\n    JSONSchemaField.prototype.needsSeparateLabel = function () {\n        return true;\n    };\n    return JSONSchemaField;\n}(PropertyEditorInfo));\nvar SelectBox = (function (_super) {\n    __extends(SelectBox, _super);\n    function SelectBox() {\n        _super.apply(this, arguments);\n    }\n    SelectBox.prototype.createField = function () {\n        var options = valueOptions(this.property, this.node);\n        var a = this.node.attr(this.property.nameId());\n        if (a) {\n            if (!_.find(options, function (x) { return x == a.value(); })) {\n                options.push(a.value());\n            }\n        }\n        if (!this.property.isRequired() && !this.property.getAdapter(def.RAMLPropertyService).isKey()) {\n            options = [\"\"].concat(options);\n        }\n        var select = new UI.SelectField(this.property.nameId(), function (x) { }, \"\", UI.Icon.NONE, options);\n        select.getActualField().setOptions(options);\n        // select.clearUI();\n        return select;\n    };\n    return SelectBox;\n}(PropertyEditorInfo));\nvar TypeSelectBox = (function (_super) {\n    __extends(TypeSelectBox, _super);\n    function TypeSelectBox() {\n        _super.apply(this, arguments);\n    }\n    TypeSelectBox.prototype.fromEditorToModel = function (newValue, oldValue) {\n        //current implementation only allows changing the facets of certain types for safety\n        //TODO change this to arbitrary facets (remove type filtering)\n        var _this = this;\n        var oldNames = [];\n        var savedAttrs = [];\n        if (newValue && oldValue) {\n            try {\n                this.node.definition().allSuperTypes().forEach(function (superType) {\n                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n                        _this.addTypeFacets(superType, oldNames);\n                    }\n                });\n                savedAttrs = [].concat(this.node.attrs());\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n        _super.prototype.fromEditorToModel.call(this);\n        if (newValue && oldValue) {\n            try {\n                //collecting facets allowed to remove\n                var currentUniverse = this.node.definition().universe();\n                var names = [];\n                this.node.definition().allSuperTypes().forEach(function (superType) {\n                    if (_this.isAllowedTypeToReplaceFacets(superType)) {\n                        _this.addTypeFacets(superType, names);\n                    }\n                });\n                if (oldNames.length > 0 && names.length > 0) {\n                    savedAttrs.forEach(function (attribute) {\n                        if (_.find(oldNames, function (facetName) { return facetName == attribute.name(); })\n                            && !_.find(names, function (facetName) { return facetName == attribute.name(); })) {\n                            _this.node.remove(attribute);\n                        }\n                    });\n                }\n            }\n            catch (err) {\n                console.log(err);\n            }\n        }\n    };\n    TypeSelectBox.prototype.isAllowedTypeToReplaceFacets = function (currentTypeDef) {\n        return currentTypeDef.key() == universe.Universe10.StringTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.BooleanTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.NumberTypeDeclaration ||\n            currentTypeDef.key() == universe.Universe10.IntegerTypeDeclaration;\n    };\n    TypeSelectBox.prototype.addTypeFacets = function (currentTypeDef, names) {\n        currentTypeDef.properties().map(function (property) { return property.nameId(); }).forEach(function (name) { return names.push(name); });\n    };\n    return TypeSelectBox;\n}(SelectBox));\nvar TreeField = (function (_super) {\n    __extends(TreeField, _super);\n    function TreeField(input, caption) {\n        _super.call(this);\n        this.input = input;\n        var rend = {\n            render: function (n) {\n                var key = n.key();\n                var value = n.value();\n                if (typeof value === 'number' || typeof value === 'boolean') {\n                    value = \"\" + value;\n                }\n                if (typeof value != 'string') {\n                    value = \"\";\n                }\n                if (value.length > 30) {\n                    value = value.substring(0, 20) + \"...\";\n                }\n                if (!key) {\n                    if (value) {\n                        key = value;\n                        value = \"\";\n                    }\n                    else {\n                        key = \"-\";\n                        value = \"\";\n                    }\n                }\n                var res = UI.label(key, UI.Icon.CIRCUIT_BOARD, UI.TextClasses.HIGHLIGHT);\n                value = UI.label(value ? (\":\" + value) : \"\", UI.Icon.NONE, UI.TextClasses.SUCCESS);\n                var result = UI.hc(res, value);\n                return result;\n            }\n        };\n        var getChildren = function (x) {\n            return x.children();\n        };\n        var viewer = UI.treeViewer(getChildren, rend, function (x) { return x.key(); });\n        var inputV = {\n            children: function () {\n                return [input];\n            }\n        };\n        viewer.setInput(inputV);\n        this.addChild(UI.label(caption));\n        this.addChild(viewer);\n    }\n    TreeField.prototype.setLabelWidth = function () {\n    };\n    TreeField.prototype.setLabelHeight = function () {\n    };\n    TreeField.prototype.setRequired = function (v) {\n    };\n    return TreeField;\n}(UI.Panel));\nvar StructuredField = (function (_super) {\n    __extends(StructuredField, _super);\n    function StructuredField(pr, node, stvalue) {\n        _super.call(this, pr, node);\n        this.stvalue = stvalue;\n    }\n    StructuredField.prototype.createField = function () {\n        var tm = new TreeField(this.stvalue.lowLevel(), this.title() + \":\");\n        return tm;\n    };\n    return StructuredField;\n}(PropertyEditorInfo));\nvar LowLevelTreeField = (function (_super) {\n    __extends(LowLevelTreeField, _super);\n    function LowLevelTreeField(pr, node, lowLevel, title) {\n        _super.call(this, pr, node);\n        this.lowLevel = lowLevel;\n        if (title)\n            this.setTitle(title);\n    }\n    LowLevelTreeField.prototype.createField = function () {\n        var tm = new TreeField(this.lowLevel, this.title() + \":\");\n        return tm;\n    };\n    return LowLevelTreeField;\n}(PropertyEditorInfo));\nfunction category(p, node) {\n    if (p.getAdapter(def.RAMLPropertyService).isKey() || p.isRequired()) {\n        return null;\n    }\n    if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n        if (universehelpers.isDocumentationProperty(p) ||\n            universehelpers.isUsageProperty(p) ||\n            universehelpers.isDescriptionProperty(p) ||\n            universehelpers.isDisplayNameProperty(p) ||\n            universehelpers.isTitleProperty(p)) {\n            return \"Documentation\";\n        }\n        if (universehelpers.isAnnotationsProperty(p) ||\n            universehelpers.isIsProperty(p) ||\n            universehelpers.isSecuredByProperty(p) ||\n            (universehelpers.isTypeProperty(p) && !p.getAdapter(def.RAMLPropertyService).isTypeExpr())) {\n            return \"References\";\n        }\n        if (universehelpers.isProtocolsProperty(p)) {\n            return \"General\";\n        }\n    }\n    if (universehelpers.isTypeProperty(p)) {\n        if (p.domain() && !p.domain().getAdapter(def.RAMLService).isUserDefined()) {\n            return null;\n        }\n    }\n    if (node.property()) {\n        if (p.domain() && p.domain() != node.property().range()) {\n            return \"Facets\";\n        }\n    }\n    return \"General\";\n}\nvar valueOptions = function (x, node) {\n    var vls = search.enumValues(x, node);\n    if (universehelpers.isNameProperty(x)) {\n        if (node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n            if (node.property() && universehelpers.isBodyProperty(node.property())) {\n                if (!(node.property() instanceof def.UserDefinedProp)) {\n                    if (node.parent() &&\n                        universehelpers.isMethodType(node.parent().definition())) {\n                        return [\"application/json\", \"application/xml\", \"multipart/form-data\", \"application/x-www-form-urlencoded\"];\n                    }\n                    return [\"application/json\", \"application/xml\"];\n                }\n            }\n        }\n    }\n    if ((!vls) || vls.length == 0) {\n        var sug = x.suggester();\n        if (sug) {\n            vls = sug(node);\n        }\n        if ((!vls) || vls.length == 0) {\n            vls = x.getOftenKeys();\n        }\n    }\n    return _.unique(vls);\n};\nfunction addExampleControl(property, node, exampleElement, example, container) {\n    if (example.isYAML()) {\n        container.addItemToCategory(category(property, node), new LowLevelTreeField(property, node, exampleElement.lowLevel(), example.name()));\n    }\n    else if (example.isJSONString()) {\n        container.addItemToCategory(category(property, node), new ExampleField(property, node, example.asString(), example.name()));\n    }\n    else if (example.isXMLString()) {\n        container.addItemToCategory(category(property, node), new XMLExampleField(property, node, example.asString(), example.name()));\n    }\n}\nfunction buildItem(node, dialog) {\n    rp.utils.updateType(node);\n    var props = node.propertiesAllowedToUse();\n    var result = new TopLevelNode(node);\n    if (node.property() && node.property().description()) {\n        result.setDescription(node.property().description());\n    }\n    var isFragment = false;\n    if (node.definition() && !node.parent()) {\n        var fragmentName = rp.utils.getFragmentDefenitionName(node);\n        var superTypes = node.definition().allSuperTypes();\n        superTypes.push(node.definition());\n        superTypes.forEach(function (superType) {\n            if (superType.nameId && superType.nameId() === fragmentName) {\n                isFragment = true;\n            }\n        });\n    }\n    props = props.filter(function (x) {\n        if (isFragment && universehelpers.isNameProperty(x)) {\n            return false;\n        }\n        if ((universehelpers.isNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n            return false;\n        }\n        if ((universehelpers.isDisplayNameProperty(x)) && universehelpers.isApiType(node.definition()) && (!x.domain().getAdapter(def.RAMLService).isUserDefined())) {\n            return false;\n        }\n        if (node.definition() && node.definition().isAssignableFrom(universe.Universe10.ExampleSpec.name) && !universehelpers.isNameProperty(x)) {\n            if (node.attrValue('value') === null) {\n                return false;\n            }\n        }\n        return true;\n    });\n    props = props.sort(function (x, y) {\n        if (x.getAdapter(def.RAMLPropertyService).isKey()) {\n            return -1;\n        }\n        if (y.getAdapter(def.RAMLPropertyService).isKey()) {\n            return 1;\n        }\n        if (x.nameId() < y.nameId()) {\n            return -1;\n        }\n        return 1;\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            //\n            if (universehelpers.isAnnotationsProperty(x)) {\n                //we ban annotations from appearing as we can not provide the editing\n                //with this mechanism\n                return;\n            }\n            if (universehelpers.isBooleanTypeType(x.range())) {\n                return;\n            }\n            if (universehelpers.isMarkdownStringType(x.range())) {\n                return;\n            }\n            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/json\"){\n            //     result.addItemToCategory(category(x,node), new ExampleField(x, node));\n            //     return;\n            // }\n            // if (x.getAdapter(def.RAMLPropertyService).isExampleProperty()&&node.name()==\"application/xml\"){\n            //     result.addItemToCategory(category(x,node), new XMLExampleField(x, node));\n            //     return;\n            // }\n            var nm = node.attr(x.nameId());\n            if (nm && typeof nm.value() === \"object\" && nm.value() !== null) {\n                result.addItemToCategory(category(x, node), new StructuredField(x, node, nm.value()));\n                return;\n            }\n            if (x.getAdapter(def.RAMLPropertyService).isTypeExpr()) {\n                var vl = inheritedContent(node);\n                if (vl) {\n                    if (vl.trim().charAt(0) == '{') {\n                        result.addItemToCategory(category(x, node), new JSONSchemaField(x, node));\n                        return;\n                    }\n                    if (vl.trim().charAt(0) == '<') {\n                        result.addItemToCategory(category(x, node), new XMLSchemaField(x, node));\n                        return;\n                    }\n                }\n            }\n            if (universehelpers.isSchemaProperty(x)\n                && x.domain() && x.domain().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n                return;\n            }\n            var vls = valueOptions(x, node);\n            if (vls && vls.length > 0 && ((x.domain() && x.domain().getAdapter(def.RAMLService).isUserDefined()))) {\n                if (universehelpers.isTypeProperty(x) &&\n                    node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n                    result.addItemToCategory(category(x, node), new TypeSelectBox(x, node));\n                }\n                else {\n                    result.addItemToCategory(category(x, node), new SelectBox(x, node));\n                }\n            }\n            else {\n                if (x.isMultiValue()) {\n                    result.addItemToCategory(category(x, node), new SimpleMultiEditor(x, node));\n                }\n                else {\n                    result.addItemToCategory(category(x, node), new PropertyEditorInfo(x, node));\n                }\n            }\n        }\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            if (universehelpers.isBooleanTypeType(x.range())) {\n                result.addItemToCategory(category(x, node), new CheckBoxField(x, node));\n            }\n        }\n    });\n    props.forEach(function (x) {\n        if (x.isValueProperty()) {\n            if (universehelpers.isMarkdownStringType(x.range())) {\n                result.addItemToCategory(category(x, node), new MarkdownField(x, node));\n            }\n        }\n    });\n    if (universehelpers.isTypeDeclarationSibling(node.definition())) {\n        props.forEach(function (x) {\n            if (universehelpers.isExampleProperty(x)) {\n                var exampleElement = node.element(universe.Universe10.TypeDeclaration.properties.example.name);\n                if (exampleElement) {\n                    var examples = node.localType().examples();\n                    if (examples && examples.length == 1) {\n                        var example = examples[0];\n                        addExampleControl(x, node, exampleElement, example, result);\n                    }\n                }\n            }\n            else if (universehelpers.isExamplesProperty(x)) {\n                var exampleElements = node.elementsOfKind(universe.Universe10.TypeDeclaration.properties.examples.name);\n                if (exampleElements && exampleElements.length > 0) {\n                    var examples = node.localType().examples();\n                    exampleElements.forEach(function (exampleElement) {\n                        var exampleElementName = exampleElement.attrValue(universe.Universe10.ExampleSpec.properties.name.name);\n                        if (exampleElementName) {\n                            var example = _.find(examples, function (currentExample) { return currentExample.name() == exampleElementName; });\n                            if (example) {\n                                addExampleControl(x, node, exampleElement, example, result);\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n    if (!dialog) {\n        result.addItemToCategory(\"Palette\", new ActionsItem(node));\n        var visibleActions = contextActions.calculateCurrentActions(contextActions.TARGET_RAML_EDITOR_NODE);\n        var cats = _.groupBy(visibleActions, function (x) { return x.category.join(\"/\"); });\n        for (var cat in cats) {\n            result.addItemToCategory(\"Palette\", new ContextActionsItem(node, cat, cats[cat]));\n        }\n    }\n    if (node.definition().getAdapter(def.RAMLService).isUserDefined() || node.definition().isAssignableFrom(universe.Universe10.TypeDeclaration.name)) {\n        result.addItemToCategory(\"Type\", new TypeDisplayItem(node));\n    }\n    return result;\n}\nexports.buildItem = buildItem;\nfunction inheritedContent(node) {\n    var type = (node.associatedType && node.associatedType()) || (node.localType && node.localType());\n    while (type) {\n        if (type.superTypes().length > 1) {\n            return '';\n        }\n        if (type.isExternal()) {\n            return type.schemaString;\n        }\n        type = type.superTypes()[0];\n    }\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/details2.js\n ** module id = 72\n ** module chunks = 0\n **/","\"use strict\";\nvar KeyValuePair = (function () {\n    function KeyValuePair() {\n    }\n    return KeyValuePair;\n}());\nexports.KeyValuePair = KeyValuePair;\nvar Map = (function () {\n    function Map(ms) {\n        var _this = this;\n        if (ms === void 0) { ms = []; }\n        this.mappings = [];\n        ms.forEach(function (m) { return _this.mappings.push(m); });\n    }\n    Map.prototype.volume = function () { return this.mappings.length; };\n    Map.prototype.pairs = function () { return [].concat(this.mappings); };\n    Map.prototype.set = function (key, value) {\n        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n        if (pairs.length == 0)\n            this.mappings.push({ key: key, value: value });\n        else\n            pairs[0].value = value;\n    };\n    Map.prototype.get = function (key) {\n        var pairs = this.mappings.filter(function (x) { return x.key == key; });\n        return (pairs.length == 0) ? null : pairs[0].value;\n    };\n    Map.prototype.map = function (callbackfn) {\n        return this.mappings.map(function (x) { return x.value; }).map(callbackfn);\n    };\n    Map.prototype.forEach = function (callbackfn) {\n        this.mappings.map(function (x) { return x.value; }).forEach(callbackfn);\n    };\n    Map.prototype.filter = function (callbackfn) {\n        return this.mappings.map(function (x) { return x.value; }).filter(callbackfn);\n    };\n    return Map;\n}());\nexports.Map = Map;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/pair.js\n ** module id = 73\n ** module chunks = 0\n **/","module.exports = require(\"invariant\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"invariant\"\n ** module id = 74\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar UI = require(\"atom-ui-lib\");\nvar hl = require(\"raml-1-parser\");\nvar universes = hl.universes;\nvar stubs = hl.stubs;\nvar _ = require(\"underscore\");\nvar ds = hl.ds;\nvar editorTools = require(\"./editor-tools\");\nvar Inserter = (function () {\n    function Inserter(value, property, node) {\n        this.value = value;\n        this.property = property;\n        this.node = node;\n    }\n    Inserter.prototype.insert = function () {\n        var rn = this.property.range();\n        var key = this.value;\n        if (this.property.nameId() == universes.Universe10.Method.properties.body.name) {\n            key = \"application/json\";\n        }\n        if (this.property.nameId() == universes.Universe10.MethodBase.properties.responses.name) {\n            key = \"200\";\n        }\n        //TODO we need to take care of keys globally, including collections\n        //if (this.property.nameId() == universes.Universe10.TypeDeclaration.properties.xml.name\n        //    && this.node.definition().isAssignableFrom(universes.Universe10.TypeDeclaration.name)) {\n        //    key = universes.Universe10.XMLSerializationHints.properties.name.name;\n        //}\n        var newNode = stubs.createStubNode(rn, this.property, key);\n        editorTools.aquireManager()._cleanOutline = true;\n        //this is a hack TODO FIX ME we should remove it after we will fix partial reconcile on outline\n        this.node.add(newNode);\n        editorTools.aquireManager().patchCurrentNode(this.node);\n    };\n    return Inserter;\n}());\nfunction generateSuggestionsPanel(node) {\n    var cm = node.definition().allProperties();\n    var result = UI.vc();\n    var hc = UI.hc();\n    result.addChild(UI.h3(\"Insertions and Delete: \"));\n    result.addChild(hc);\n    cm.forEach(function (x) {\n        if (x.isValueProperty()) {\n            return;\n        }\n        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n            return;\n        }\n        if (_.find(node.lowLevel().children(), function (y) { return y.key() == x.nameId(); })) {\n            return;\n        }\n        if (node.lowLevel().includesContents()) {\n            return;\n        }\n        var inserter = new Inserter(\"\", x, node);\n        hc.addChild(UI.button(x.nameId(), UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.INFO, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n    });\n    cm.forEach(function (x) {\n        if (x.isValueProperty()) {\n            return;\n        }\n        if (x.getAdapter(ds.RAMLPropertyService).isMerged()) {\n            var enums = x.enumOptions();\n            if (enums) {\n                enums.forEach(function (y) {\n                    if (_.find(node.lowLevel().children(), function (z) { return z.key() == y; })) {\n                        return;\n                    }\n                    if (node.lowLevel().includesContents()) {\n                        return;\n                    }\n                    var inserter = new Inserter(y, x, node);\n                    hc.addChild(UI.button(y, UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.WARNING, UI.Icon.NONE, function (x) { return inserter.insert(); }).margin(3, 3, 3, 3));\n                });\n            }\n            return;\n        }\n    });\n    hc.addChild(UI.button(\"Delete\", UI.ButtonSizes.EXTRA_SMALL, UI.ButtonHighlights.ERROR, UI.Icon.NONE, function (x) {\n        if (node.parent()) {\n            node.parent().remove(node);\n        }\n        else {\n            node.lowLevel().unit().updateContent('');\n            editorTools.aquireManager().updateText();\n            editorTools.aquireManager().updateDetails();\n        }\n    }).margin(3, 3, 3, 3));\n    return result;\n}\nexports.generateSuggestionsPanel = generateSuggestionsPanel;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/suggestions-panel.js\n ** module id = 75\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar _ = require(\"underscore\");\nvar UI = require(\"atom-ui-lib\");\nvar hl = require(\"raml-1-parser\");\nvar def = hl.ds;\nfunction findBuiltInValueType(type) {\n    if (type.isValueType() && type.isBuiltIn())\n        return type;\n    var superTypes = type.allSuperTypes();\n    if (superTypes == null || superTypes.length == 0)\n        return null;\n    return _.find(superTypes, function (superType) { return (superType.isValueType() && superType.isBuiltIn()); });\n}\nfunction getValueTypeDisplayName(type) {\n    var builtinValueType = findBuiltInValueType(type);\n    if (!builtinValueType)\n        type.nameId() ? type.nameId() : \"\";\n    if (builtinValueType.nameId() == \"StringType\") {\n        return \"string\";\n    }\n    else if (builtinValueType.nameId() == \"AnyType\") {\n        return \"any\";\n    }\n    else if (builtinValueType.nameId() == \"NumberType\") {\n        return \"number\";\n    }\n    else if (builtinValueType.nameId() == \"IntegerType\") {\n        return \"integer\";\n    }\n    else if (builtinValueType.nameId() == \"NullType\") {\n        return \"null\";\n    }\n    else if (builtinValueType.nameId() == \"TimeOnlyType\") {\n        return \"time-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateOnlyType\") {\n        return \"date-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateTimeOnlyType\") {\n        return \"datetime-only\";\n    }\n    else if (builtinValueType.nameId() == \"DateTimeType\") {\n        return \"datetime\";\n    }\n    else if (builtinValueType.nameId() == \"FileType\") {\n        return \"file\";\n    }\n    else if (builtinValueType.nameId() == \"BooleanType\") {\n        return \"boolean\";\n    }\n    else if (builtinValueType.nameId() == \"AnnotationTarget\") {\n        return \"annotation target\";\n    }\n    return builtinValueType.nameId() ? builtinValueType.nameId() : \"\";\n}\nfunction getTypeDisplayName(type) {\n    if (type == null)\n        return \"\";\n    if (type.isValueType()) {\n        return getValueTypeDisplayName(type);\n    }\n    else if (type.hasArrayInHierarchy()) {\n        var componentType = type.arrayInHierarchy().componentType();\n        if (componentType && componentType.nameId()) {\n            return getTypeDisplayName(componentType) + \"[]\";\n        }\n        else {\n            return \"array\";\n        }\n    }\n    else if (type.hasUnionInHierarchy()) {\n        var asUnion = type.unionInHierarchy();\n        return getTypeDisplayName(asUnion.leftType()) +\n            \" | \" + getTypeDisplayName(asUnion.rightType());\n    }\n    return type.nameId() ? type.nameId() : \"\";\n}\nexports.getTypeDisplayName = getTypeDisplayName;\nvar renderType = function (definition) {\n    var result = UI.vc();\n    result.addChild(UI.label(\"definition:\" + getTypeDisplayName(definition)));\n    var elements = definition.properties();\n    var superTypes = definition.superTypes();\n    if (superTypes) {\n        result.addChild(UI.h3(\"Super types:\"));\n        definition.allSuperTypes().forEach(function (x) {\n            result.addChild(UI.hc(UI.label(getTypeDisplayName(x), UI.Icon.TAG)));\n        });\n    }\n    var rf = definition.getAdapter(def.RAMLService).getRepresentationOf();\n    if (rf) {\n        var facets = rf.getFixedFacets();\n        if (Object.keys(facets).length > 0) {\n            result.addChild(UI.h3(\"All facets\"));\n            Object.keys(facets).forEach(function (x) {\n                result.addChild(UI.label(x + \":\" + facets[x].value()));\n            });\n        }\n    }\n    if (elements && elements.length > 0) {\n        result.addChild(UI.h3(\"All properties\"));\n        elements.forEach(function (property) {\n            var propertyName = property.nameId();\n            if (!property.isRequired()) {\n                propertyName += \"?\";\n            }\n            result.addChild(UI.hc(UI.label(propertyName, UI.Icon.LINK), UI.label(\": \" + getTypeDisplayName(property.range()), UI.Icon.NONE, UI.TextClasses.WARNING)));\n        });\n    }\n    if (definition.hasArrayInHierarchy()) {\n        result.addChild(UI.h3(\"Component type:\"));\n        result.addChild(renderType(definition.arrayInHierarchy().componentType()));\n    }\n    if (definition.hasUnionInHierarchy()) {\n        result.addChild(UI.h3(\"Union type:\"));\n        result.addChild(UI.h3(\"Left:\"));\n        result.addChild(renderType(definition.unionInHierarchy().leftType()));\n        result.addChild(UI.h3(\"Right:\"));\n        result.addChild(renderType(definition.unionInHierarchy().rightType()));\n    }\n    return result;\n};\nfunction render(node) {\n    var wn = node.wrapperNode();\n    var definition = wn.highLevel().localType();\n    return renderType(definition);\n}\nexports.render = render;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/typeDisplay.js\n ** module id = 76\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/main.d.ts\" />\n\"use strict\";\nvar hl = require(\"raml-1-parser\");\nvar ds = hl.ds;\nvar universe = ds.universesInfo;\nfunction getDefaultValue(node, property) {\n    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n        return node.name().indexOf(\"?\") !== node.name().length - 1;\n    }\n}\nexports.getDefaultValue = getDefaultValue;\nfunction hasDefault(property) {\n    if (property.nameId() === universe.Universe10.TypeDeclaration.properties.required.name) {\n        return true;\n    }\n    return false;\n}\nexports.hasDefault = hasDefault;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/atom/editor-tools/default-values.js\n ** module id = 77\n ** module chunks = 0\n **/"],"sourceRoot":""}