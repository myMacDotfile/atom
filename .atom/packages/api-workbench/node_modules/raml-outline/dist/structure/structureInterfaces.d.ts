export import parser = require("raml-1-parser");
import hl = parser.hl;
export interface StructureNodeJSON {
    text: string;
    typeText: string;
    icon: string;
    textStyle: string;
    key: string;
    start: number;
    end: number;
    selected: boolean;
    children: StructureNodeJSON[];
    category: string;
}
export interface StructureNode extends StructureNodeJSON {
    children: StructureNode[];
    getSource(): hl.IParseResult;
    toJSON(): StructureNodeJSON;
}
export interface LabelProvider {
    getLabelText(node: hl.IParseResult): string;
    getTypeText(node: hl.IParseResult): string;
}
export interface Decorator {
    getIcon(node: hl.IParseResult): string;
    getTextStyle(node: hl.IParseResult): string;
}
export interface ContentProvider {
    (node: StructureNode): StructureNode[];
}
export interface CategoryFilter {
    (node: hl.IParseResult): boolean;
}
export interface VisibilityFilter {
    (node: hl.IParseResult): boolean;
}
export interface IASTProvider {
    getASTRoot(): hl.IHighLevelNode;
    getSelectedNode(): hl.IParseResult;
}
export interface KeyProvider {
    (node: hl.IParseResult): string;
}
