{
  "_args": [
    [
      {
        "raw": "atom-tree-view@git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
        "scope": null,
        "escapedName": "atom-tree-view",
        "name": "atom-tree-view",
        "rawSpec": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
        "spec": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
          "sshUrl": "git+ssh://git@github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
          "httpsUrl": "git+https://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
          "gitUrl": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
          "shortcut": "github:redefiance/atom-tree-view#72815253d0ace043cb519e313da15e6dc836ca07",
          "directUrl": "https://raw.githubusercontent.com/redefiance/atom-tree-view/72815253d0ace043cb519e313da15e6dc836ca07/package.json"
        }
      },
      "/private/var/folders/lc/jd_88kh90xx1k05lgmznb76w0000gn/T/d-117611-3628-o8v7kd.tj8257b9/package.tgz"
    ]
  ],
  "_from": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
  "_id": "atom-tree-view@0.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/go-find-references/atom-tree-view",
  "_phantomChildren": {},
  "_requested": {
    "raw": "atom-tree-view@git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
    "scope": null,
    "escapedName": "atom-tree-view",
    "name": "atom-tree-view",
    "rawSpec": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
    "spec": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
      "sshUrl": "git+ssh://git@github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
      "httpsUrl": "git+https://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
      "gitUrl": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
      "shortcut": "github:redefiance/atom-tree-view#72815253d0ace043cb519e313da15e6dc836ca07",
      "directUrl": "https://raw.githubusercontent.com/redefiance/atom-tree-view/72815253d0ace043cb519e313da15e6dc836ca07/package.json"
    }
  },
  "_requiredBy": [
    "/go-find-references"
  ],
  "_resolved": "git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
  "_shasum": "2873f7f6dab48ddae81dbd7f7a1d24387530fde8",
  "_shrinkwrap": null,
  "_spec": "atom-tree-view@git://github.com/redefiance/atom-tree-view.git#72815253d0ace043cb519e313da15e6dc836ca07",
  "_where": "/private/var/folders/lc/jd_88kh90xx1k05lgmznb76w0000gn/T/d-117611-3628-o8v7kd.tj8257b9/package.tgz",
  "bugs": {
    "url": "https://github.com/redefiance/atom-tree-view/issues"
  },
  "dependencies": {
    "space-pen": "latest"
  },
  "description": "A tree view template based on SpacePen Views",
  "devDependencies": {},
  "gitHead": "72815253d0ace043cb519e313da15e6dc836ca07",
  "homepage": "https://github.com/redefiance/atom-tree-view#readme",
  "license": "MIT",
  "main": "./lib/main",
  "name": "atom-tree-view",
  "optionalDependencies": {},
  "private": true,
  "readme": "# atom-tree-view\n\nEasily create a nested tree view in the style of Atoms built-in [TreeView](https://github.com/atom/tree-view).\n\nThis package provides two classes:\n```coffee\n{TreeView, TreeItem} = require 'atom-tree-view'\n```\n\n### TreeView\n```coffee\nconstructor: ()->\n```\nCreates a new `TreeView` which extends from [SpacePen](https://github.com/atom/space-pen) `View`.\n\n```coffee\naddItem: (item)->\n```\nAdds a `TreeItem` as new top-level item. It will be inserted at\nthe end of the list.\n\n```coffee\ngetItem: (id)->\n# or\ngetItem: (path)->\n```\n* `id`: A String that denotes the id of a top-level item.  \n* `path`: An Array of Strings that denote the id of an item at\neach hierarchy level, starting with a top-level item.  \nReturns a `TreeItem` or `undefined` if none is found.\n\n```coffee\ncreateItems: (path, createFunction)->\n```\n* `path`: An Array of Strings that denote the id of an item at\neach hierarchy level, starting with a top-level item.  \n* `createFunction`: A function that is called for each item in `path` that does\nnot yet exist. It takes the id and the hierarchy level (starting at 0) as\nparameters and is expected to return a `TreeItem`.\n\n```coffee\nselect: (item)->\n```\nSelects a specific `TreeItem`.\n\n### TreeItem\n```coffee\nconstructor: (id)->\n# or\nconstructor: (id, icon)->\n# or\nconstructor: (id, dom)->\n```\n* `id`: A String that uniquely identifies this TreeItem within a hierarchy layer\nof a `TreeView`. It will be used as the text on the item unless `dom` is specified.  \n* `icon` [Optional]: A String that describes an icon css class like 'icon-file-directory'.  \n* `dom` [Optional]: A DOM node or jQuery wrapper that will be used as the content of this item instead of the regular icon and text.\n\nCreates a new `TreeItem` which extends from [SpacePen](https://github.com/atom/space-pen) `View`.\n\n```coffee\nonConfirm:  (f)->\nonSelect:   (f)->\nonDeselect: (f)->\nonRemove:   (f)->\n```\nAdds the callback function f to various events. `@` is bound to the instance of `TreeItem`.  \n`onConfirm` is triggered when the item was clicked twice or the enter key is hit.  \n`onSelect` is triggered when the item was selected.  \n`onDeselect` is triggered when the item was deselected.  \n`onRemove` is triggered when `remove()` was called.\n\n```coffee\naddItem: (item)->\n```\nAdds a `TreeItem` as a subitem of this item. It will be inserted at\nthe end of the list.\n\n```coffee\ngetItem: (id)->\n```\n* `id`: A String that denotes the id of a subitem.  \nReturns a `TreeItem` or `undefined` if none is found.\n\n```coffee\nisExpanded: ()->\n```\nReturns true if this item has subitems and is expanded. `TreeItem` will default to being collapsed unless `expand()` is called.\n\n```coffee\nexpand: (recursive = false)->\n```\n* `recursive`: If true, all parent items will be expanded as well, so this item is guaranteed to be visible.\n\n```coffee\ncollapse: (recursive = false)->\n```\n* `recursive`: If true, all subitems (recursively) will be collapsed as well.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/redefiance/atom-tree-view.git"
  },
  "version": "0.0.0"
}
